/*
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.3.2
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package uk.co.bluedust.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import uk.co.bluedust.model.DestinyComponentsKiosksDestinyKioskItem;

/**
 * A Kiosk is a Vendor (DestinyVendorDefinition) that sells items based on whether you have already acquired that item before.  This component returns information about what Kiosk items are available to you on a *Profile* level. It is theoretically possible for Kiosks to have items gated by specific Character as well. If you ever have those, you will find them on the individual character&#39;s DestinyCharacterKiosksComponent.  Note that, because this component returns vendorItemIndexes (that is to say, indexes into the Kiosk Vendor&#39;s itemList property), these results are necessarily content version dependent. Make sure that you have the latest version of the content manifest databases before using this data.
 */
@ApiModel(description = "A Kiosk is a Vendor (DestinyVendorDefinition) that sells items based on whether you have already acquired that item before.  This component returns information about what Kiosk items are available to you on a *Profile* level. It is theoretically possible for Kiosks to have items gated by specific Character as well. If you ever have those, you will find them on the individual character's DestinyCharacterKiosksComponent.  Note that, because this component returns vendorItemIndexes (that is to say, indexes into the Kiosk Vendor's itemList property), these results are necessarily content version dependent. Make sure that you have the latest version of the content manifest databases before using this data.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-11-04T16:50:06.922Z")
public class DestinyComponentsKiosksDestinyKiosksComponent {
  @JsonProperty("kioskItems")
  private Map<String, List<DestinyComponentsKiosksDestinyKioskItem>> kioskItems = null;

  public DestinyComponentsKiosksDestinyKiosksComponent kioskItems(Map<String, List<DestinyComponentsKiosksDestinyKioskItem>> kioskItems) {
    this.kioskItems = kioskItems;
    return this;
  }

  public DestinyComponentsKiosksDestinyKiosksComponent putKioskItemsItem(String key, List<DestinyComponentsKiosksDestinyKioskItem> kioskItemsItem) {
    if (this.kioskItems == null) {
      this.kioskItems = new HashMap<>();
    }
    this.kioskItems.put(key, kioskItemsItem);
    return this;
  }

   /**
   * A dictionary keyed by the Kiosk Vendor&#39;s hash identifier (use it to look up the DestinyVendorDefinition for the relevant kiosk vendor), and whose value is a list of all the items that the user can \&quot;see\&quot; in the Kiosk, and any other interesting metadata.
   * @return kioskItems
  **/
  @ApiModelProperty(value = "A dictionary keyed by the Kiosk Vendor's hash identifier (use it to look up the DestinyVendorDefinition for the relevant kiosk vendor), and whose value is a list of all the items that the user can \"see\" in the Kiosk, and any other interesting metadata.")
  public Map<String, List<DestinyComponentsKiosksDestinyKioskItem>> getKioskItems() {
    return kioskItems;
  }

  public void setKioskItems(Map<String, List<DestinyComponentsKiosksDestinyKioskItem>> kioskItems) {
    this.kioskItems = kioskItems;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DestinyComponentsKiosksDestinyKiosksComponent destinyComponentsKiosksDestinyKiosksComponent = (DestinyComponentsKiosksDestinyKiosksComponent) o;
    return Objects.equals(this.kioskItems, destinyComponentsKiosksDestinyKiosksComponent.kioskItems);
  }

  @Override
  public int hashCode() {
    return Objects.hash(kioskItems);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DestinyComponentsKiosksDestinyKiosksComponent {\n");
    
    sb.append("    kioskItems: ").append(toIndentedString(kioskItems)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

