/*
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.3.2
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package uk.co.bluedust.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Nodes can have different visual states. This object represents a single visual state (\&quot;highlight type\&quot;) that a node can be in, and the unlock expression condition to determine whether it should be set.
 */
@ApiModel(description = "Nodes can have different visual states. This object represents a single visual state (\"highlight type\") that a node can be in, and the unlock expression condition to determine whether it should be set.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-11-04T23:34:27.728Z")
public class DestinyDefinitionsDirectorDestinyActivityGraphNodeFeaturingStateDefinition {
  @JsonProperty("highlightType")
  private Object highlightType = null;

  public DestinyDefinitionsDirectorDestinyActivityGraphNodeFeaturingStateDefinition highlightType(Object highlightType) {
    this.highlightType = highlightType;
    return this;
  }

   /**
   * The node can be highlighted in a variety of ways - the game iterates through these and finds the first FeaturingState that is valid at the present moment given the Game, Account, and Character state, and renders the node in that state. See the ActivityGraphNodeHighlightType enum for possible values.
   * @return highlightType
  **/
  @ApiModelProperty(value = "The node can be highlighted in a variety of ways - the game iterates through these and finds the first FeaturingState that is valid at the present moment given the Game, Account, and Character state, and renders the node in that state. See the ActivityGraphNodeHighlightType enum for possible values.")
  public Object getHighlightType() {
    return highlightType;
  }

  public void setHighlightType(Object highlightType) {
    this.highlightType = highlightType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DestinyDefinitionsDirectorDestinyActivityGraphNodeFeaturingStateDefinition destinyDefinitionsDirectorDestinyActivityGraphNodeFeaturingStateDefinition = (DestinyDefinitionsDirectorDestinyActivityGraphNodeFeaturingStateDefinition) o;
    return Objects.equals(this.highlightType, destinyDefinitionsDirectorDestinyActivityGraphNodeFeaturingStateDefinition.highlightType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(highlightType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DestinyDefinitionsDirectorDestinyActivityGraphNodeFeaturingStateDefinition {\n");
    
    sb.append("    highlightType: ").append(toIndentedString(highlightType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

