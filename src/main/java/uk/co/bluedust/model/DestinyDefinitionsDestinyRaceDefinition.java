/*
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.3.2
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package uk.co.bluedust.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import uk.co.bluedust.model.DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition;

/**
 * In Destiny, \&quot;Races\&quot; are really more like \&quot;Species\&quot;. Sort of. I mean, are the Awoken a separate species from humans? I&#39;m not sure. But either way, they&#39;re defined here. You&#39;ll see Exo, Awoken, and Human as examples of these Species. Players will choose one for their character.
 */
@ApiModel(description = "In Destiny, \"Races\" are really more like \"Species\". Sort of. I mean, are the Awoken a separate species from humans? I'm not sure. But either way, they're defined here. You'll see Exo, Awoken, and Human as examples of these Species. Players will choose one for their character.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-12-08T21:00:47.497Z")
public class DestinyDefinitionsDestinyRaceDefinition {
  @JsonProperty("displayProperties")
  private DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition displayProperties = null;

  @JsonProperty("raceType")
  private Object raceType = null;

  @JsonProperty("genderedRaceNames")
  private Map<String, String> genderedRaceNames = null;

  @JsonProperty("hash")
  private Long hash = null;

  @JsonProperty("index")
  private Integer index = null;

  @JsonProperty("redacted")
  private Boolean redacted = null;

  public DestinyDefinitionsDestinyRaceDefinition displayProperties(DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition displayProperties) {
    this.displayProperties = displayProperties;
    return this;
  }

   /**
   * Get displayProperties
   * @return displayProperties
  **/
  @ApiModelProperty(value = "")
  public DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition getDisplayProperties() {
    return displayProperties;
  }

  public void setDisplayProperties(DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition displayProperties) {
    this.displayProperties = displayProperties;
  }

  public DestinyDefinitionsDestinyRaceDefinition raceType(Object raceType) {
    this.raceType = raceType;
    return this;
  }

   /**
   * An enumeration defining the existing, known Races/Species for player characters. This value will be the enum value matching this definition.
   * @return raceType
  **/
  @ApiModelProperty(value = "An enumeration defining the existing, known Races/Species for player characters. This value will be the enum value matching this definition.")
  public Object getRaceType() {
    return raceType;
  }

  public void setRaceType(Object raceType) {
    this.raceType = raceType;
  }

  public DestinyDefinitionsDestinyRaceDefinition genderedRaceNames(Map<String, String> genderedRaceNames) {
    this.genderedRaceNames = genderedRaceNames;
    return this;
  }

  public DestinyDefinitionsDestinyRaceDefinition putGenderedRaceNamesItem(String key, String genderedRaceNamesItem) {
    if (this.genderedRaceNames == null) {
      this.genderedRaceNames = new HashMap<>();
    }
    this.genderedRaceNames.put(key, genderedRaceNamesItem);
    return this;
  }

   /**
   * A localized string referring to the singular form of the Race&#39;s name when referred to in gendered form. Keyed by the DestinyGender.
   * @return genderedRaceNames
  **/
  @ApiModelProperty(value = "A localized string referring to the singular form of the Race's name when referred to in gendered form. Keyed by the DestinyGender.")
  public Map<String, String> getGenderedRaceNames() {
    return genderedRaceNames;
  }

  public void setGenderedRaceNames(Map<String, String> genderedRaceNames) {
    this.genderedRaceNames = genderedRaceNames;
  }

  public DestinyDefinitionsDestinyRaceDefinition hash(Long hash) {
    this.hash = hash;
    return this;
  }

   /**
   * The unique identifier for this entity. Guaranteed to be unique for the type of entity, but not globally.  When entities refer to each other in Destiny content, it is this hash that they are referring to.
   * @return hash
  **/
  @ApiModelProperty(value = "The unique identifier for this entity. Guaranteed to be unique for the type of entity, but not globally.  When entities refer to each other in Destiny content, it is this hash that they are referring to.")
  public Long getHash() {
    return hash;
  }

  public void setHash(Long hash) {
    this.hash = hash;
  }

  public DestinyDefinitionsDestinyRaceDefinition index(Integer index) {
    this.index = index;
    return this;
  }

   /**
   * The index of the entity as it was found in the investment tables.
   * @return index
  **/
  @ApiModelProperty(value = "The index of the entity as it was found in the investment tables.")
  public Integer getIndex() {
    return index;
  }

  public void setIndex(Integer index) {
    this.index = index;
  }

  public DestinyDefinitionsDestinyRaceDefinition redacted(Boolean redacted) {
    this.redacted = redacted;
    return this;
  }

   /**
   * If this is true, then there is an entity with this identifier/type combination, but BNet is not yet allowed to show it. Sorry!
   * @return redacted
  **/
  @ApiModelProperty(value = "If this is true, then there is an entity with this identifier/type combination, but BNet is not yet allowed to show it. Sorry!")
  public Boolean isRedacted() {
    return redacted;
  }

  public void setRedacted(Boolean redacted) {
    this.redacted = redacted;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DestinyDefinitionsDestinyRaceDefinition destinyDefinitionsDestinyRaceDefinition = (DestinyDefinitionsDestinyRaceDefinition) o;
    return Objects.equals(this.displayProperties, destinyDefinitionsDestinyRaceDefinition.displayProperties) &&
        Objects.equals(this.raceType, destinyDefinitionsDestinyRaceDefinition.raceType) &&
        Objects.equals(this.genderedRaceNames, destinyDefinitionsDestinyRaceDefinition.genderedRaceNames) &&
        Objects.equals(this.hash, destinyDefinitionsDestinyRaceDefinition.hash) &&
        Objects.equals(this.index, destinyDefinitionsDestinyRaceDefinition.index) &&
        Objects.equals(this.redacted, destinyDefinitionsDestinyRaceDefinition.redacted);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayProperties, raceType, genderedRaceNames, hash, index, redacted);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DestinyDefinitionsDestinyRaceDefinition {\n");
    
    sb.append("    displayProperties: ").append(toIndentedString(displayProperties)).append("\n");
    sb.append("    raceType: ").append(toIndentedString(raceType)).append("\n");
    sb.append("    genderedRaceNames: ").append(toIndentedString(genderedRaceNames)).append("\n");
    sb.append("    hash: ").append(toIndentedString(hash)).append("\n");
    sb.append("    index: ").append(toIndentedString(index)).append("\n");
    sb.append("    redacted: ").append(toIndentedString(redacted)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

