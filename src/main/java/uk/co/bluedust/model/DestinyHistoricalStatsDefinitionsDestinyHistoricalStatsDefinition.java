/*
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.3.2
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package uk.co.bluedust.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import uk.co.bluedust.model.DestinyHistoricalStatsDefinitionsDestinyActivityModeType;
import uk.co.bluedust.model.DestinyHistoricalStatsDefinitionsPeriodType;

/**
 * DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-11-04T16:50:06.922Z")
public class DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition {
  @JsonProperty("statId")
  private String statId = null;

  @JsonProperty("group")
  private Object group = null;

  @JsonProperty("periodTypes")
  private List<DestinyHistoricalStatsDefinitionsPeriodType> periodTypes = null;

  @JsonProperty("modes")
  private List<DestinyHistoricalStatsDefinitionsDestinyActivityModeType> modes = null;

  @JsonProperty("category")
  private Object category = null;

  @JsonProperty("statName")
  private String statName = null;

  @JsonProperty("statNameAbbr")
  private String statNameAbbr = null;

  @JsonProperty("statDescription")
  private String statDescription = null;

  @JsonProperty("unitType")
  private Object unitType = null;

  @JsonProperty("iconImage")
  private String iconImage = null;

  /**
   * Optional icon for the statistic
   */
  public enum MergeMethodEnum {
    NUMBER_0(0),
    
    NUMBER_1(1),
    
    NUMBER_2(2);

    private Integer value;

    MergeMethodEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static MergeMethodEnum fromValue(String text) {
      for (MergeMethodEnum b : MergeMethodEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("mergeMethod")
  private MergeMethodEnum mergeMethod = null;

  @JsonProperty("unitLabel")
  private String unitLabel = null;

  @JsonProperty("weight")
  private Integer weight = null;

  @JsonProperty("medalTierHash")
  private Integer medalTierHash = null;

  public DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition statId(String statId) {
    this.statId = statId;
    return this;
  }

   /**
   * Unique programmer friendly ID for this stat
   * @return statId
  **/
  @ApiModelProperty(value = "Unique programmer friendly ID for this stat")
  public String getStatId() {
    return statId;
  }

  public void setStatId(String statId) {
    this.statId = statId;
  }

  public DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition group(Object group) {
    this.group = group;
    return this;
  }

   /**
   * Statistic group
   * @return group
  **/
  @ApiModelProperty(value = "Statistic group")
  public Object getGroup() {
    return group;
  }

  public void setGroup(Object group) {
    this.group = group;
  }

  public DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition periodTypes(List<DestinyHistoricalStatsDefinitionsPeriodType> periodTypes) {
    this.periodTypes = periodTypes;
    return this;
  }

  public DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition addPeriodTypesItem(DestinyHistoricalStatsDefinitionsPeriodType periodTypesItem) {
    if (this.periodTypes == null) {
      this.periodTypes = new ArrayList<>();
    }
    this.periodTypes.add(periodTypesItem);
    return this;
  }

   /**
   * Time periods the statistic covers
   * @return periodTypes
  **/
  @ApiModelProperty(value = "Time periods the statistic covers")
  public List<DestinyHistoricalStatsDefinitionsPeriodType> getPeriodTypes() {
    return periodTypes;
  }

  public void setPeriodTypes(List<DestinyHistoricalStatsDefinitionsPeriodType> periodTypes) {
    this.periodTypes = periodTypes;
  }

  public DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition modes(List<DestinyHistoricalStatsDefinitionsDestinyActivityModeType> modes) {
    this.modes = modes;
    return this;
  }

  public DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition addModesItem(DestinyHistoricalStatsDefinitionsDestinyActivityModeType modesItem) {
    if (this.modes == null) {
      this.modes = new ArrayList<>();
    }
    this.modes.add(modesItem);
    return this;
  }

   /**
   * Game modes where this statistic can be reported.
   * @return modes
  **/
  @ApiModelProperty(value = "Game modes where this statistic can be reported.")
  public List<DestinyHistoricalStatsDefinitionsDestinyActivityModeType> getModes() {
    return modes;
  }

  public void setModes(List<DestinyHistoricalStatsDefinitionsDestinyActivityModeType> modes) {
    this.modes = modes;
  }

  public DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition category(Object category) {
    this.category = category;
    return this;
  }

   /**
   * Category for the stat.
   * @return category
  **/
  @ApiModelProperty(value = "Category for the stat.")
  public Object getCategory() {
    return category;
  }

  public void setCategory(Object category) {
    this.category = category;
  }

  public DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition statName(String statName) {
    this.statName = statName;
    return this;
  }

   /**
   * Display name
   * @return statName
  **/
  @ApiModelProperty(value = "Display name")
  public String getStatName() {
    return statName;
  }

  public void setStatName(String statName) {
    this.statName = statName;
  }

  public DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition statNameAbbr(String statNameAbbr) {
    this.statNameAbbr = statNameAbbr;
    return this;
  }

   /**
   * Display name abbreviated
   * @return statNameAbbr
  **/
  @ApiModelProperty(value = "Display name abbreviated")
  public String getStatNameAbbr() {
    return statNameAbbr;
  }

  public void setStatNameAbbr(String statNameAbbr) {
    this.statNameAbbr = statNameAbbr;
  }

  public DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition statDescription(String statDescription) {
    this.statDescription = statDescription;
    return this;
  }

   /**
   * Description of a stat if applicable.
   * @return statDescription
  **/
  @ApiModelProperty(value = "Description of a stat if applicable.")
  public String getStatDescription() {
    return statDescription;
  }

  public void setStatDescription(String statDescription) {
    this.statDescription = statDescription;
  }

  public DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition unitType(Object unitType) {
    this.unitType = unitType;
    return this;
  }

   /**
   * Unit, if any, for the statistic
   * @return unitType
  **/
  @ApiModelProperty(value = "Unit, if any, for the statistic")
  public Object getUnitType() {
    return unitType;
  }

  public void setUnitType(Object unitType) {
    this.unitType = unitType;
  }

  public DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition iconImage(String iconImage) {
    this.iconImage = iconImage;
    return this;
  }

   /**
   * Optional URI to an icon for the statistic
   * @return iconImage
  **/
  @ApiModelProperty(value = "Optional URI to an icon for the statistic")
  public String getIconImage() {
    return iconImage;
  }

  public void setIconImage(String iconImage) {
    this.iconImage = iconImage;
  }

  public DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition mergeMethod(MergeMethodEnum mergeMethod) {
    this.mergeMethod = mergeMethod;
    return this;
  }

   /**
   * Optional icon for the statistic
   * @return mergeMethod
  **/
  @ApiModelProperty(value = "Optional icon for the statistic")
  public MergeMethodEnum getMergeMethod() {
    return mergeMethod;
  }

  public void setMergeMethod(MergeMethodEnum mergeMethod) {
    this.mergeMethod = mergeMethod;
  }

  public DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition unitLabel(String unitLabel) {
    this.unitLabel = unitLabel;
    return this;
  }

   /**
   * Localized Unit Name for the stat.
   * @return unitLabel
  **/
  @ApiModelProperty(value = "Localized Unit Name for the stat.")
  public String getUnitLabel() {
    return unitLabel;
  }

  public void setUnitLabel(String unitLabel) {
    this.unitLabel = unitLabel;
  }

  public DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition weight(Integer weight) {
    this.weight = weight;
    return this;
  }

   /**
   * Weight assigned to this stat indicating its relative impressiveness.
   * @return weight
  **/
  @ApiModelProperty(value = "Weight assigned to this stat indicating its relative impressiveness.")
  public Integer getWeight() {
    return weight;
  }

  public void setWeight(Integer weight) {
    this.weight = weight;
  }

  public DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition medalTierHash(Integer medalTierHash) {
    this.medalTierHash = medalTierHash;
    return this;
  }

   /**
   * The tier associated with this medal - be it implicitly or explicitly.
   * @return medalTierHash
  **/
  @ApiModelProperty(value = "The tier associated with this medal - be it implicitly or explicitly.")
  public Integer getMedalTierHash() {
    return medalTierHash;
  }

  public void setMedalTierHash(Integer medalTierHash) {
    this.medalTierHash = medalTierHash;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition destinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition = (DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition) o;
    return Objects.equals(this.statId, destinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.statId) &&
        Objects.equals(this.group, destinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.group) &&
        Objects.equals(this.periodTypes, destinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.periodTypes) &&
        Objects.equals(this.modes, destinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.modes) &&
        Objects.equals(this.category, destinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.category) &&
        Objects.equals(this.statName, destinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.statName) &&
        Objects.equals(this.statNameAbbr, destinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.statNameAbbr) &&
        Objects.equals(this.statDescription, destinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.statDescription) &&
        Objects.equals(this.unitType, destinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.unitType) &&
        Objects.equals(this.iconImage, destinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.iconImage) &&
        Objects.equals(this.mergeMethod, destinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.mergeMethod) &&
        Objects.equals(this.unitLabel, destinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.unitLabel) &&
        Objects.equals(this.weight, destinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.weight) &&
        Objects.equals(this.medalTierHash, destinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.medalTierHash);
  }

  @Override
  public int hashCode() {
    return Objects.hash(statId, group, periodTypes, modes, category, statName, statNameAbbr, statDescription, unitType, iconImage, mergeMethod, unitLabel, weight, medalTierHash);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition {\n");
    
    sb.append("    statId: ").append(toIndentedString(statId)).append("\n");
    sb.append("    group: ").append(toIndentedString(group)).append("\n");
    sb.append("    periodTypes: ").append(toIndentedString(periodTypes)).append("\n");
    sb.append("    modes: ").append(toIndentedString(modes)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    statName: ").append(toIndentedString(statName)).append("\n");
    sb.append("    statNameAbbr: ").append(toIndentedString(statNameAbbr)).append("\n");
    sb.append("    statDescription: ").append(toIndentedString(statDescription)).append("\n");
    sb.append("    unitType: ").append(toIndentedString(unitType)).append("\n");
    sb.append("    iconImage: ").append(toIndentedString(iconImage)).append("\n");
    sb.append("    mergeMethod: ").append(toIndentedString(mergeMethod)).append("\n");
    sb.append("    unitLabel: ").append(toIndentedString(unitLabel)).append("\n");
    sb.append("    weight: ").append(toIndentedString(weight)).append("\n");
    sb.append("    medalTierHash: ").append(toIndentedString(medalTierHash)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

