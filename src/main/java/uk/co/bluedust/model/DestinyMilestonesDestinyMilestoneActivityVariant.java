/*
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.3.2
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package uk.co.bluedust.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Represents custom data that we know about an individual variant of an activity.
 */
@ApiModel(description = "Represents custom data that we know about an individual variant of an activity.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-09-29T19:57:25.109+01:00")
public class DestinyMilestonesDestinyMilestoneActivityVariant {
  @JsonProperty("activityHash")
  private Integer activityHash = null;

  @JsonProperty("completionStatus")
  private Object completionStatus = null;

  @JsonProperty("activityModeHash")
  private Integer activityModeHash = null;

  /**
   * The enumeration equivalent of the most specific Activity Mode under which this activity is played.
   */
  public enum ActivityModeTypeEnum {
    NUMBER_0(0),
    
    NUMBER_2(2),
    
    NUMBER_3(3),
    
    NUMBER_4(4),
    
    NUMBER_5(5),
    
    NUMBER_6(6),
    
    NUMBER_7(7),
    
    NUMBER_9(9),
    
    NUMBER_10(10),
    
    NUMBER_11(11),
    
    NUMBER_12(12),
    
    NUMBER_13(13),
    
    NUMBER_15(15),
    
    NUMBER_16(16),
    
    NUMBER_17(17),
    
    NUMBER_18(18),
    
    NUMBER_19(19),
    
    NUMBER_20(20),
    
    NUMBER_21(21),
    
    NUMBER_22(22),
    
    NUMBER_24(24),
    
    NUMBER_25(25),
    
    NUMBER_26(26),
    
    NUMBER_27(27),
    
    NUMBER_28(28),
    
    NUMBER_29(29),
    
    NUMBER_30(30),
    
    NUMBER_31(31),
    
    NUMBER_32(32),
    
    NUMBER_37(37),
    
    NUMBER_38(38),
    
    NUMBER_39(39),
    
    NUMBER_40(40),
    
    NUMBER_41(41),
    
    NUMBER_42(42),
    
    NUMBER_43(43),
    
    NUMBER_44(44),
    
    NUMBER_45(45),
    
    NUMBER_46(46),
    
    NUMBER_47(47),
    
    NUMBER_48(48),
    
    NUMBER_49(49),
    
    NUMBER_50(50),
    
    NUMBER_51(51),
    
    NUMBER_52(52),
    
    NUMBER_53(53),
    
    NUMBER_54(54),
    
    NUMBER_55(55),
    
    NUMBER_56(56),
    
    NUMBER_57(57),
    
    NUMBER_58(58),
    
    NUMBER_59(59),
    
    NUMBER_60(60),
    
    NUMBER_61(61),
    
    NUMBER_62(62),
    
    NUMBER_63(63),
    
    NUMBER_64(64),
    
    NUMBER_65(65);

    private Integer value;

    ActivityModeTypeEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ActivityModeTypeEnum fromValue(String text) {
      for (ActivityModeTypeEnum b : ActivityModeTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("activityModeType")
  private ActivityModeTypeEnum activityModeType = null;

  public DestinyMilestonesDestinyMilestoneActivityVariant activityHash(Integer activityHash) {
    this.activityHash = activityHash;
    return this;
  }

   /**
   * The hash for the specific variant of the activity related to this milestone. You can pull more detailed static info from the DestinyActivityDefinition, such as difficulty level.
   * @return activityHash
  **/
  @ApiModelProperty(value = "The hash for the specific variant of the activity related to this milestone. You can pull more detailed static info from the DestinyActivityDefinition, such as difficulty level.")
  public Integer getActivityHash() {
    return activityHash;
  }

  public void setActivityHash(Integer activityHash) {
    this.activityHash = activityHash;
  }

  public DestinyMilestonesDestinyMilestoneActivityVariant completionStatus(Object completionStatus) {
    this.completionStatus = completionStatus;
    return this;
  }

   /**
   * An OPTIONAL component: if it makes sense to talk about this activity variant in terms of whether or not it has been completed or what progress you have made in it, this will be returned. Otherwise, this will be NULL.
   * @return completionStatus
  **/
  @ApiModelProperty(value = "An OPTIONAL component: if it makes sense to talk about this activity variant in terms of whether or not it has been completed or what progress you have made in it, this will be returned. Otherwise, this will be NULL.")
  public Object getCompletionStatus() {
    return completionStatus;
  }

  public void setCompletionStatus(Object completionStatus) {
    this.completionStatus = completionStatus;
  }

  public DestinyMilestonesDestinyMilestoneActivityVariant activityModeHash(Integer activityModeHash) {
    this.activityModeHash = activityModeHash;
    return this;
  }

   /**
   * The hash identifier of the most specific Activity Mode under which this activity is played. This is useful for situations where the activity in question is - for instance - a PVP map, but it&#39;s not clear what mode the PVP map is being played under. If it&#39;s a playlist, this will be less specific: but hopefully useful in some way.
   * @return activityModeHash
  **/
  @ApiModelProperty(value = "The hash identifier of the most specific Activity Mode under which this activity is played. This is useful for situations where the activity in question is - for instance - a PVP map, but it's not clear what mode the PVP map is being played under. If it's a playlist, this will be less specific: but hopefully useful in some way.")
  public Integer getActivityModeHash() {
    return activityModeHash;
  }

  public void setActivityModeHash(Integer activityModeHash) {
    this.activityModeHash = activityModeHash;
  }

  public DestinyMilestonesDestinyMilestoneActivityVariant activityModeType(ActivityModeTypeEnum activityModeType) {
    this.activityModeType = activityModeType;
    return this;
  }

   /**
   * The enumeration equivalent of the most specific Activity Mode under which this activity is played.
   * @return activityModeType
  **/
  @ApiModelProperty(value = "The enumeration equivalent of the most specific Activity Mode under which this activity is played.")
  public ActivityModeTypeEnum getActivityModeType() {
    return activityModeType;
  }

  public void setActivityModeType(ActivityModeTypeEnum activityModeType) {
    this.activityModeType = activityModeType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DestinyMilestonesDestinyMilestoneActivityVariant destinyMilestonesDestinyMilestoneActivityVariant = (DestinyMilestonesDestinyMilestoneActivityVariant) o;
    return Objects.equals(this.activityHash, destinyMilestonesDestinyMilestoneActivityVariant.activityHash) &&
        Objects.equals(this.completionStatus, destinyMilestonesDestinyMilestoneActivityVariant.completionStatus) &&
        Objects.equals(this.activityModeHash, destinyMilestonesDestinyMilestoneActivityVariant.activityModeHash) &&
        Objects.equals(this.activityModeType, destinyMilestonesDestinyMilestoneActivityVariant.activityModeType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(activityHash, completionStatus, activityModeHash, activityModeType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DestinyMilestonesDestinyMilestoneActivityVariant {\n");
    
    sb.append("    activityHash: ").append(toIndentedString(activityHash)).append("\n");
    sb.append("    completionStatus: ").append(toIndentedString(completionStatus)).append("\n");
    sb.append("    activityModeHash: ").append(toIndentedString(activityModeHash)).append("\n");
    sb.append("    activityModeType: ").append(toIndentedString(activityModeType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

