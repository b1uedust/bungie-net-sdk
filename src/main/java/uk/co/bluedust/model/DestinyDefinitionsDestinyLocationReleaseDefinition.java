/*
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.3.2
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package uk.co.bluedust.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;

/**
 * A specific \&quot;spot\&quot; referred to by a location. Only one of these can be active at a time for a given Location.
 */
@ApiModel(description = "A specific \"spot\" referred to by a location. Only one of these can be active at a time for a given Location.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-11-04T16:59:02.979Z")
public class DestinyDefinitionsDestinyLocationReleaseDefinition {
  @JsonProperty("displayProperties")
  private Object displayProperties = null;

  @JsonProperty("smallTransparentIcon")
  private String smallTransparentIcon = null;

  @JsonProperty("mapIcon")
  private String mapIcon = null;

  @JsonProperty("largeTransparentIcon")
  private String largeTransparentIcon = null;

  @JsonProperty("spawnPoint")
  private Integer spawnPoint = null;

  @JsonProperty("destinationHash")
  private Integer destinationHash = null;

  @JsonProperty("activityHash")
  private Integer activityHash = null;

  @JsonProperty("activityGraphHash")
  private Integer activityGraphHash = null;

  @JsonProperty("activityGraphNodeHash")
  private Integer activityGraphNodeHash = null;

  @JsonProperty("activityBubbleName")
  private Integer activityBubbleName = null;

  @JsonProperty("activityPathBundle")
  private Integer activityPathBundle = null;

  @JsonProperty("activityPathDestination")
  private Integer activityPathDestination = null;

  @JsonProperty("navPointType")
  private Object navPointType = null;

  @JsonProperty("worldPosition")
  private List<Integer> worldPosition = null;

  public DestinyDefinitionsDestinyLocationReleaseDefinition displayProperties(Object displayProperties) {
    this.displayProperties = displayProperties;
    return this;
  }

   /**
   * Sadly, these don&#39;t appear to be populated anymore (ever?)
   * @return displayProperties
  **/
  @ApiModelProperty(value = "Sadly, these don't appear to be populated anymore (ever?)")
  public Object getDisplayProperties() {
    return displayProperties;
  }

  public void setDisplayProperties(Object displayProperties) {
    this.displayProperties = displayProperties;
  }

  public DestinyDefinitionsDestinyLocationReleaseDefinition smallTransparentIcon(String smallTransparentIcon) {
    this.smallTransparentIcon = smallTransparentIcon;
    return this;
  }

   /**
   * Get smallTransparentIcon
   * @return smallTransparentIcon
  **/
  @ApiModelProperty(value = "")
  public String getSmallTransparentIcon() {
    return smallTransparentIcon;
  }

  public void setSmallTransparentIcon(String smallTransparentIcon) {
    this.smallTransparentIcon = smallTransparentIcon;
  }

  public DestinyDefinitionsDestinyLocationReleaseDefinition mapIcon(String mapIcon) {
    this.mapIcon = mapIcon;
    return this;
  }

   /**
   * Get mapIcon
   * @return mapIcon
  **/
  @ApiModelProperty(value = "")
  public String getMapIcon() {
    return mapIcon;
  }

  public void setMapIcon(String mapIcon) {
    this.mapIcon = mapIcon;
  }

  public DestinyDefinitionsDestinyLocationReleaseDefinition largeTransparentIcon(String largeTransparentIcon) {
    this.largeTransparentIcon = largeTransparentIcon;
    return this;
  }

   /**
   * Get largeTransparentIcon
   * @return largeTransparentIcon
  **/
  @ApiModelProperty(value = "")
  public String getLargeTransparentIcon() {
    return largeTransparentIcon;
  }

  public void setLargeTransparentIcon(String largeTransparentIcon) {
    this.largeTransparentIcon = largeTransparentIcon;
  }

  public DestinyDefinitionsDestinyLocationReleaseDefinition spawnPoint(Integer spawnPoint) {
    this.spawnPoint = spawnPoint;
    return this;
  }

   /**
   * If we had map information, this spawnPoint would be interesting. But sadly, we don&#39;t have that info.
   * @return spawnPoint
  **/
  @ApiModelProperty(value = "If we had map information, this spawnPoint would be interesting. But sadly, we don't have that info.")
  public Integer getSpawnPoint() {
    return spawnPoint;
  }

  public void setSpawnPoint(Integer spawnPoint) {
    this.spawnPoint = spawnPoint;
  }

  public DestinyDefinitionsDestinyLocationReleaseDefinition destinationHash(Integer destinationHash) {
    this.destinationHash = destinationHash;
    return this;
  }

   /**
   * The Destination being pointed to by this location.
   * @return destinationHash
  **/
  @ApiModelProperty(value = "The Destination being pointed to by this location.")
  public Integer getDestinationHash() {
    return destinationHash;
  }

  public void setDestinationHash(Integer destinationHash) {
    this.destinationHash = destinationHash;
  }

  public DestinyDefinitionsDestinyLocationReleaseDefinition activityHash(Integer activityHash) {
    this.activityHash = activityHash;
    return this;
  }

   /**
   * The Activity being pointed to by this location.
   * @return activityHash
  **/
  @ApiModelProperty(value = "The Activity being pointed to by this location.")
  public Integer getActivityHash() {
    return activityHash;
  }

  public void setActivityHash(Integer activityHash) {
    this.activityHash = activityHash;
  }

  public DestinyDefinitionsDestinyLocationReleaseDefinition activityGraphHash(Integer activityGraphHash) {
    this.activityGraphHash = activityGraphHash;
    return this;
  }

   /**
   * The Activity Graph being pointed to by this location.
   * @return activityGraphHash
  **/
  @ApiModelProperty(value = "The Activity Graph being pointed to by this location.")
  public Integer getActivityGraphHash() {
    return activityGraphHash;
  }

  public void setActivityGraphHash(Integer activityGraphHash) {
    this.activityGraphHash = activityGraphHash;
  }

  public DestinyDefinitionsDestinyLocationReleaseDefinition activityGraphNodeHash(Integer activityGraphNodeHash) {
    this.activityGraphNodeHash = activityGraphNodeHash;
    return this;
  }

   /**
   * The Activity Graph Node being pointed to by this location. (Remember that Activity Graph Node hashes are only unique within an Activity Graph: so use the combination to find the node being spoken of)
   * @return activityGraphNodeHash
  **/
  @ApiModelProperty(value = "The Activity Graph Node being pointed to by this location. (Remember that Activity Graph Node hashes are only unique within an Activity Graph: so use the combination to find the node being spoken of)")
  public Integer getActivityGraphNodeHash() {
    return activityGraphNodeHash;
  }

  public void setActivityGraphNodeHash(Integer activityGraphNodeHash) {
    this.activityGraphNodeHash = activityGraphNodeHash;
  }

  public DestinyDefinitionsDestinyLocationReleaseDefinition activityBubbleName(Integer activityBubbleName) {
    this.activityBubbleName = activityBubbleName;
    return this;
  }

   /**
   * The Activity Bubble within the Destination. Look this up in the DestinyDestinationDefinition&#39;s bubbles and bubbleSettings properties.
   * @return activityBubbleName
  **/
  @ApiModelProperty(value = "The Activity Bubble within the Destination. Look this up in the DestinyDestinationDefinition's bubbles and bubbleSettings properties.")
  public Integer getActivityBubbleName() {
    return activityBubbleName;
  }

  public void setActivityBubbleName(Integer activityBubbleName) {
    this.activityBubbleName = activityBubbleName;
  }

  public DestinyDefinitionsDestinyLocationReleaseDefinition activityPathBundle(Integer activityPathBundle) {
    this.activityPathBundle = activityPathBundle;
    return this;
  }

   /**
   * If we had map information, this would tell us something cool about the path this location wants you to take. I wish we had map information.
   * @return activityPathBundle
  **/
  @ApiModelProperty(value = "If we had map information, this would tell us something cool about the path this location wants you to take. I wish we had map information.")
  public Integer getActivityPathBundle() {
    return activityPathBundle;
  }

  public void setActivityPathBundle(Integer activityPathBundle) {
    this.activityPathBundle = activityPathBundle;
  }

  public DestinyDefinitionsDestinyLocationReleaseDefinition activityPathDestination(Integer activityPathDestination) {
    this.activityPathDestination = activityPathDestination;
    return this;
  }

   /**
   * If we had map information, this would tell us about path information related to destination on the map. Sad. Maybe you can do something cool with it. Go to town man.
   * @return activityPathDestination
  **/
  @ApiModelProperty(value = "If we had map information, this would tell us about path information related to destination on the map. Sad. Maybe you can do something cool with it. Go to town man.")
  public Integer getActivityPathDestination() {
    return activityPathDestination;
  }

  public void setActivityPathDestination(Integer activityPathDestination) {
    this.activityPathDestination = activityPathDestination;
  }

  public DestinyDefinitionsDestinyLocationReleaseDefinition navPointType(Object navPointType) {
    this.navPointType = navPointType;
    return this;
  }

   /**
   * The type of Nav Point that this represents. See the enumeration for more info.
   * @return navPointType
  **/
  @ApiModelProperty(value = "The type of Nav Point that this represents. See the enumeration for more info.")
  public Object getNavPointType() {
    return navPointType;
  }

  public void setNavPointType(Object navPointType) {
    this.navPointType = navPointType;
  }

  public DestinyDefinitionsDestinyLocationReleaseDefinition worldPosition(List<Integer> worldPosition) {
    this.worldPosition = worldPosition;
    return this;
  }

  public DestinyDefinitionsDestinyLocationReleaseDefinition addWorldPositionItem(Integer worldPositionItem) {
    if (this.worldPosition == null) {
      this.worldPosition = new ArrayList<>();
    }
    this.worldPosition.add(worldPositionItem);
    return this;
  }

   /**
   * Looks like it should be the position on the map, but sadly it does not look populated... yet?
   * @return worldPosition
  **/
  @ApiModelProperty(value = "Looks like it should be the position on the map, but sadly it does not look populated... yet?")
  public List<Integer> getWorldPosition() {
    return worldPosition;
  }

  public void setWorldPosition(List<Integer> worldPosition) {
    this.worldPosition = worldPosition;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DestinyDefinitionsDestinyLocationReleaseDefinition destinyDefinitionsDestinyLocationReleaseDefinition = (DestinyDefinitionsDestinyLocationReleaseDefinition) o;
    return Objects.equals(this.displayProperties, destinyDefinitionsDestinyLocationReleaseDefinition.displayProperties) &&
        Objects.equals(this.smallTransparentIcon, destinyDefinitionsDestinyLocationReleaseDefinition.smallTransparentIcon) &&
        Objects.equals(this.mapIcon, destinyDefinitionsDestinyLocationReleaseDefinition.mapIcon) &&
        Objects.equals(this.largeTransparentIcon, destinyDefinitionsDestinyLocationReleaseDefinition.largeTransparentIcon) &&
        Objects.equals(this.spawnPoint, destinyDefinitionsDestinyLocationReleaseDefinition.spawnPoint) &&
        Objects.equals(this.destinationHash, destinyDefinitionsDestinyLocationReleaseDefinition.destinationHash) &&
        Objects.equals(this.activityHash, destinyDefinitionsDestinyLocationReleaseDefinition.activityHash) &&
        Objects.equals(this.activityGraphHash, destinyDefinitionsDestinyLocationReleaseDefinition.activityGraphHash) &&
        Objects.equals(this.activityGraphNodeHash, destinyDefinitionsDestinyLocationReleaseDefinition.activityGraphNodeHash) &&
        Objects.equals(this.activityBubbleName, destinyDefinitionsDestinyLocationReleaseDefinition.activityBubbleName) &&
        Objects.equals(this.activityPathBundle, destinyDefinitionsDestinyLocationReleaseDefinition.activityPathBundle) &&
        Objects.equals(this.activityPathDestination, destinyDefinitionsDestinyLocationReleaseDefinition.activityPathDestination) &&
        Objects.equals(this.navPointType, destinyDefinitionsDestinyLocationReleaseDefinition.navPointType) &&
        Objects.equals(this.worldPosition, destinyDefinitionsDestinyLocationReleaseDefinition.worldPosition);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayProperties, smallTransparentIcon, mapIcon, largeTransparentIcon, spawnPoint, destinationHash, activityHash, activityGraphHash, activityGraphNodeHash, activityBubbleName, activityPathBundle, activityPathDestination, navPointType, worldPosition);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DestinyDefinitionsDestinyLocationReleaseDefinition {\n");
    
    sb.append("    displayProperties: ").append(toIndentedString(displayProperties)).append("\n");
    sb.append("    smallTransparentIcon: ").append(toIndentedString(smallTransparentIcon)).append("\n");
    sb.append("    mapIcon: ").append(toIndentedString(mapIcon)).append("\n");
    sb.append("    largeTransparentIcon: ").append(toIndentedString(largeTransparentIcon)).append("\n");
    sb.append("    spawnPoint: ").append(toIndentedString(spawnPoint)).append("\n");
    sb.append("    destinationHash: ").append(toIndentedString(destinationHash)).append("\n");
    sb.append("    activityHash: ").append(toIndentedString(activityHash)).append("\n");
    sb.append("    activityGraphHash: ").append(toIndentedString(activityGraphHash)).append("\n");
    sb.append("    activityGraphNodeHash: ").append(toIndentedString(activityGraphNodeHash)).append("\n");
    sb.append("    activityBubbleName: ").append(toIndentedString(activityBubbleName)).append("\n");
    sb.append("    activityPathBundle: ").append(toIndentedString(activityPathBundle)).append("\n");
    sb.append("    activityPathDestination: ").append(toIndentedString(activityPathDestination)).append("\n");
    sb.append("    navPointType: ").append(toIndentedString(navPointType)).append("\n");
    sb.append("    worldPosition: ").append(toIndentedString(worldPosition)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

