/*
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.3.2
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package uk.co.bluedust.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * The list of perks to display in an item tooltip - and whether or not they have been activated.  Perks apply a variety of effects to a character, and are generally either intrinsic to the item or provided in activated talent nodes or sockets.
 */
@ApiModel(description = "The list of perks to display in an item tooltip - and whether or not they have been activated.  Perks apply a variety of effects to a character, and are generally either intrinsic to the item or provided in activated talent nodes or sockets.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-09-29T19:57:25.109+01:00")
public class DestinyPerksDestinyPerkReference {
  @JsonProperty("perkHash")
  private Integer perkHash = null;

  @JsonProperty("iconPath")
  private String iconPath = null;

  @JsonProperty("isActive")
  private Boolean isActive = null;

  @JsonProperty("visible")
  private Boolean visible = null;

  public DestinyPerksDestinyPerkReference perkHash(Integer perkHash) {
    this.perkHash = perkHash;
    return this;
  }

   /**
   * The hash identifier for the perk, which can be used to look up DestinySandboxPerkDefinition if it exists. Be warned, perks frequently do not have user-viewable information. You should examine whether you actually found a name/description in the perk&#39;s definition before you show it to the user.
   * @return perkHash
  **/
  @ApiModelProperty(value = "The hash identifier for the perk, which can be used to look up DestinySandboxPerkDefinition if it exists. Be warned, perks frequently do not have user-viewable information. You should examine whether you actually found a name/description in the perk's definition before you show it to the user.")
  public Integer getPerkHash() {
    return perkHash;
  }

  public void setPerkHash(Integer perkHash) {
    this.perkHash = perkHash;
  }

  public DestinyPerksDestinyPerkReference iconPath(String iconPath) {
    this.iconPath = iconPath;
    return this;
  }

   /**
   * The icon for the perk.
   * @return iconPath
  **/
  @ApiModelProperty(value = "The icon for the perk.")
  public String getIconPath() {
    return iconPath;
  }

  public void setIconPath(String iconPath) {
    this.iconPath = iconPath;
  }

  public DestinyPerksDestinyPerkReference isActive(Boolean isActive) {
    this.isActive = isActive;
    return this;
  }

   /**
   * Whether this perk is currently active. (We may return perks that you have not actually activated yet: these represent perks that you should show in the item&#39;s tooltip, but that the user has not yet activated.)
   * @return isActive
  **/
  @ApiModelProperty(value = "Whether this perk is currently active. (We may return perks that you have not actually activated yet: these represent perks that you should show in the item's tooltip, but that the user has not yet activated.)")
  public Boolean isIsActive() {
    return isActive;
  }

  public void setIsActive(Boolean isActive) {
    this.isActive = isActive;
  }

  public DestinyPerksDestinyPerkReference visible(Boolean visible) {
    this.visible = visible;
    return this;
  }

   /**
   * Some perks provide benefits, but aren&#39;t visible in the UI. This value will let you know if this is perk should be shown in your UI.
   * @return visible
  **/
  @ApiModelProperty(value = "Some perks provide benefits, but aren't visible in the UI. This value will let you know if this is perk should be shown in your UI.")
  public Boolean isVisible() {
    return visible;
  }

  public void setVisible(Boolean visible) {
    this.visible = visible;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DestinyPerksDestinyPerkReference destinyPerksDestinyPerkReference = (DestinyPerksDestinyPerkReference) o;
    return Objects.equals(this.perkHash, destinyPerksDestinyPerkReference.perkHash) &&
        Objects.equals(this.iconPath, destinyPerksDestinyPerkReference.iconPath) &&
        Objects.equals(this.isActive, destinyPerksDestinyPerkReference.isActive) &&
        Objects.equals(this.visible, destinyPerksDestinyPerkReference.visible);
  }

  @Override
  public int hashCode() {
    return Objects.hash(perkHash, iconPath, isActive, visible);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DestinyPerksDestinyPerkReference {\n");
    
    sb.append("    perkHash: ").append(toIndentedString(perkHash)).append("\n");
    sb.append("    iconPath: ").append(toIndentedString(iconPath)).append("\n");
    sb.append("    isActive: ").append(toIndentedString(isActive)).append("\n");
    sb.append("    visible: ").append(toIndentedString(visible)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

