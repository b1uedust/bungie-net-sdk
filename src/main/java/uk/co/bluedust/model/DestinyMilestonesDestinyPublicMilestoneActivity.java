/*
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.3.2
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package uk.co.bluedust.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import uk.co.bluedust.model.DestinyMilestonesDestinyPublicMilestoneActivityVariant;

/**
 * A milestone may have one or more conceptual Activities associated with it, and each of those conceptual activities could have a variety of variants, modes, tiers, what-have-you. Our attempts to determine what qualifies as a conceptual activity are, unfortunately, janky. So if you see missing modes or modes that don&#39;t seem appropriate to you, let us know and I&#39;ll buy you a beer if we ever meet up in person.
 */
@ApiModel(description = "A milestone may have one or more conceptual Activities associated with it, and each of those conceptual activities could have a variety of variants, modes, tiers, what-have-you. Our attempts to determine what qualifies as a conceptual activity are, unfortunately, janky. So if you see missing modes or modes that don't seem appropriate to you, let us know and I'll buy you a beer if we ever meet up in person.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-09-29T19:57:25.109+01:00")
public class DestinyMilestonesDestinyPublicMilestoneActivity {
  @JsonProperty("activityHash")
  private Integer activityHash = null;

  @JsonProperty("modifierHashes")
  private List<Integer> modifierHashes = null;

  @JsonProperty("variants")
  private List<DestinyMilestonesDestinyPublicMilestoneActivityVariant> variants = null;

  @JsonProperty("activityModeHash")
  private Integer activityModeHash = null;

  /**
   * The enumeration equivalent of the most specific Activity Mode under which this activity is played.
   */
  public enum ActivityModeTypeEnum {
    NUMBER_0(0),
    
    NUMBER_2(2),
    
    NUMBER_3(3),
    
    NUMBER_4(4),
    
    NUMBER_5(5),
    
    NUMBER_6(6),
    
    NUMBER_7(7),
    
    NUMBER_9(9),
    
    NUMBER_10(10),
    
    NUMBER_11(11),
    
    NUMBER_12(12),
    
    NUMBER_13(13),
    
    NUMBER_15(15),
    
    NUMBER_16(16),
    
    NUMBER_17(17),
    
    NUMBER_18(18),
    
    NUMBER_19(19),
    
    NUMBER_20(20),
    
    NUMBER_21(21),
    
    NUMBER_22(22),
    
    NUMBER_24(24),
    
    NUMBER_25(25),
    
    NUMBER_26(26),
    
    NUMBER_27(27),
    
    NUMBER_28(28),
    
    NUMBER_29(29),
    
    NUMBER_30(30),
    
    NUMBER_31(31),
    
    NUMBER_32(32),
    
    NUMBER_37(37),
    
    NUMBER_38(38),
    
    NUMBER_39(39),
    
    NUMBER_40(40),
    
    NUMBER_41(41),
    
    NUMBER_42(42),
    
    NUMBER_43(43),
    
    NUMBER_44(44),
    
    NUMBER_45(45),
    
    NUMBER_46(46),
    
    NUMBER_47(47),
    
    NUMBER_48(48),
    
    NUMBER_49(49),
    
    NUMBER_50(50),
    
    NUMBER_51(51),
    
    NUMBER_52(52),
    
    NUMBER_53(53),
    
    NUMBER_54(54),
    
    NUMBER_55(55),
    
    NUMBER_56(56),
    
    NUMBER_57(57),
    
    NUMBER_58(58),
    
    NUMBER_59(59),
    
    NUMBER_60(60),
    
    NUMBER_61(61),
    
    NUMBER_62(62),
    
    NUMBER_63(63),
    
    NUMBER_64(64),
    
    NUMBER_65(65);

    private Integer value;

    ActivityModeTypeEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ActivityModeTypeEnum fromValue(String text) {
      for (ActivityModeTypeEnum b : ActivityModeTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("activityModeType")
  private ActivityModeTypeEnum activityModeType = null;

  public DestinyMilestonesDestinyPublicMilestoneActivity activityHash(Integer activityHash) {
    this.activityHash = activityHash;
    return this;
  }

   /**
   * The hash identifier of the activity that&#39;s been chosen to be considered the canonical \&quot;conceptual\&quot; activity definition. This may have many variants, defined herein.
   * @return activityHash
  **/
  @ApiModelProperty(value = "The hash identifier of the activity that's been chosen to be considered the canonical \"conceptual\" activity definition. This may have many variants, defined herein.")
  public Integer getActivityHash() {
    return activityHash;
  }

  public void setActivityHash(Integer activityHash) {
    this.activityHash = activityHash;
  }

  public DestinyMilestonesDestinyPublicMilestoneActivity modifierHashes(List<Integer> modifierHashes) {
    this.modifierHashes = modifierHashes;
    return this;
  }

  public DestinyMilestonesDestinyPublicMilestoneActivity addModifierHashesItem(Integer modifierHashesItem) {
    if (this.modifierHashes == null) {
      this.modifierHashes = new ArrayList<>();
    }
    this.modifierHashes.add(modifierHashesItem);
    return this;
  }

   /**
   * The activity may have 0-to-many modifiers: if it does, this will contain the hashes to the DestinyActivityModifierDefinition that defines the modifier being applied.
   * @return modifierHashes
  **/
  @ApiModelProperty(value = "The activity may have 0-to-many modifiers: if it does, this will contain the hashes to the DestinyActivityModifierDefinition that defines the modifier being applied.")
  public List<Integer> getModifierHashes() {
    return modifierHashes;
  }

  public void setModifierHashes(List<Integer> modifierHashes) {
    this.modifierHashes = modifierHashes;
  }

  public DestinyMilestonesDestinyPublicMilestoneActivity variants(List<DestinyMilestonesDestinyPublicMilestoneActivityVariant> variants) {
    this.variants = variants;
    return this;
  }

  public DestinyMilestonesDestinyPublicMilestoneActivity addVariantsItem(DestinyMilestonesDestinyPublicMilestoneActivityVariant variantsItem) {
    if (this.variants == null) {
      this.variants = new ArrayList<>();
    }
    this.variants.add(variantsItem);
    return this;
  }

   /**
   * Every relevant variation of this conceptual activity, including the conceptual activity itself, have variants defined here.
   * @return variants
  **/
  @ApiModelProperty(value = "Every relevant variation of this conceptual activity, including the conceptual activity itself, have variants defined here.")
  public List<DestinyMilestonesDestinyPublicMilestoneActivityVariant> getVariants() {
    return variants;
  }

  public void setVariants(List<DestinyMilestonesDestinyPublicMilestoneActivityVariant> variants) {
    this.variants = variants;
  }

  public DestinyMilestonesDestinyPublicMilestoneActivity activityModeHash(Integer activityModeHash) {
    this.activityModeHash = activityModeHash;
    return this;
  }

   /**
   * The hash identifier of the most specific Activity Mode under which this activity is played. This is useful for situations where the activity in question is - for instance - a PVP map, but it&#39;s not clear what mode the PVP map is being played under. If it&#39;s a playlist, this will be less specific: but hopefully useful in some way.
   * @return activityModeHash
  **/
  @ApiModelProperty(value = "The hash identifier of the most specific Activity Mode under which this activity is played. This is useful for situations where the activity in question is - for instance - a PVP map, but it's not clear what mode the PVP map is being played under. If it's a playlist, this will be less specific: but hopefully useful in some way.")
  public Integer getActivityModeHash() {
    return activityModeHash;
  }

  public void setActivityModeHash(Integer activityModeHash) {
    this.activityModeHash = activityModeHash;
  }

  public DestinyMilestonesDestinyPublicMilestoneActivity activityModeType(ActivityModeTypeEnum activityModeType) {
    this.activityModeType = activityModeType;
    return this;
  }

   /**
   * The enumeration equivalent of the most specific Activity Mode under which this activity is played.
   * @return activityModeType
  **/
  @ApiModelProperty(value = "The enumeration equivalent of the most specific Activity Mode under which this activity is played.")
  public ActivityModeTypeEnum getActivityModeType() {
    return activityModeType;
  }

  public void setActivityModeType(ActivityModeTypeEnum activityModeType) {
    this.activityModeType = activityModeType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DestinyMilestonesDestinyPublicMilestoneActivity destinyMilestonesDestinyPublicMilestoneActivity = (DestinyMilestonesDestinyPublicMilestoneActivity) o;
    return Objects.equals(this.activityHash, destinyMilestonesDestinyPublicMilestoneActivity.activityHash) &&
        Objects.equals(this.modifierHashes, destinyMilestonesDestinyPublicMilestoneActivity.modifierHashes) &&
        Objects.equals(this.variants, destinyMilestonesDestinyPublicMilestoneActivity.variants) &&
        Objects.equals(this.activityModeHash, destinyMilestonesDestinyPublicMilestoneActivity.activityModeHash) &&
        Objects.equals(this.activityModeType, destinyMilestonesDestinyPublicMilestoneActivity.activityModeType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(activityHash, modifierHashes, variants, activityModeHash, activityModeType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DestinyMilestonesDestinyPublicMilestoneActivity {\n");
    
    sb.append("    activityHash: ").append(toIndentedString(activityHash)).append("\n");
    sb.append("    modifierHashes: ").append(toIndentedString(modifierHashes)).append("\n");
    sb.append("    variants: ").append(toIndentedString(variants)).append("\n");
    sb.append("    activityModeHash: ").append(toIndentedString(activityModeHash)).append("\n");
    sb.append("    activityModeType: ").append(toIndentedString(activityModeType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

