/*
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.3.2
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package uk.co.bluedust.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import uk.co.bluedust.model.DestinyDefinitionsDestinyObjectiveDisplayProperties;

/**
 * An item can have objectives on it. In practice, these are the exclusive purview of \&quot;Quest Step\&quot; items: DestinyInventoryItemDefinitions that represent a specific step in a Quest.  Quest steps have 1:M objectives that we end up processing and returning in live data as DestinyQuestStatus data, and other useful information.
 */
@ApiModel(description = "An item can have objectives on it. In practice, these are the exclusive purview of \"Quest Step\" items: DestinyInventoryItemDefinitions that represent a specific step in a Quest.  Quest steps have 1:M objectives that we end up processing and returning in live data as DestinyQuestStatus data, and other useful information.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-11-04T16:50:06.922Z")
public class DestinyDefinitionsDestinyItemObjectiveBlockDefinition {
  @JsonProperty("objectiveHashes")
  private List<Integer> objectiveHashes = null;

  @JsonProperty("displayActivityHashes")
  private List<Integer> displayActivityHashes = null;

  @JsonProperty("requireFullObjectiveCompletion")
  private Boolean requireFullObjectiveCompletion = null;

  @JsonProperty("questlineItemHash")
  private Integer questlineItemHash = null;

  @JsonProperty("narrative")
  private String narrative = null;

  @JsonProperty("objectiveVerbName")
  private String objectiveVerbName = null;

  @JsonProperty("questTypeIdentifier")
  private String questTypeIdentifier = null;

  @JsonProperty("questTypeHash")
  private Integer questTypeHash = null;

  @JsonProperty("perObjectiveDisplayProperties")
  private List<DestinyDefinitionsDestinyObjectiveDisplayProperties> perObjectiveDisplayProperties = null;

  public DestinyDefinitionsDestinyItemObjectiveBlockDefinition objectiveHashes(List<Integer> objectiveHashes) {
    this.objectiveHashes = objectiveHashes;
    return this;
  }

  public DestinyDefinitionsDestinyItemObjectiveBlockDefinition addObjectiveHashesItem(Integer objectiveHashesItem) {
    if (this.objectiveHashes == null) {
      this.objectiveHashes = new ArrayList<>();
    }
    this.objectiveHashes.add(objectiveHashesItem);
    return this;
  }

   /**
   * The hashes to Objectives (DestinyObjectiveDefinition) that are part of this Quest Step, in the order that they should be rendered.
   * @return objectiveHashes
  **/
  @ApiModelProperty(value = "The hashes to Objectives (DestinyObjectiveDefinition) that are part of this Quest Step, in the order that they should be rendered.")
  public List<Integer> getObjectiveHashes() {
    return objectiveHashes;
  }

  public void setObjectiveHashes(List<Integer> objectiveHashes) {
    this.objectiveHashes = objectiveHashes;
  }

  public DestinyDefinitionsDestinyItemObjectiveBlockDefinition displayActivityHashes(List<Integer> displayActivityHashes) {
    this.displayActivityHashes = displayActivityHashes;
    return this;
  }

  public DestinyDefinitionsDestinyItemObjectiveBlockDefinition addDisplayActivityHashesItem(Integer displayActivityHashesItem) {
    if (this.displayActivityHashes == null) {
      this.displayActivityHashes = new ArrayList<>();
    }
    this.displayActivityHashes.add(displayActivityHashesItem);
    return this;
  }

   /**
   * For every entry in objectiveHashes, there is a corresponding entry in this array at the same index. If the objective is meant to be associated with a specific DestinyActivityDefinition, there will be a valid hash at that index. Otherwise, it will be invalid (0).  Rendered somewhat obsolete by perObjectiveDisplayProperties, which currently has much the same information but may end up with more info in the future.
   * @return displayActivityHashes
  **/
  @ApiModelProperty(value = "For every entry in objectiveHashes, there is a corresponding entry in this array at the same index. If the objective is meant to be associated with a specific DestinyActivityDefinition, there will be a valid hash at that index. Otherwise, it will be invalid (0).  Rendered somewhat obsolete by perObjectiveDisplayProperties, which currently has much the same information but may end up with more info in the future.")
  public List<Integer> getDisplayActivityHashes() {
    return displayActivityHashes;
  }

  public void setDisplayActivityHashes(List<Integer> displayActivityHashes) {
    this.displayActivityHashes = displayActivityHashes;
  }

  public DestinyDefinitionsDestinyItemObjectiveBlockDefinition requireFullObjectiveCompletion(Boolean requireFullObjectiveCompletion) {
    this.requireFullObjectiveCompletion = requireFullObjectiveCompletion;
    return this;
  }

   /**
   * If True, all objectives must be completed for the step to be completed. If False, any one objective can be completed for the step to be completed.
   * @return requireFullObjectiveCompletion
  **/
  @ApiModelProperty(value = "If True, all objectives must be completed for the step to be completed. If False, any one objective can be completed for the step to be completed.")
  public Boolean isRequireFullObjectiveCompletion() {
    return requireFullObjectiveCompletion;
  }

  public void setRequireFullObjectiveCompletion(Boolean requireFullObjectiveCompletion) {
    this.requireFullObjectiveCompletion = requireFullObjectiveCompletion;
  }

  public DestinyDefinitionsDestinyItemObjectiveBlockDefinition questlineItemHash(Integer questlineItemHash) {
    this.questlineItemHash = questlineItemHash;
    return this;
  }

   /**
   * The hash for the DestinyInventoryItemDefinition representing the Quest to which this Quest Step belongs.
   * @return questlineItemHash
  **/
  @ApiModelProperty(value = "The hash for the DestinyInventoryItemDefinition representing the Quest to which this Quest Step belongs.")
  public Integer getQuestlineItemHash() {
    return questlineItemHash;
  }

  public void setQuestlineItemHash(Integer questlineItemHash) {
    this.questlineItemHash = questlineItemHash;
  }

  public DestinyDefinitionsDestinyItemObjectiveBlockDefinition narrative(String narrative) {
    this.narrative = narrative;
    return this;
  }

   /**
   * The localized string for narrative text related to this quest step, if any.
   * @return narrative
  **/
  @ApiModelProperty(value = "The localized string for narrative text related to this quest step, if any.")
  public String getNarrative() {
    return narrative;
  }

  public void setNarrative(String narrative) {
    this.narrative = narrative;
  }

  public DestinyDefinitionsDestinyItemObjectiveBlockDefinition objectiveVerbName(String objectiveVerbName) {
    this.objectiveVerbName = objectiveVerbName;
    return this;
  }

   /**
   * The localized string describing an action to be performed associated with the objectives, if any.
   * @return objectiveVerbName
  **/
  @ApiModelProperty(value = "The localized string describing an action to be performed associated with the objectives, if any.")
  public String getObjectiveVerbName() {
    return objectiveVerbName;
  }

  public void setObjectiveVerbName(String objectiveVerbName) {
    this.objectiveVerbName = objectiveVerbName;
  }

  public DestinyDefinitionsDestinyItemObjectiveBlockDefinition questTypeIdentifier(String questTypeIdentifier) {
    this.questTypeIdentifier = questTypeIdentifier;
    return this;
  }

   /**
   * The identifier for the type of quest being performed, if any. Not associated with any fixed definition, yet.
   * @return questTypeIdentifier
  **/
  @ApiModelProperty(value = "The identifier for the type of quest being performed, if any. Not associated with any fixed definition, yet.")
  public String getQuestTypeIdentifier() {
    return questTypeIdentifier;
  }

  public void setQuestTypeIdentifier(String questTypeIdentifier) {
    this.questTypeIdentifier = questTypeIdentifier;
  }

  public DestinyDefinitionsDestinyItemObjectiveBlockDefinition questTypeHash(Integer questTypeHash) {
    this.questTypeHash = questTypeHash;
    return this;
  }

   /**
   * A hashed value for the questTypeIdentifier, because apparently I like to be redundant.
   * @return questTypeHash
  **/
  @ApiModelProperty(value = "A hashed value for the questTypeIdentifier, because apparently I like to be redundant.")
  public Integer getQuestTypeHash() {
    return questTypeHash;
  }

  public void setQuestTypeHash(Integer questTypeHash) {
    this.questTypeHash = questTypeHash;
  }

  public DestinyDefinitionsDestinyItemObjectiveBlockDefinition perObjectiveDisplayProperties(List<DestinyDefinitionsDestinyObjectiveDisplayProperties> perObjectiveDisplayProperties) {
    this.perObjectiveDisplayProperties = perObjectiveDisplayProperties;
    return this;
  }

  public DestinyDefinitionsDestinyItemObjectiveBlockDefinition addPerObjectiveDisplayPropertiesItem(DestinyDefinitionsDestinyObjectiveDisplayProperties perObjectiveDisplayPropertiesItem) {
    if (this.perObjectiveDisplayProperties == null) {
      this.perObjectiveDisplayProperties = new ArrayList<>();
    }
    this.perObjectiveDisplayProperties.add(perObjectiveDisplayPropertiesItem);
    return this;
  }

   /**
   * One entry per Objective on the item, it will have related display information.
   * @return perObjectiveDisplayProperties
  **/
  @ApiModelProperty(value = "One entry per Objective on the item, it will have related display information.")
  public List<DestinyDefinitionsDestinyObjectiveDisplayProperties> getPerObjectiveDisplayProperties() {
    return perObjectiveDisplayProperties;
  }

  public void setPerObjectiveDisplayProperties(List<DestinyDefinitionsDestinyObjectiveDisplayProperties> perObjectiveDisplayProperties) {
    this.perObjectiveDisplayProperties = perObjectiveDisplayProperties;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DestinyDefinitionsDestinyItemObjectiveBlockDefinition destinyDefinitionsDestinyItemObjectiveBlockDefinition = (DestinyDefinitionsDestinyItemObjectiveBlockDefinition) o;
    return Objects.equals(this.objectiveHashes, destinyDefinitionsDestinyItemObjectiveBlockDefinition.objectiveHashes) &&
        Objects.equals(this.displayActivityHashes, destinyDefinitionsDestinyItemObjectiveBlockDefinition.displayActivityHashes) &&
        Objects.equals(this.requireFullObjectiveCompletion, destinyDefinitionsDestinyItemObjectiveBlockDefinition.requireFullObjectiveCompletion) &&
        Objects.equals(this.questlineItemHash, destinyDefinitionsDestinyItemObjectiveBlockDefinition.questlineItemHash) &&
        Objects.equals(this.narrative, destinyDefinitionsDestinyItemObjectiveBlockDefinition.narrative) &&
        Objects.equals(this.objectiveVerbName, destinyDefinitionsDestinyItemObjectiveBlockDefinition.objectiveVerbName) &&
        Objects.equals(this.questTypeIdentifier, destinyDefinitionsDestinyItemObjectiveBlockDefinition.questTypeIdentifier) &&
        Objects.equals(this.questTypeHash, destinyDefinitionsDestinyItemObjectiveBlockDefinition.questTypeHash) &&
        Objects.equals(this.perObjectiveDisplayProperties, destinyDefinitionsDestinyItemObjectiveBlockDefinition.perObjectiveDisplayProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(objectiveHashes, displayActivityHashes, requireFullObjectiveCompletion, questlineItemHash, narrative, objectiveVerbName, questTypeIdentifier, questTypeHash, perObjectiveDisplayProperties);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DestinyDefinitionsDestinyItemObjectiveBlockDefinition {\n");
    
    sb.append("    objectiveHashes: ").append(toIndentedString(objectiveHashes)).append("\n");
    sb.append("    displayActivityHashes: ").append(toIndentedString(displayActivityHashes)).append("\n");
    sb.append("    requireFullObjectiveCompletion: ").append(toIndentedString(requireFullObjectiveCompletion)).append("\n");
    sb.append("    questlineItemHash: ").append(toIndentedString(questlineItemHash)).append("\n");
    sb.append("    narrative: ").append(toIndentedString(narrative)).append("\n");
    sb.append("    objectiveVerbName: ").append(toIndentedString(objectiveVerbName)).append("\n");
    sb.append("    questTypeIdentifier: ").append(toIndentedString(questTypeIdentifier)).append("\n");
    sb.append("    questTypeHash: ").append(toIndentedString(questTypeHash)).append("\n");
    sb.append("    perObjectiveDisplayProperties: ").append(toIndentedString(perObjectiveDisplayProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

