/*
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.3.2
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package uk.co.bluedust.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import uk.co.bluedust.model.ForumForumRecruitmentDetail;
import uk.co.bluedust.model.ForumPollResponse;
import uk.co.bluedust.model.ForumPostResponse;
import uk.co.bluedust.model.GroupsV2GroupResponse;
import uk.co.bluedust.model.QueriesPagedQuery;
import uk.co.bluedust.model.TagsModelsContractsTagResponse;
import uk.co.bluedust.model.UserGeneralUser;

/**
 * ForumPostSearchResponse
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-11-04T23:34:27.728Z")
public class ForumPostSearchResponse {
  @JsonProperty("relatedPosts")
  private List<ForumPostResponse> relatedPosts = null;

  @JsonProperty("authors")
  private List<UserGeneralUser> authors = null;

  @JsonProperty("groups")
  private List<GroupsV2GroupResponse> groups = null;

  @JsonProperty("searchedTags")
  private List<TagsModelsContractsTagResponse> searchedTags = null;

  @JsonProperty("polls")
  private List<ForumPollResponse> polls = null;

  @JsonProperty("recruitmentDetails")
  private List<ForumForumRecruitmentDetail> recruitmentDetails = null;

  @JsonProperty("availablePages")
  private Integer availablePages = null;

  @JsonProperty("results")
  private List<ForumPostResponse> results = null;

  @JsonProperty("totalResults")
  private Integer totalResults = null;

  @JsonProperty("hasMore")
  private Boolean hasMore = null;

  @JsonProperty("query")
  private QueriesPagedQuery query = null;

  @JsonProperty("replacementContinuationToken")
  private String replacementContinuationToken = null;

  @JsonProperty("useTotalResults")
  private Boolean useTotalResults = null;

  public ForumPostSearchResponse relatedPosts(List<ForumPostResponse> relatedPosts) {
    this.relatedPosts = relatedPosts;
    return this;
  }

  public ForumPostSearchResponse addRelatedPostsItem(ForumPostResponse relatedPostsItem) {
    if (this.relatedPosts == null) {
      this.relatedPosts = new ArrayList<>();
    }
    this.relatedPosts.add(relatedPostsItem);
    return this;
  }

   /**
   * Get relatedPosts
   * @return relatedPosts
  **/
  @ApiModelProperty(value = "")
  public List<ForumPostResponse> getRelatedPosts() {
    return relatedPosts;
  }

  public void setRelatedPosts(List<ForumPostResponse> relatedPosts) {
    this.relatedPosts = relatedPosts;
  }

  public ForumPostSearchResponse authors(List<UserGeneralUser> authors) {
    this.authors = authors;
    return this;
  }

  public ForumPostSearchResponse addAuthorsItem(UserGeneralUser authorsItem) {
    if (this.authors == null) {
      this.authors = new ArrayList<>();
    }
    this.authors.add(authorsItem);
    return this;
  }

   /**
   * Get authors
   * @return authors
  **/
  @ApiModelProperty(value = "")
  public List<UserGeneralUser> getAuthors() {
    return authors;
  }

  public void setAuthors(List<UserGeneralUser> authors) {
    this.authors = authors;
  }

  public ForumPostSearchResponse groups(List<GroupsV2GroupResponse> groups) {
    this.groups = groups;
    return this;
  }

  public ForumPostSearchResponse addGroupsItem(GroupsV2GroupResponse groupsItem) {
    if (this.groups == null) {
      this.groups = new ArrayList<>();
    }
    this.groups.add(groupsItem);
    return this;
  }

   /**
   * Get groups
   * @return groups
  **/
  @ApiModelProperty(value = "")
  public List<GroupsV2GroupResponse> getGroups() {
    return groups;
  }

  public void setGroups(List<GroupsV2GroupResponse> groups) {
    this.groups = groups;
  }

  public ForumPostSearchResponse searchedTags(List<TagsModelsContractsTagResponse> searchedTags) {
    this.searchedTags = searchedTags;
    return this;
  }

  public ForumPostSearchResponse addSearchedTagsItem(TagsModelsContractsTagResponse searchedTagsItem) {
    if (this.searchedTags == null) {
      this.searchedTags = new ArrayList<>();
    }
    this.searchedTags.add(searchedTagsItem);
    return this;
  }

   /**
   * Get searchedTags
   * @return searchedTags
  **/
  @ApiModelProperty(value = "")
  public List<TagsModelsContractsTagResponse> getSearchedTags() {
    return searchedTags;
  }

  public void setSearchedTags(List<TagsModelsContractsTagResponse> searchedTags) {
    this.searchedTags = searchedTags;
  }

  public ForumPostSearchResponse polls(List<ForumPollResponse> polls) {
    this.polls = polls;
    return this;
  }

  public ForumPostSearchResponse addPollsItem(ForumPollResponse pollsItem) {
    if (this.polls == null) {
      this.polls = new ArrayList<>();
    }
    this.polls.add(pollsItem);
    return this;
  }

   /**
   * Get polls
   * @return polls
  **/
  @ApiModelProperty(value = "")
  public List<ForumPollResponse> getPolls() {
    return polls;
  }

  public void setPolls(List<ForumPollResponse> polls) {
    this.polls = polls;
  }

  public ForumPostSearchResponse recruitmentDetails(List<ForumForumRecruitmentDetail> recruitmentDetails) {
    this.recruitmentDetails = recruitmentDetails;
    return this;
  }

  public ForumPostSearchResponse addRecruitmentDetailsItem(ForumForumRecruitmentDetail recruitmentDetailsItem) {
    if (this.recruitmentDetails == null) {
      this.recruitmentDetails = new ArrayList<>();
    }
    this.recruitmentDetails.add(recruitmentDetailsItem);
    return this;
  }

   /**
   * Get recruitmentDetails
   * @return recruitmentDetails
  **/
  @ApiModelProperty(value = "")
  public List<ForumForumRecruitmentDetail> getRecruitmentDetails() {
    return recruitmentDetails;
  }

  public void setRecruitmentDetails(List<ForumForumRecruitmentDetail> recruitmentDetails) {
    this.recruitmentDetails = recruitmentDetails;
  }

  public ForumPostSearchResponse availablePages(Integer availablePages) {
    this.availablePages = availablePages;
    return this;
  }

   /**
   * Get availablePages
   * @return availablePages
  **/
  @ApiModelProperty(value = "")
  public Integer getAvailablePages() {
    return availablePages;
  }

  public void setAvailablePages(Integer availablePages) {
    this.availablePages = availablePages;
  }

  public ForumPostSearchResponse results(List<ForumPostResponse> results) {
    this.results = results;
    return this;
  }

  public ForumPostSearchResponse addResultsItem(ForumPostResponse resultsItem) {
    if (this.results == null) {
      this.results = new ArrayList<>();
    }
    this.results.add(resultsItem);
    return this;
  }

   /**
   * Get results
   * @return results
  **/
  @ApiModelProperty(value = "")
  public List<ForumPostResponse> getResults() {
    return results;
  }

  public void setResults(List<ForumPostResponse> results) {
    this.results = results;
  }

  public ForumPostSearchResponse totalResults(Integer totalResults) {
    this.totalResults = totalResults;
    return this;
  }

   /**
   * Get totalResults
   * @return totalResults
  **/
  @ApiModelProperty(value = "")
  public Integer getTotalResults() {
    return totalResults;
  }

  public void setTotalResults(Integer totalResults) {
    this.totalResults = totalResults;
  }

  public ForumPostSearchResponse hasMore(Boolean hasMore) {
    this.hasMore = hasMore;
    return this;
  }

   /**
   * Get hasMore
   * @return hasMore
  **/
  @ApiModelProperty(value = "")
  public Boolean isHasMore() {
    return hasMore;
  }

  public void setHasMore(Boolean hasMore) {
    this.hasMore = hasMore;
  }

  public ForumPostSearchResponse query(QueriesPagedQuery query) {
    this.query = query;
    return this;
  }

   /**
   * Get query
   * @return query
  **/
  @ApiModelProperty(value = "")
  public QueriesPagedQuery getQuery() {
    return query;
  }

  public void setQuery(QueriesPagedQuery query) {
    this.query = query;
  }

  public ForumPostSearchResponse replacementContinuationToken(String replacementContinuationToken) {
    this.replacementContinuationToken = replacementContinuationToken;
    return this;
  }

   /**
   * Get replacementContinuationToken
   * @return replacementContinuationToken
  **/
  @ApiModelProperty(value = "")
  public String getReplacementContinuationToken() {
    return replacementContinuationToken;
  }

  public void setReplacementContinuationToken(String replacementContinuationToken) {
    this.replacementContinuationToken = replacementContinuationToken;
  }

  public ForumPostSearchResponse useTotalResults(Boolean useTotalResults) {
    this.useTotalResults = useTotalResults;
    return this;
  }

   /**
   * If useTotalResults is true, then totalResults represents an accurate count.  If False, it does not, and may be estimated/only the size of the current page.  Either way, you should probably always only trust hasMore.  This is a long-held historical throwback to when we used to do paging with known total results. Those queries toasted our database, and we were left to hastily alter our endpoints and create backward- compatible shims, of which useTotalResults is one.
   * @return useTotalResults
  **/
  @ApiModelProperty(value = "If useTotalResults is true, then totalResults represents an accurate count.  If False, it does not, and may be estimated/only the size of the current page.  Either way, you should probably always only trust hasMore.  This is a long-held historical throwback to when we used to do paging with known total results. Those queries toasted our database, and we were left to hastily alter our endpoints and create backward- compatible shims, of which useTotalResults is one.")
  public Boolean isUseTotalResults() {
    return useTotalResults;
  }

  public void setUseTotalResults(Boolean useTotalResults) {
    this.useTotalResults = useTotalResults;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ForumPostSearchResponse forumPostSearchResponse = (ForumPostSearchResponse) o;
    return Objects.equals(this.relatedPosts, forumPostSearchResponse.relatedPosts) &&
        Objects.equals(this.authors, forumPostSearchResponse.authors) &&
        Objects.equals(this.groups, forumPostSearchResponse.groups) &&
        Objects.equals(this.searchedTags, forumPostSearchResponse.searchedTags) &&
        Objects.equals(this.polls, forumPostSearchResponse.polls) &&
        Objects.equals(this.recruitmentDetails, forumPostSearchResponse.recruitmentDetails) &&
        Objects.equals(this.availablePages, forumPostSearchResponse.availablePages) &&
        Objects.equals(this.results, forumPostSearchResponse.results) &&
        Objects.equals(this.totalResults, forumPostSearchResponse.totalResults) &&
        Objects.equals(this.hasMore, forumPostSearchResponse.hasMore) &&
        Objects.equals(this.query, forumPostSearchResponse.query) &&
        Objects.equals(this.replacementContinuationToken, forumPostSearchResponse.replacementContinuationToken) &&
        Objects.equals(this.useTotalResults, forumPostSearchResponse.useTotalResults);
  }

  @Override
  public int hashCode() {
    return Objects.hash(relatedPosts, authors, groups, searchedTags, polls, recruitmentDetails, availablePages, results, totalResults, hasMore, query, replacementContinuationToken, useTotalResults);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ForumPostSearchResponse {\n");
    
    sb.append("    relatedPosts: ").append(toIndentedString(relatedPosts)).append("\n");
    sb.append("    authors: ").append(toIndentedString(authors)).append("\n");
    sb.append("    groups: ").append(toIndentedString(groups)).append("\n");
    sb.append("    searchedTags: ").append(toIndentedString(searchedTags)).append("\n");
    sb.append("    polls: ").append(toIndentedString(polls)).append("\n");
    sb.append("    recruitmentDetails: ").append(toIndentedString(recruitmentDetails)).append("\n");
    sb.append("    availablePages: ").append(toIndentedString(availablePages)).append("\n");
    sb.append("    results: ").append(toIndentedString(results)).append("\n");
    sb.append("    totalResults: ").append(toIndentedString(totalResults)).append("\n");
    sb.append("    hasMore: ").append(toIndentedString(hasMore)).append("\n");
    sb.append("    query: ").append(toIndentedString(query)).append("\n");
    sb.append("    replacementContinuationToken: ").append(toIndentedString(replacementContinuationToken)).append("\n");
    sb.append("    useTotalResults: ").append(toIndentedString(useTotalResults)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

