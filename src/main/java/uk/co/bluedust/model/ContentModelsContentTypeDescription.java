/*
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.3.2
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package uk.co.bluedust.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import uk.co.bluedust.model.ContentModelsContentPreview;
import uk.co.bluedust.model.ContentModelsContentTypeProperty;
import uk.co.bluedust.model.ContentModelsContentTypePropertySection;
import uk.co.bluedust.model.ContentModelsTagMetadataDefinition;
import uk.co.bluedust.model.ContentModelsTagMetadataItem;

/**
 * ContentModelsContentTypeDescription
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-11-04T16:50:06.922Z")
public class ContentModelsContentTypeDescription {
  @JsonProperty("cType")
  private String cType = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("contentDescription")
  private String contentDescription = null;

  @JsonProperty("previewImage")
  private String previewImage = null;

  @JsonProperty("priority")
  private Integer priority = null;

  @JsonProperty("reminder")
  private String reminder = null;

  @JsonProperty("properties")
  private List<ContentModelsContentTypeProperty> properties = null;

  @JsonProperty("tagMetadata")
  private List<ContentModelsTagMetadataDefinition> tagMetadata = null;

  @JsonProperty("tagMetadataItems")
  private Map<String, ContentModelsTagMetadataItem> tagMetadataItems = null;

  @JsonProperty("usageExamples")
  private List<String> usageExamples = null;

  @JsonProperty("showInContentEditor")
  private Boolean showInContentEditor = null;

  @JsonProperty("typeOf")
  private String typeOf = null;

  @JsonProperty("bindIdentifierToProperty")
  private String bindIdentifierToProperty = null;

  @JsonProperty("boundRegex")
  private String boundRegex = null;

  @JsonProperty("forceIdentifierBinding")
  private Boolean forceIdentifierBinding = null;

  @JsonProperty("allowComments")
  private Boolean allowComments = null;

  @JsonProperty("autoEnglishPropertyFallback")
  private Boolean autoEnglishPropertyFallback = null;

  @JsonProperty("bulkUploadable")
  private Boolean bulkUploadable = null;

  @JsonProperty("previews")
  private List<ContentModelsContentPreview> previews = null;

  @JsonProperty("suppressCmsPath")
  private Boolean suppressCmsPath = null;

  @JsonProperty("propertySections")
  private List<ContentModelsContentTypePropertySection> propertySections = null;

  public ContentModelsContentTypeDescription cType(String cType) {
    this.cType = cType;
    return this;
  }

   /**
   * Get cType
   * @return cType
  **/
  @ApiModelProperty(value = "")
  public String getCType() {
    return cType;
  }

  public void setCType(String cType) {
    this.cType = cType;
  }

  public ContentModelsContentTypeDescription name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ContentModelsContentTypeDescription contentDescription(String contentDescription) {
    this.contentDescription = contentDescription;
    return this;
  }

   /**
   * Get contentDescription
   * @return contentDescription
  **/
  @ApiModelProperty(value = "")
  public String getContentDescription() {
    return contentDescription;
  }

  public void setContentDescription(String contentDescription) {
    this.contentDescription = contentDescription;
  }

  public ContentModelsContentTypeDescription previewImage(String previewImage) {
    this.previewImage = previewImage;
    return this;
  }

   /**
   * Get previewImage
   * @return previewImage
  **/
  @ApiModelProperty(value = "")
  public String getPreviewImage() {
    return previewImage;
  }

  public void setPreviewImage(String previewImage) {
    this.previewImage = previewImage;
  }

  public ContentModelsContentTypeDescription priority(Integer priority) {
    this.priority = priority;
    return this;
  }

   /**
   * Get priority
   * @return priority
  **/
  @ApiModelProperty(value = "")
  public Integer getPriority() {
    return priority;
  }

  public void setPriority(Integer priority) {
    this.priority = priority;
  }

  public ContentModelsContentTypeDescription reminder(String reminder) {
    this.reminder = reminder;
    return this;
  }

   /**
   * Get reminder
   * @return reminder
  **/
  @ApiModelProperty(value = "")
  public String getReminder() {
    return reminder;
  }

  public void setReminder(String reminder) {
    this.reminder = reminder;
  }

  public ContentModelsContentTypeDescription properties(List<ContentModelsContentTypeProperty> properties) {
    this.properties = properties;
    return this;
  }

  public ContentModelsContentTypeDescription addPropertiesItem(ContentModelsContentTypeProperty propertiesItem) {
    if (this.properties == null) {
      this.properties = new ArrayList<>();
    }
    this.properties.add(propertiesItem);
    return this;
  }

   /**
   * Get properties
   * @return properties
  **/
  @ApiModelProperty(value = "")
  public List<ContentModelsContentTypeProperty> getProperties() {
    return properties;
  }

  public void setProperties(List<ContentModelsContentTypeProperty> properties) {
    this.properties = properties;
  }

  public ContentModelsContentTypeDescription tagMetadata(List<ContentModelsTagMetadataDefinition> tagMetadata) {
    this.tagMetadata = tagMetadata;
    return this;
  }

  public ContentModelsContentTypeDescription addTagMetadataItem(ContentModelsTagMetadataDefinition tagMetadataItem) {
    if (this.tagMetadata == null) {
      this.tagMetadata = new ArrayList<>();
    }
    this.tagMetadata.add(tagMetadataItem);
    return this;
  }

   /**
   * Get tagMetadata
   * @return tagMetadata
  **/
  @ApiModelProperty(value = "")
  public List<ContentModelsTagMetadataDefinition> getTagMetadata() {
    return tagMetadata;
  }

  public void setTagMetadata(List<ContentModelsTagMetadataDefinition> tagMetadata) {
    this.tagMetadata = tagMetadata;
  }

  public ContentModelsContentTypeDescription tagMetadataItems(Map<String, ContentModelsTagMetadataItem> tagMetadataItems) {
    this.tagMetadataItems = tagMetadataItems;
    return this;
  }

  public ContentModelsContentTypeDescription putTagMetadataItemsItem(String key, ContentModelsTagMetadataItem tagMetadataItemsItem) {
    if (this.tagMetadataItems == null) {
      this.tagMetadataItems = new HashMap<>();
    }
    this.tagMetadataItems.put(key, tagMetadataItemsItem);
    return this;
  }

   /**
   * Get tagMetadataItems
   * @return tagMetadataItems
  **/
  @ApiModelProperty(value = "")
  public Map<String, ContentModelsTagMetadataItem> getTagMetadataItems() {
    return tagMetadataItems;
  }

  public void setTagMetadataItems(Map<String, ContentModelsTagMetadataItem> tagMetadataItems) {
    this.tagMetadataItems = tagMetadataItems;
  }

  public ContentModelsContentTypeDescription usageExamples(List<String> usageExamples) {
    this.usageExamples = usageExamples;
    return this;
  }

  public ContentModelsContentTypeDescription addUsageExamplesItem(String usageExamplesItem) {
    if (this.usageExamples == null) {
      this.usageExamples = new ArrayList<>();
    }
    this.usageExamples.add(usageExamplesItem);
    return this;
  }

   /**
   * Get usageExamples
   * @return usageExamples
  **/
  @ApiModelProperty(value = "")
  public List<String> getUsageExamples() {
    return usageExamples;
  }

  public void setUsageExamples(List<String> usageExamples) {
    this.usageExamples = usageExamples;
  }

  public ContentModelsContentTypeDescription showInContentEditor(Boolean showInContentEditor) {
    this.showInContentEditor = showInContentEditor;
    return this;
  }

   /**
   * Get showInContentEditor
   * @return showInContentEditor
  **/
  @ApiModelProperty(value = "")
  public Boolean isShowInContentEditor() {
    return showInContentEditor;
  }

  public void setShowInContentEditor(Boolean showInContentEditor) {
    this.showInContentEditor = showInContentEditor;
  }

  public ContentModelsContentTypeDescription typeOf(String typeOf) {
    this.typeOf = typeOf;
    return this;
  }

   /**
   * Get typeOf
   * @return typeOf
  **/
  @ApiModelProperty(value = "")
  public String getTypeOf() {
    return typeOf;
  }

  public void setTypeOf(String typeOf) {
    this.typeOf = typeOf;
  }

  public ContentModelsContentTypeDescription bindIdentifierToProperty(String bindIdentifierToProperty) {
    this.bindIdentifierToProperty = bindIdentifierToProperty;
    return this;
  }

   /**
   * Get bindIdentifierToProperty
   * @return bindIdentifierToProperty
  **/
  @ApiModelProperty(value = "")
  public String getBindIdentifierToProperty() {
    return bindIdentifierToProperty;
  }

  public void setBindIdentifierToProperty(String bindIdentifierToProperty) {
    this.bindIdentifierToProperty = bindIdentifierToProperty;
  }

  public ContentModelsContentTypeDescription boundRegex(String boundRegex) {
    this.boundRegex = boundRegex;
    return this;
  }

   /**
   * Get boundRegex
   * @return boundRegex
  **/
  @ApiModelProperty(value = "")
  public String getBoundRegex() {
    return boundRegex;
  }

  public void setBoundRegex(String boundRegex) {
    this.boundRegex = boundRegex;
  }

  public ContentModelsContentTypeDescription forceIdentifierBinding(Boolean forceIdentifierBinding) {
    this.forceIdentifierBinding = forceIdentifierBinding;
    return this;
  }

   /**
   * Get forceIdentifierBinding
   * @return forceIdentifierBinding
  **/
  @ApiModelProperty(value = "")
  public Boolean isForceIdentifierBinding() {
    return forceIdentifierBinding;
  }

  public void setForceIdentifierBinding(Boolean forceIdentifierBinding) {
    this.forceIdentifierBinding = forceIdentifierBinding;
  }

  public ContentModelsContentTypeDescription allowComments(Boolean allowComments) {
    this.allowComments = allowComments;
    return this;
  }

   /**
   * Get allowComments
   * @return allowComments
  **/
  @ApiModelProperty(value = "")
  public Boolean isAllowComments() {
    return allowComments;
  }

  public void setAllowComments(Boolean allowComments) {
    this.allowComments = allowComments;
  }

  public ContentModelsContentTypeDescription autoEnglishPropertyFallback(Boolean autoEnglishPropertyFallback) {
    this.autoEnglishPropertyFallback = autoEnglishPropertyFallback;
    return this;
  }

   /**
   * Get autoEnglishPropertyFallback
   * @return autoEnglishPropertyFallback
  **/
  @ApiModelProperty(value = "")
  public Boolean isAutoEnglishPropertyFallback() {
    return autoEnglishPropertyFallback;
  }

  public void setAutoEnglishPropertyFallback(Boolean autoEnglishPropertyFallback) {
    this.autoEnglishPropertyFallback = autoEnglishPropertyFallback;
  }

  public ContentModelsContentTypeDescription bulkUploadable(Boolean bulkUploadable) {
    this.bulkUploadable = bulkUploadable;
    return this;
  }

   /**
   * Get bulkUploadable
   * @return bulkUploadable
  **/
  @ApiModelProperty(value = "")
  public Boolean isBulkUploadable() {
    return bulkUploadable;
  }

  public void setBulkUploadable(Boolean bulkUploadable) {
    this.bulkUploadable = bulkUploadable;
  }

  public ContentModelsContentTypeDescription previews(List<ContentModelsContentPreview> previews) {
    this.previews = previews;
    return this;
  }

  public ContentModelsContentTypeDescription addPreviewsItem(ContentModelsContentPreview previewsItem) {
    if (this.previews == null) {
      this.previews = new ArrayList<>();
    }
    this.previews.add(previewsItem);
    return this;
  }

   /**
   * Get previews
   * @return previews
  **/
  @ApiModelProperty(value = "")
  public List<ContentModelsContentPreview> getPreviews() {
    return previews;
  }

  public void setPreviews(List<ContentModelsContentPreview> previews) {
    this.previews = previews;
  }

  public ContentModelsContentTypeDescription suppressCmsPath(Boolean suppressCmsPath) {
    this.suppressCmsPath = suppressCmsPath;
    return this;
  }

   /**
   * Get suppressCmsPath
   * @return suppressCmsPath
  **/
  @ApiModelProperty(value = "")
  public Boolean isSuppressCmsPath() {
    return suppressCmsPath;
  }

  public void setSuppressCmsPath(Boolean suppressCmsPath) {
    this.suppressCmsPath = suppressCmsPath;
  }

  public ContentModelsContentTypeDescription propertySections(List<ContentModelsContentTypePropertySection> propertySections) {
    this.propertySections = propertySections;
    return this;
  }

  public ContentModelsContentTypeDescription addPropertySectionsItem(ContentModelsContentTypePropertySection propertySectionsItem) {
    if (this.propertySections == null) {
      this.propertySections = new ArrayList<>();
    }
    this.propertySections.add(propertySectionsItem);
    return this;
  }

   /**
   * Get propertySections
   * @return propertySections
  **/
  @ApiModelProperty(value = "")
  public List<ContentModelsContentTypePropertySection> getPropertySections() {
    return propertySections;
  }

  public void setPropertySections(List<ContentModelsContentTypePropertySection> propertySections) {
    this.propertySections = propertySections;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ContentModelsContentTypeDescription contentModelsContentTypeDescription = (ContentModelsContentTypeDescription) o;
    return Objects.equals(this.cType, contentModelsContentTypeDescription.cType) &&
        Objects.equals(this.name, contentModelsContentTypeDescription.name) &&
        Objects.equals(this.contentDescription, contentModelsContentTypeDescription.contentDescription) &&
        Objects.equals(this.previewImage, contentModelsContentTypeDescription.previewImage) &&
        Objects.equals(this.priority, contentModelsContentTypeDescription.priority) &&
        Objects.equals(this.reminder, contentModelsContentTypeDescription.reminder) &&
        Objects.equals(this.properties, contentModelsContentTypeDescription.properties) &&
        Objects.equals(this.tagMetadata, contentModelsContentTypeDescription.tagMetadata) &&
        Objects.equals(this.tagMetadataItems, contentModelsContentTypeDescription.tagMetadataItems) &&
        Objects.equals(this.usageExamples, contentModelsContentTypeDescription.usageExamples) &&
        Objects.equals(this.showInContentEditor, contentModelsContentTypeDescription.showInContentEditor) &&
        Objects.equals(this.typeOf, contentModelsContentTypeDescription.typeOf) &&
        Objects.equals(this.bindIdentifierToProperty, contentModelsContentTypeDescription.bindIdentifierToProperty) &&
        Objects.equals(this.boundRegex, contentModelsContentTypeDescription.boundRegex) &&
        Objects.equals(this.forceIdentifierBinding, contentModelsContentTypeDescription.forceIdentifierBinding) &&
        Objects.equals(this.allowComments, contentModelsContentTypeDescription.allowComments) &&
        Objects.equals(this.autoEnglishPropertyFallback, contentModelsContentTypeDescription.autoEnglishPropertyFallback) &&
        Objects.equals(this.bulkUploadable, contentModelsContentTypeDescription.bulkUploadable) &&
        Objects.equals(this.previews, contentModelsContentTypeDescription.previews) &&
        Objects.equals(this.suppressCmsPath, contentModelsContentTypeDescription.suppressCmsPath) &&
        Objects.equals(this.propertySections, contentModelsContentTypeDescription.propertySections);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cType, name, contentDescription, previewImage, priority, reminder, properties, tagMetadata, tagMetadataItems, usageExamples, showInContentEditor, typeOf, bindIdentifierToProperty, boundRegex, forceIdentifierBinding, allowComments, autoEnglishPropertyFallback, bulkUploadable, previews, suppressCmsPath, propertySections);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ContentModelsContentTypeDescription {\n");
    
    sb.append("    cType: ").append(toIndentedString(cType)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    contentDescription: ").append(toIndentedString(contentDescription)).append("\n");
    sb.append("    previewImage: ").append(toIndentedString(previewImage)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    reminder: ").append(toIndentedString(reminder)).append("\n");
    sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
    sb.append("    tagMetadata: ").append(toIndentedString(tagMetadata)).append("\n");
    sb.append("    tagMetadataItems: ").append(toIndentedString(tagMetadataItems)).append("\n");
    sb.append("    usageExamples: ").append(toIndentedString(usageExamples)).append("\n");
    sb.append("    showInContentEditor: ").append(toIndentedString(showInContentEditor)).append("\n");
    sb.append("    typeOf: ").append(toIndentedString(typeOf)).append("\n");
    sb.append("    bindIdentifierToProperty: ").append(toIndentedString(bindIdentifierToProperty)).append("\n");
    sb.append("    boundRegex: ").append(toIndentedString(boundRegex)).append("\n");
    sb.append("    forceIdentifierBinding: ").append(toIndentedString(forceIdentifierBinding)).append("\n");
    sb.append("    allowComments: ").append(toIndentedString(allowComments)).append("\n");
    sb.append("    autoEnglishPropertyFallback: ").append(toIndentedString(autoEnglishPropertyFallback)).append("\n");
    sb.append("    bulkUploadable: ").append(toIndentedString(bulkUploadable)).append("\n");
    sb.append("    previews: ").append(toIndentedString(previews)).append("\n");
    sb.append("    suppressCmsPath: ").append(toIndentedString(suppressCmsPath)).append("\n");
    sb.append("    propertySections: ").append(toIndentedString(propertySections)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

