/*
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.3.2
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package uk.co.bluedust.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;

/**
 * Information about the category and items currently sold in that category.
 */
@ApiModel(description = "Information about the category and items currently sold in that category.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-09-29T19:57:25.109+01:00")
public class DestinyEntitiesVendorsDestinyVendorCategory {
  @JsonProperty("displayCategoryIndex")
  private Integer displayCategoryIndex = null;

  @JsonProperty("itemIndexes")
  private List<Integer> itemIndexes = null;

  public DestinyEntitiesVendorsDestinyVendorCategory displayCategoryIndex(Integer displayCategoryIndex) {
    this.displayCategoryIndex = displayCategoryIndex;
    return this;
  }

   /**
   * An index into the DestinyVendorDefinition.displayCategories property, so you can grab the display data for this category.
   * @return displayCategoryIndex
  **/
  @ApiModelProperty(value = "An index into the DestinyVendorDefinition.displayCategories property, so you can grab the display data for this category.")
  public Integer getDisplayCategoryIndex() {
    return displayCategoryIndex;
  }

  public void setDisplayCategoryIndex(Integer displayCategoryIndex) {
    this.displayCategoryIndex = displayCategoryIndex;
  }

  public DestinyEntitiesVendorsDestinyVendorCategory itemIndexes(List<Integer> itemIndexes) {
    this.itemIndexes = itemIndexes;
    return this;
  }

  public DestinyEntitiesVendorsDestinyVendorCategory addItemIndexesItem(Integer itemIndexesItem) {
    if (this.itemIndexes == null) {
      this.itemIndexes = new ArrayList<>();
    }
    this.itemIndexes.add(itemIndexesItem);
    return this;
  }

   /**
   * An ordered list of indexes into items being sold in this category (DestinyVendorDefinition.itemList) which will contain more information about the items being sold themselves. Can also be used to index into DestinyVendorSaleItemComponent data, if you asked for that data to be returned.
   * @return itemIndexes
  **/
  @ApiModelProperty(value = "An ordered list of indexes into items being sold in this category (DestinyVendorDefinition.itemList) which will contain more information about the items being sold themselves. Can also be used to index into DestinyVendorSaleItemComponent data, if you asked for that data to be returned.")
  public List<Integer> getItemIndexes() {
    return itemIndexes;
  }

  public void setItemIndexes(List<Integer> itemIndexes) {
    this.itemIndexes = itemIndexes;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DestinyEntitiesVendorsDestinyVendorCategory destinyEntitiesVendorsDestinyVendorCategory = (DestinyEntitiesVendorsDestinyVendorCategory) o;
    return Objects.equals(this.displayCategoryIndex, destinyEntitiesVendorsDestinyVendorCategory.displayCategoryIndex) &&
        Objects.equals(this.itemIndexes, destinyEntitiesVendorsDestinyVendorCategory.itemIndexes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayCategoryIndex, itemIndexes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DestinyEntitiesVendorsDestinyVendorCategory {\n");
    
    sb.append("    displayCategoryIndex: ").append(toIndentedString(displayCategoryIndex)).append("\n");
    sb.append("    itemIndexes: ").append(toIndentedString(itemIndexes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

