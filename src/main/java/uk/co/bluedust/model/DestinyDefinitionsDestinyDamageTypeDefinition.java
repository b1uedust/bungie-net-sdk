/*
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.3.2
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package uk.co.bluedust.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * All damage types that are possible in the game are defined here, along with localized info and icons as needed.
 */
@ApiModel(description = "All damage types that are possible in the game are defined here, along with localized info and icons as needed.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-11-04T23:34:27.728Z")
public class DestinyDefinitionsDestinyDamageTypeDefinition {
  @JsonProperty("displayProperties")
  private Object displayProperties = null;

  @JsonProperty("transparentIconPath")
  private String transparentIconPath = null;

  @JsonProperty("showIcon")
  private Boolean showIcon = null;

  @JsonProperty("enumValue")
  private Object enumValue = null;

  @JsonProperty("hash")
  private Long hash = null;

  @JsonProperty("index")
  private Integer index = null;

  @JsonProperty("redacted")
  private Boolean redacted = null;

  public DestinyDefinitionsDestinyDamageTypeDefinition displayProperties(Object displayProperties) {
    this.displayProperties = displayProperties;
    return this;
  }

   /**
   * The description of the damage type, icon etc...
   * @return displayProperties
  **/
  @ApiModelProperty(value = "The description of the damage type, icon etc...")
  public Object getDisplayProperties() {
    return displayProperties;
  }

  public void setDisplayProperties(Object displayProperties) {
    this.displayProperties = displayProperties;
  }

  public DestinyDefinitionsDestinyDamageTypeDefinition transparentIconPath(String transparentIconPath) {
    this.transparentIconPath = transparentIconPath;
    return this;
  }

   /**
   * A variant of the icon that is transparent and colorless.
   * @return transparentIconPath
  **/
  @ApiModelProperty(value = "A variant of the icon that is transparent and colorless.")
  public String getTransparentIconPath() {
    return transparentIconPath;
  }

  public void setTransparentIconPath(String transparentIconPath) {
    this.transparentIconPath = transparentIconPath;
  }

  public DestinyDefinitionsDestinyDamageTypeDefinition showIcon(Boolean showIcon) {
    this.showIcon = showIcon;
    return this;
  }

   /**
   * If TRUE, the game shows this damage type&#39;s icon. Otherwise, it doesn&#39;t. Whether you show it or not is up to you.
   * @return showIcon
  **/
  @ApiModelProperty(value = "If TRUE, the game shows this damage type's icon. Otherwise, it doesn't. Whether you show it or not is up to you.")
  public Boolean isShowIcon() {
    return showIcon;
  }

  public void setShowIcon(Boolean showIcon) {
    this.showIcon = showIcon;
  }

  public DestinyDefinitionsDestinyDamageTypeDefinition enumValue(Object enumValue) {
    this.enumValue = enumValue;
    return this;
  }

   /**
   * We have an enumeration for damage types for quick reference. This is the current definition&#39;s damage type enum value.
   * @return enumValue
  **/
  @ApiModelProperty(value = "We have an enumeration for damage types for quick reference. This is the current definition's damage type enum value.")
  public Object getEnumValue() {
    return enumValue;
  }

  public void setEnumValue(Object enumValue) {
    this.enumValue = enumValue;
  }

  public DestinyDefinitionsDestinyDamageTypeDefinition hash(Long hash) {
    this.hash = hash;
    return this;
  }

   /**
   * The unique identifier for this entity. Guaranteed to be unique for the type of entity, but not globally.  When entities refer to each other in Destiny content, it is this hash that they are referring to.
   * @return hash
  **/
  @ApiModelProperty(value = "The unique identifier for this entity. Guaranteed to be unique for the type of entity, but not globally.  When entities refer to each other in Destiny content, it is this hash that they are referring to.")
  public Long getHash() {
    return hash;
  }

  public void setHash(Long hash) {
    this.hash = hash;
  }

  public DestinyDefinitionsDestinyDamageTypeDefinition index(Integer index) {
    this.index = index;
    return this;
  }

   /**
   * The index of the entity as it was found in the investment tables.
   * @return index
  **/
  @ApiModelProperty(value = "The index of the entity as it was found in the investment tables.")
  public Integer getIndex() {
    return index;
  }

  public void setIndex(Integer index) {
    this.index = index;
  }

  public DestinyDefinitionsDestinyDamageTypeDefinition redacted(Boolean redacted) {
    this.redacted = redacted;
    return this;
  }

   /**
   * If this is true, then there is an entity with this identifier/type combination, but BNet is not yet allowed to show it. Sorry!
   * @return redacted
  **/
  @ApiModelProperty(value = "If this is true, then there is an entity with this identifier/type combination, but BNet is not yet allowed to show it. Sorry!")
  public Boolean isRedacted() {
    return redacted;
  }

  public void setRedacted(Boolean redacted) {
    this.redacted = redacted;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DestinyDefinitionsDestinyDamageTypeDefinition destinyDefinitionsDestinyDamageTypeDefinition = (DestinyDefinitionsDestinyDamageTypeDefinition) o;
    return Objects.equals(this.displayProperties, destinyDefinitionsDestinyDamageTypeDefinition.displayProperties) &&
        Objects.equals(this.transparentIconPath, destinyDefinitionsDestinyDamageTypeDefinition.transparentIconPath) &&
        Objects.equals(this.showIcon, destinyDefinitionsDestinyDamageTypeDefinition.showIcon) &&
        Objects.equals(this.enumValue, destinyDefinitionsDestinyDamageTypeDefinition.enumValue) &&
        Objects.equals(this.hash, destinyDefinitionsDestinyDamageTypeDefinition.hash) &&
        Objects.equals(this.index, destinyDefinitionsDestinyDamageTypeDefinition.index) &&
        Objects.equals(this.redacted, destinyDefinitionsDestinyDamageTypeDefinition.redacted);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayProperties, transparentIconPath, showIcon, enumValue, hash, index, redacted);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DestinyDefinitionsDestinyDamageTypeDefinition {\n");
    
    sb.append("    displayProperties: ").append(toIndentedString(displayProperties)).append("\n");
    sb.append("    transparentIconPath: ").append(toIndentedString(transparentIconPath)).append("\n");
    sb.append("    showIcon: ").append(toIndentedString(showIcon)).append("\n");
    sb.append("    enumValue: ").append(toIndentedString(enumValue)).append("\n");
    sb.append("    hash: ").append(toIndentedString(hash)).append("\n");
    sb.append("    index: ").append(toIndentedString(index)).append("\n");
    sb.append("    redacted: ").append(toIndentedString(redacted)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

