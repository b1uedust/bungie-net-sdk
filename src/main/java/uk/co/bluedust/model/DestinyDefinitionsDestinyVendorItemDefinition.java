/*
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.3.2
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package uk.co.bluedust.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import uk.co.bluedust.model.DestinyDefinitionsDestinyItemCreationEntryLevelDefinition;
import uk.co.bluedust.model.DestinyDefinitionsDestinyVendorItemQuantity;
import uk.co.bluedust.model.DestinyDefinitionsDestinyVendorItemSocketOverride;

/**
 * This represents an item being sold by the vendor.
 */
@ApiModel(description = "This represents an item being sold by the vendor.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-11-04T23:34:27.728Z")
public class DestinyDefinitionsDestinyVendorItemDefinition {
  @JsonProperty("vendorItemIndex")
  private Integer vendorItemIndex = null;

  @JsonProperty("itemHash")
  private Long itemHash = null;

  @JsonProperty("quantity")
  private Integer quantity = null;

  @JsonProperty("failureIndexes")
  private List<Integer> failureIndexes = null;

  @JsonProperty("currencies")
  private List<DestinyDefinitionsDestinyVendorItemQuantity> currencies = null;

  @JsonProperty("refundPolicy")
  private Object refundPolicy = null;

  @JsonProperty("refundTimeLimit")
  private Integer refundTimeLimit = null;

  @JsonProperty("creationLevels")
  private List<DestinyDefinitionsDestinyItemCreationEntryLevelDefinition> creationLevels = null;

  @JsonProperty("displayCategoryIndex")
  private Integer displayCategoryIndex = null;

  @JsonProperty("categoryIndex")
  private Integer categoryIndex = null;

  @JsonProperty("originalCategoryIndex")
  private Integer originalCategoryIndex = null;

  @JsonProperty("minimumLevel")
  private Integer minimumLevel = null;

  @JsonProperty("maximumLevel")
  private Integer maximumLevel = null;

  @JsonProperty("action")
  private Object action = null;

  @JsonProperty("displayCategory")
  private String displayCategory = null;

  @JsonProperty("inventoryBucketHash")
  private Long inventoryBucketHash = null;

  @JsonProperty("visibilityScope")
  private Object visibilityScope = null;

  @JsonProperty("purchasableScope")
  private Object purchasableScope = null;

  @JsonProperty("exclusivity")
  private Object exclusivity = null;

  @JsonProperty("isOffer")
  private Boolean isOffer = null;

  @JsonProperty("isCrm")
  private Boolean isCrm = null;

  @JsonProperty("sortValue")
  private Integer sortValue = null;

  @JsonProperty("expirationTooltip")
  private String expirationTooltip = null;

  @JsonProperty("redirectToSaleIndexes")
  private List<Integer> redirectToSaleIndexes = null;

  @JsonProperty("socketOverrides")
  private List<DestinyDefinitionsDestinyVendorItemSocketOverride> socketOverrides = null;

  public DestinyDefinitionsDestinyVendorItemDefinition vendorItemIndex(Integer vendorItemIndex) {
    this.vendorItemIndex = vendorItemIndex;
    return this;
  }

   /**
   * The index into the DestinyVendorDefinition.saleList. This is what we use to refer to items being sold throughout live and definition data.
   * @return vendorItemIndex
  **/
  @ApiModelProperty(value = "The index into the DestinyVendorDefinition.saleList. This is what we use to refer to items being sold throughout live and definition data.")
  public Integer getVendorItemIndex() {
    return vendorItemIndex;
  }

  public void setVendorItemIndex(Integer vendorItemIndex) {
    this.vendorItemIndex = vendorItemIndex;
  }

  public DestinyDefinitionsDestinyVendorItemDefinition itemHash(Long itemHash) {
    this.itemHash = itemHash;
    return this;
  }

   /**
   * The hash identifier of the item being sold (DestinyInventoryItemDefinition).  Note that a vendor can sell the same item in multiple ways, so don&#39;t assume that itemHash is a unique identifier for this entity.
   * @return itemHash
  **/
  @ApiModelProperty(value = "The hash identifier of the item being sold (DestinyInventoryItemDefinition).  Note that a vendor can sell the same item in multiple ways, so don't assume that itemHash is a unique identifier for this entity.")
  public Long getItemHash() {
    return itemHash;
  }

  public void setItemHash(Long itemHash) {
    this.itemHash = itemHash;
  }

  public DestinyDefinitionsDestinyVendorItemDefinition quantity(Integer quantity) {
    this.quantity = quantity;
    return this;
  }

   /**
   * The amount you will recieve of the item described in itemHash if you make the purchase.
   * @return quantity
  **/
  @ApiModelProperty(value = "The amount you will recieve of the item described in itemHash if you make the purchase.")
  public Integer getQuantity() {
    return quantity;
  }

  public void setQuantity(Integer quantity) {
    this.quantity = quantity;
  }

  public DestinyDefinitionsDestinyVendorItemDefinition failureIndexes(List<Integer> failureIndexes) {
    this.failureIndexes = failureIndexes;
    return this;
  }

  public DestinyDefinitionsDestinyVendorItemDefinition addFailureIndexesItem(Integer failureIndexesItem) {
    if (this.failureIndexes == null) {
      this.failureIndexes = new ArrayList<>();
    }
    this.failureIndexes.add(failureIndexesItem);
    return this;
  }

   /**
   * An list of indexes into the DestinyVendorDefinition.failureStrings array, indicating the possible failure strings that can be relevant for this item.
   * @return failureIndexes
  **/
  @ApiModelProperty(value = "An list of indexes into the DestinyVendorDefinition.failureStrings array, indicating the possible failure strings that can be relevant for this item.")
  public List<Integer> getFailureIndexes() {
    return failureIndexes;
  }

  public void setFailureIndexes(List<Integer> failureIndexes) {
    this.failureIndexes = failureIndexes;
  }

  public DestinyDefinitionsDestinyVendorItemDefinition currencies(List<DestinyDefinitionsDestinyVendorItemQuantity> currencies) {
    this.currencies = currencies;
    return this;
  }

  public DestinyDefinitionsDestinyVendorItemDefinition addCurrenciesItem(DestinyDefinitionsDestinyVendorItemQuantity currenciesItem) {
    if (this.currencies == null) {
      this.currencies = new ArrayList<>();
    }
    this.currencies.add(currenciesItem);
    return this;
  }

   /**
   * This is a pre-compiled aggregation of item value and priceOverrideList, so that we have one place to check for what the purchaser must pay for the item. Use this instead of trying to piece together the price separately.  The somewhat crappy part about this is that, now that item quantity overrides have dynamic modifiers, this will not necessarily be statically true. If you were using this instead of live data, switch to using live data.
   * @return currencies
  **/
  @ApiModelProperty(value = "This is a pre-compiled aggregation of item value and priceOverrideList, so that we have one place to check for what the purchaser must pay for the item. Use this instead of trying to piece together the price separately.  The somewhat crappy part about this is that, now that item quantity overrides have dynamic modifiers, this will not necessarily be statically true. If you were using this instead of live data, switch to using live data.")
  public List<DestinyDefinitionsDestinyVendorItemQuantity> getCurrencies() {
    return currencies;
  }

  public void setCurrencies(List<DestinyDefinitionsDestinyVendorItemQuantity> currencies) {
    this.currencies = currencies;
  }

  public DestinyDefinitionsDestinyVendorItemDefinition refundPolicy(Object refundPolicy) {
    this.refundPolicy = refundPolicy;
    return this;
  }

   /**
   * If this item can be refunded, this is the policy for what will be refundd, how, and in what time period.
   * @return refundPolicy
  **/
  @ApiModelProperty(value = "If this item can be refunded, this is the policy for what will be refundd, how, and in what time period.")
  public Object getRefundPolicy() {
    return refundPolicy;
  }

  public void setRefundPolicy(Object refundPolicy) {
    this.refundPolicy = refundPolicy;
  }

  public DestinyDefinitionsDestinyVendorItemDefinition refundTimeLimit(Integer refundTimeLimit) {
    this.refundTimeLimit = refundTimeLimit;
    return this;
  }

   /**
   * The amount of time before refundability of the newly purchased item will expire.
   * @return refundTimeLimit
  **/
  @ApiModelProperty(value = "The amount of time before refundability of the newly purchased item will expire.")
  public Integer getRefundTimeLimit() {
    return refundTimeLimit;
  }

  public void setRefundTimeLimit(Integer refundTimeLimit) {
    this.refundTimeLimit = refundTimeLimit;
  }

  public DestinyDefinitionsDestinyVendorItemDefinition creationLevels(List<DestinyDefinitionsDestinyItemCreationEntryLevelDefinition> creationLevels) {
    this.creationLevels = creationLevels;
    return this;
  }

  public DestinyDefinitionsDestinyVendorItemDefinition addCreationLevelsItem(DestinyDefinitionsDestinyItemCreationEntryLevelDefinition creationLevelsItem) {
    if (this.creationLevels == null) {
      this.creationLevels = new ArrayList<>();
    }
    this.creationLevels.add(creationLevelsItem);
    return this;
  }

   /**
   * The Default level at which the item will spawn. Almost always driven by an adjusto these days. Ideally should be singular. It&#39;s a long story how this ended up as a list, but there is always either going to be 0:1 of these entities.
   * @return creationLevels
  **/
  @ApiModelProperty(value = "The Default level at which the item will spawn. Almost always driven by an adjusto these days. Ideally should be singular. It's a long story how this ended up as a list, but there is always either going to be 0:1 of these entities.")
  public List<DestinyDefinitionsDestinyItemCreationEntryLevelDefinition> getCreationLevels() {
    return creationLevels;
  }

  public void setCreationLevels(List<DestinyDefinitionsDestinyItemCreationEntryLevelDefinition> creationLevels) {
    this.creationLevels = creationLevels;
  }

  public DestinyDefinitionsDestinyVendorItemDefinition displayCategoryIndex(Integer displayCategoryIndex) {
    this.displayCategoryIndex = displayCategoryIndex;
    return this;
  }

   /**
   * This is an index specifically into the display category, as opposed to the server-side Categories (which do not need to match or pair with each other in any way: server side categories are really just structures for common validation. Display Category will let us more easily categorize items visually)
   * @return displayCategoryIndex
  **/
  @ApiModelProperty(value = "This is an index specifically into the display category, as opposed to the server-side Categories (which do not need to match or pair with each other in any way: server side categories are really just structures for common validation. Display Category will let us more easily categorize items visually)")
  public Integer getDisplayCategoryIndex() {
    return displayCategoryIndex;
  }

  public void setDisplayCategoryIndex(Integer displayCategoryIndex) {
    this.displayCategoryIndex = displayCategoryIndex;
  }

  public DestinyDefinitionsDestinyVendorItemDefinition categoryIndex(Integer categoryIndex) {
    this.categoryIndex = categoryIndex;
    return this;
  }

   /**
   * The index into the DestinyVendorDefinition.categories array, so you can find the category associated with this item.
   * @return categoryIndex
  **/
  @ApiModelProperty(value = "The index into the DestinyVendorDefinition.categories array, so you can find the category associated with this item.")
  public Integer getCategoryIndex() {
    return categoryIndex;
  }

  public void setCategoryIndex(Integer categoryIndex) {
    this.categoryIndex = categoryIndex;
  }

  public DestinyDefinitionsDestinyVendorItemDefinition originalCategoryIndex(Integer originalCategoryIndex) {
    this.originalCategoryIndex = originalCategoryIndex;
    return this;
  }

   /**
   * Same as above, but for the original category indexes.
   * @return originalCategoryIndex
  **/
  @ApiModelProperty(value = "Same as above, but for the original category indexes.")
  public Integer getOriginalCategoryIndex() {
    return originalCategoryIndex;
  }

  public void setOriginalCategoryIndex(Integer originalCategoryIndex) {
    this.originalCategoryIndex = originalCategoryIndex;
  }

  public DestinyDefinitionsDestinyVendorItemDefinition minimumLevel(Integer minimumLevel) {
    this.minimumLevel = minimumLevel;
    return this;
  }

   /**
   * The minimum character level at which this item is available for sale.
   * @return minimumLevel
  **/
  @ApiModelProperty(value = "The minimum character level at which this item is available for sale.")
  public Integer getMinimumLevel() {
    return minimumLevel;
  }

  public void setMinimumLevel(Integer minimumLevel) {
    this.minimumLevel = minimumLevel;
  }

  public DestinyDefinitionsDestinyVendorItemDefinition maximumLevel(Integer maximumLevel) {
    this.maximumLevel = maximumLevel;
    return this;
  }

   /**
   * The maximum character level at which this item is available for sale.
   * @return maximumLevel
  **/
  @ApiModelProperty(value = "The maximum character level at which this item is available for sale.")
  public Integer getMaximumLevel() {
    return maximumLevel;
  }

  public void setMaximumLevel(Integer maximumLevel) {
    this.maximumLevel = maximumLevel;
  }

  public DestinyDefinitionsDestinyVendorItemDefinition action(Object action) {
    this.action = action;
    return this;
  }

   /**
   * The action to be performed when purchasing the item, if it&#39;s not just \&quot;buy\&quot;.
   * @return action
  **/
  @ApiModelProperty(value = "The action to be performed when purchasing the item, if it's not just \"buy\".")
  public Object getAction() {
    return action;
  }

  public void setAction(Object action) {
    this.action = action;
  }

  public DestinyDefinitionsDestinyVendorItemDefinition displayCategory(String displayCategory) {
    this.displayCategory = displayCategory;
    return this;
  }

   /**
   * The string identifier for the category selling this item.
   * @return displayCategory
  **/
  @ApiModelProperty(value = "The string identifier for the category selling this item.")
  public String getDisplayCategory() {
    return displayCategory;
  }

  public void setDisplayCategory(String displayCategory) {
    this.displayCategory = displayCategory;
  }

  public DestinyDefinitionsDestinyVendorItemDefinition inventoryBucketHash(Long inventoryBucketHash) {
    this.inventoryBucketHash = inventoryBucketHash;
    return this;
  }

   /**
   * The inventory bucket into which this item will be placed upon purchase.
   * @return inventoryBucketHash
  **/
  @ApiModelProperty(value = "The inventory bucket into which this item will be placed upon purchase.")
  public Long getInventoryBucketHash() {
    return inventoryBucketHash;
  }

  public void setInventoryBucketHash(Long inventoryBucketHash) {
    this.inventoryBucketHash = inventoryBucketHash;
  }

  public DestinyDefinitionsDestinyVendorItemDefinition visibilityScope(Object visibilityScope) {
    this.visibilityScope = visibilityScope;
    return this;
  }

   /**
   * The most restrictive scope that determines whether the item is available in the Vendor&#39;s inventory. See DestinyGatingScope&#39;s documentation for more information.  This can be determined by Unlock gating, or by whether or not the item has purchase level requirements (minimumLevel and maximumLevel properties).
   * @return visibilityScope
  **/
  @ApiModelProperty(value = "The most restrictive scope that determines whether the item is available in the Vendor's inventory. See DestinyGatingScope's documentation for more information.  This can be determined by Unlock gating, or by whether or not the item has purchase level requirements (minimumLevel and maximumLevel properties).")
  public Object getVisibilityScope() {
    return visibilityScope;
  }

  public void setVisibilityScope(Object visibilityScope) {
    this.visibilityScope = visibilityScope;
  }

  public DestinyDefinitionsDestinyVendorItemDefinition purchasableScope(Object purchasableScope) {
    this.purchasableScope = purchasableScope;
    return this;
  }

   /**
   * Similar to visibilityScope, it represents the most restrictive scope that determines whether the item can be purchased. It will at least be as restrictive as visibilityScope, but could be more restrictive if the item has additional purchase requirements beyond whether it is merely visible or not.  See DestinyGatingScope&#39;s documentation for more information.
   * @return purchasableScope
  **/
  @ApiModelProperty(value = "Similar to visibilityScope, it represents the most restrictive scope that determines whether the item can be purchased. It will at least be as restrictive as visibilityScope, but could be more restrictive if the item has additional purchase requirements beyond whether it is merely visible or not.  See DestinyGatingScope's documentation for more information.")
  public Object getPurchasableScope() {
    return purchasableScope;
  }

  public void setPurchasableScope(Object purchasableScope) {
    this.purchasableScope = purchasableScope;
  }

  public DestinyDefinitionsDestinyVendorItemDefinition exclusivity(Object exclusivity) {
    this.exclusivity = exclusivity;
    return this;
  }

   /**
   * If this item can only be purchased by a given platform, this indicates the platform to which it is restricted.
   * @return exclusivity
  **/
  @ApiModelProperty(value = "If this item can only be purchased by a given platform, this indicates the platform to which it is restricted.")
  public Object getExclusivity() {
    return exclusivity;
  }

  public void setExclusivity(Object exclusivity) {
    this.exclusivity = exclusivity;
  }

  public DestinyDefinitionsDestinyVendorItemDefinition isOffer(Boolean isOffer) {
    this.isOffer = isOffer;
    return this;
  }

   /**
   * If this sale can only be performed as the result of an offer check, this is true.
   * @return isOffer
  **/
  @ApiModelProperty(value = "If this sale can only be performed as the result of an offer check, this is true.")
  public Boolean isIsOffer() {
    return isOffer;
  }

  public void setIsOffer(Boolean isOffer) {
    this.isOffer = isOffer;
  }

  public DestinyDefinitionsDestinyVendorItemDefinition isCrm(Boolean isCrm) {
    this.isCrm = isCrm;
    return this;
  }

   /**
   * If this sale can only be performed as the result of receiving a CRM offer, this is true.
   * @return isCrm
  **/
  @ApiModelProperty(value = "If this sale can only be performed as the result of receiving a CRM offer, this is true.")
  public Boolean isIsCrm() {
    return isCrm;
  }

  public void setIsCrm(Boolean isCrm) {
    this.isCrm = isCrm;
  }

  public DestinyDefinitionsDestinyVendorItemDefinition sortValue(Integer sortValue) {
    this.sortValue = sortValue;
    return this;
  }

   /**
   * *if* the category this item is in supports non-default sorting, this value should represent the sorting value to use, pre-processed and ready to go.
   * @return sortValue
  **/
  @ApiModelProperty(value = "*if* the category this item is in supports non-default sorting, this value should represent the sorting value to use, pre-processed and ready to go.")
  public Integer getSortValue() {
    return sortValue;
  }

  public void setSortValue(Integer sortValue) {
    this.sortValue = sortValue;
  }

  public DestinyDefinitionsDestinyVendorItemDefinition expirationTooltip(String expirationTooltip) {
    this.expirationTooltip = expirationTooltip;
    return this;
  }

   /**
   * If this item can expire, this is the tooltip message to show with its expiration info.
   * @return expirationTooltip
  **/
  @ApiModelProperty(value = "If this item can expire, this is the tooltip message to show with its expiration info.")
  public String getExpirationTooltip() {
    return expirationTooltip;
  }

  public void setExpirationTooltip(String expirationTooltip) {
    this.expirationTooltip = expirationTooltip;
  }

  public DestinyDefinitionsDestinyVendorItemDefinition redirectToSaleIndexes(List<Integer> redirectToSaleIndexes) {
    this.redirectToSaleIndexes = redirectToSaleIndexes;
    return this;
  }

  public DestinyDefinitionsDestinyVendorItemDefinition addRedirectToSaleIndexesItem(Integer redirectToSaleIndexesItem) {
    if (this.redirectToSaleIndexes == null) {
      this.redirectToSaleIndexes = new ArrayList<>();
    }
    this.redirectToSaleIndexes.add(redirectToSaleIndexesItem);
    return this;
  }

   /**
   * If this is populated, the purchase of this item should redirect to purchasing these other items instead.
   * @return redirectToSaleIndexes
  **/
  @ApiModelProperty(value = "If this is populated, the purchase of this item should redirect to purchasing these other items instead.")
  public List<Integer> getRedirectToSaleIndexes() {
    return redirectToSaleIndexes;
  }

  public void setRedirectToSaleIndexes(List<Integer> redirectToSaleIndexes) {
    this.redirectToSaleIndexes = redirectToSaleIndexes;
  }

  public DestinyDefinitionsDestinyVendorItemDefinition socketOverrides(List<DestinyDefinitionsDestinyVendorItemSocketOverride> socketOverrides) {
    this.socketOverrides = socketOverrides;
    return this;
  }

  public DestinyDefinitionsDestinyVendorItemDefinition addSocketOverridesItem(DestinyDefinitionsDestinyVendorItemSocketOverride socketOverridesItem) {
    if (this.socketOverrides == null) {
      this.socketOverrides = new ArrayList<>();
    }
    this.socketOverrides.add(socketOverridesItem);
    return this;
  }

   /**
   * Get socketOverrides
   * @return socketOverrides
  **/
  @ApiModelProperty(value = "")
  public List<DestinyDefinitionsDestinyVendorItemSocketOverride> getSocketOverrides() {
    return socketOverrides;
  }

  public void setSocketOverrides(List<DestinyDefinitionsDestinyVendorItemSocketOverride> socketOverrides) {
    this.socketOverrides = socketOverrides;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DestinyDefinitionsDestinyVendorItemDefinition destinyDefinitionsDestinyVendorItemDefinition = (DestinyDefinitionsDestinyVendorItemDefinition) o;
    return Objects.equals(this.vendorItemIndex, destinyDefinitionsDestinyVendorItemDefinition.vendorItemIndex) &&
        Objects.equals(this.itemHash, destinyDefinitionsDestinyVendorItemDefinition.itemHash) &&
        Objects.equals(this.quantity, destinyDefinitionsDestinyVendorItemDefinition.quantity) &&
        Objects.equals(this.failureIndexes, destinyDefinitionsDestinyVendorItemDefinition.failureIndexes) &&
        Objects.equals(this.currencies, destinyDefinitionsDestinyVendorItemDefinition.currencies) &&
        Objects.equals(this.refundPolicy, destinyDefinitionsDestinyVendorItemDefinition.refundPolicy) &&
        Objects.equals(this.refundTimeLimit, destinyDefinitionsDestinyVendorItemDefinition.refundTimeLimit) &&
        Objects.equals(this.creationLevels, destinyDefinitionsDestinyVendorItemDefinition.creationLevels) &&
        Objects.equals(this.displayCategoryIndex, destinyDefinitionsDestinyVendorItemDefinition.displayCategoryIndex) &&
        Objects.equals(this.categoryIndex, destinyDefinitionsDestinyVendorItemDefinition.categoryIndex) &&
        Objects.equals(this.originalCategoryIndex, destinyDefinitionsDestinyVendorItemDefinition.originalCategoryIndex) &&
        Objects.equals(this.minimumLevel, destinyDefinitionsDestinyVendorItemDefinition.minimumLevel) &&
        Objects.equals(this.maximumLevel, destinyDefinitionsDestinyVendorItemDefinition.maximumLevel) &&
        Objects.equals(this.action, destinyDefinitionsDestinyVendorItemDefinition.action) &&
        Objects.equals(this.displayCategory, destinyDefinitionsDestinyVendorItemDefinition.displayCategory) &&
        Objects.equals(this.inventoryBucketHash, destinyDefinitionsDestinyVendorItemDefinition.inventoryBucketHash) &&
        Objects.equals(this.visibilityScope, destinyDefinitionsDestinyVendorItemDefinition.visibilityScope) &&
        Objects.equals(this.purchasableScope, destinyDefinitionsDestinyVendorItemDefinition.purchasableScope) &&
        Objects.equals(this.exclusivity, destinyDefinitionsDestinyVendorItemDefinition.exclusivity) &&
        Objects.equals(this.isOffer, destinyDefinitionsDestinyVendorItemDefinition.isOffer) &&
        Objects.equals(this.isCrm, destinyDefinitionsDestinyVendorItemDefinition.isCrm) &&
        Objects.equals(this.sortValue, destinyDefinitionsDestinyVendorItemDefinition.sortValue) &&
        Objects.equals(this.expirationTooltip, destinyDefinitionsDestinyVendorItemDefinition.expirationTooltip) &&
        Objects.equals(this.redirectToSaleIndexes, destinyDefinitionsDestinyVendorItemDefinition.redirectToSaleIndexes) &&
        Objects.equals(this.socketOverrides, destinyDefinitionsDestinyVendorItemDefinition.socketOverrides);
  }

  @Override
  public int hashCode() {
    return Objects.hash(vendorItemIndex, itemHash, quantity, failureIndexes, currencies, refundPolicy, refundTimeLimit, creationLevels, displayCategoryIndex, categoryIndex, originalCategoryIndex, minimumLevel, maximumLevel, action, displayCategory, inventoryBucketHash, visibilityScope, purchasableScope, exclusivity, isOffer, isCrm, sortValue, expirationTooltip, redirectToSaleIndexes, socketOverrides);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DestinyDefinitionsDestinyVendorItemDefinition {\n");
    
    sb.append("    vendorItemIndex: ").append(toIndentedString(vendorItemIndex)).append("\n");
    sb.append("    itemHash: ").append(toIndentedString(itemHash)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    failureIndexes: ").append(toIndentedString(failureIndexes)).append("\n");
    sb.append("    currencies: ").append(toIndentedString(currencies)).append("\n");
    sb.append("    refundPolicy: ").append(toIndentedString(refundPolicy)).append("\n");
    sb.append("    refundTimeLimit: ").append(toIndentedString(refundTimeLimit)).append("\n");
    sb.append("    creationLevels: ").append(toIndentedString(creationLevels)).append("\n");
    sb.append("    displayCategoryIndex: ").append(toIndentedString(displayCategoryIndex)).append("\n");
    sb.append("    categoryIndex: ").append(toIndentedString(categoryIndex)).append("\n");
    sb.append("    originalCategoryIndex: ").append(toIndentedString(originalCategoryIndex)).append("\n");
    sb.append("    minimumLevel: ").append(toIndentedString(minimumLevel)).append("\n");
    sb.append("    maximumLevel: ").append(toIndentedString(maximumLevel)).append("\n");
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("    displayCategory: ").append(toIndentedString(displayCategory)).append("\n");
    sb.append("    inventoryBucketHash: ").append(toIndentedString(inventoryBucketHash)).append("\n");
    sb.append("    visibilityScope: ").append(toIndentedString(visibilityScope)).append("\n");
    sb.append("    purchasableScope: ").append(toIndentedString(purchasableScope)).append("\n");
    sb.append("    exclusivity: ").append(toIndentedString(exclusivity)).append("\n");
    sb.append("    isOffer: ").append(toIndentedString(isOffer)).append("\n");
    sb.append("    isCrm: ").append(toIndentedString(isCrm)).append("\n");
    sb.append("    sortValue: ").append(toIndentedString(sortValue)).append("\n");
    sb.append("    expirationTooltip: ").append(toIndentedString(expirationTooltip)).append("\n");
    sb.append("    redirectToSaleIndexes: ").append(toIndentedString(redirectToSaleIndexes)).append("\n");
    sb.append("    socketOverrides: ").append(toIndentedString(socketOverrides)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

