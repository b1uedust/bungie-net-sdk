/*
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.3.2
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package uk.co.bluedust.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import uk.co.bluedust.model.DestinyDestinyItemQuantity;

/**
 * This defines a single Step in a progression (which roughly equates to a level. See DestinyProgressionDefinition for caveats).
 */
@ApiModel(description = "This defines a single Step in a progression (which roughly equates to a level. See DestinyProgressionDefinition for caveats).")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-11-04T23:34:27.728Z")
public class DestinyDefinitionsDestinyProgressionStepDefinition {
  @JsonProperty("stepName")
  private String stepName = null;

  @JsonProperty("displayEffectType")
  private Object displayEffectType = null;

  @JsonProperty("progressTotal")
  private Integer progressTotal = null;

  @JsonProperty("rewardItems")
  private List<DestinyDestinyItemQuantity> rewardItems = null;

  @JsonProperty("icon")
  private String icon = null;

  public DestinyDefinitionsDestinyProgressionStepDefinition stepName(String stepName) {
    this.stepName = stepName;
    return this;
  }

   /**
   * Very rarely, Progressions will have localized text describing the Level of the progression. This will be that localized text, if it exists. Otherwise, the standard appears to be to simply show the level numerically.
   * @return stepName
  **/
  @ApiModelProperty(value = "Very rarely, Progressions will have localized text describing the Level of the progression. This will be that localized text, if it exists. Otherwise, the standard appears to be to simply show the level numerically.")
  public String getStepName() {
    return stepName;
  }

  public void setStepName(String stepName) {
    this.stepName = stepName;
  }

  public DestinyDefinitionsDestinyProgressionStepDefinition displayEffectType(Object displayEffectType) {
    this.displayEffectType = displayEffectType;
    return this;
  }

   /**
   * This appears to be, when you \&quot;level up\&quot;, whether a visual effect will display and on what entity. See DestinyProgressionStepDisplayEffect for slightly more info.
   * @return displayEffectType
  **/
  @ApiModelProperty(value = "This appears to be, when you \"level up\", whether a visual effect will display and on what entity. See DestinyProgressionStepDisplayEffect for slightly more info.")
  public Object getDisplayEffectType() {
    return displayEffectType;
  }

  public void setDisplayEffectType(Object displayEffectType) {
    this.displayEffectType = displayEffectType;
  }

  public DestinyDefinitionsDestinyProgressionStepDefinition progressTotal(Integer progressTotal) {
    this.progressTotal = progressTotal;
    return this;
  }

   /**
   * The total amount of progression points/\&quot;experience\&quot; you will need to initially reach this step. If this is the last step and the progression is repeating indefinitely (DestinyProgressionDefinition.repeatLastStep), this will also be the progress needed to level it up further by repeating this step again.
   * @return progressTotal
  **/
  @ApiModelProperty(value = "The total amount of progression points/\"experience\" you will need to initially reach this step. If this is the last step and the progression is repeating indefinitely (DestinyProgressionDefinition.repeatLastStep), this will also be the progress needed to level it up further by repeating this step again.")
  public Integer getProgressTotal() {
    return progressTotal;
  }

  public void setProgressTotal(Integer progressTotal) {
    this.progressTotal = progressTotal;
  }

  public DestinyDefinitionsDestinyProgressionStepDefinition rewardItems(List<DestinyDestinyItemQuantity> rewardItems) {
    this.rewardItems = rewardItems;
    return this;
  }

  public DestinyDefinitionsDestinyProgressionStepDefinition addRewardItemsItem(DestinyDestinyItemQuantity rewardItemsItem) {
    if (this.rewardItems == null) {
      this.rewardItems = new ArrayList<>();
    }
    this.rewardItems.add(rewardItemsItem);
    return this;
  }

   /**
   * A listing of items rewarded as a result of reaching this level.
   * @return rewardItems
  **/
  @ApiModelProperty(value = "A listing of items rewarded as a result of reaching this level.")
  public List<DestinyDestinyItemQuantity> getRewardItems() {
    return rewardItems;
  }

  public void setRewardItems(List<DestinyDestinyItemQuantity> rewardItems) {
    this.rewardItems = rewardItems;
  }

  public DestinyDefinitionsDestinyProgressionStepDefinition icon(String icon) {
    this.icon = icon;
    return this;
  }

   /**
   * If this progression step has a specific icon related to it, this is the icon to show.
   * @return icon
  **/
  @ApiModelProperty(value = "If this progression step has a specific icon related to it, this is the icon to show.")
  public String getIcon() {
    return icon;
  }

  public void setIcon(String icon) {
    this.icon = icon;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DestinyDefinitionsDestinyProgressionStepDefinition destinyDefinitionsDestinyProgressionStepDefinition = (DestinyDefinitionsDestinyProgressionStepDefinition) o;
    return Objects.equals(this.stepName, destinyDefinitionsDestinyProgressionStepDefinition.stepName) &&
        Objects.equals(this.displayEffectType, destinyDefinitionsDestinyProgressionStepDefinition.displayEffectType) &&
        Objects.equals(this.progressTotal, destinyDefinitionsDestinyProgressionStepDefinition.progressTotal) &&
        Objects.equals(this.rewardItems, destinyDefinitionsDestinyProgressionStepDefinition.rewardItems) &&
        Objects.equals(this.icon, destinyDefinitionsDestinyProgressionStepDefinition.icon);
  }

  @Override
  public int hashCode() {
    return Objects.hash(stepName, displayEffectType, progressTotal, rewardItems, icon);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DestinyDefinitionsDestinyProgressionStepDefinition {\n");
    
    sb.append("    stepName: ").append(toIndentedString(stepName)).append("\n");
    sb.append("    displayEffectType: ").append(toIndentedString(displayEffectType)).append("\n");
    sb.append("    progressTotal: ").append(toIndentedString(progressTotal)).append("\n");
    sb.append("    rewardItems: ").append(toIndentedString(rewardItems)).append("\n");
    sb.append("    icon: ").append(toIndentedString(icon)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

