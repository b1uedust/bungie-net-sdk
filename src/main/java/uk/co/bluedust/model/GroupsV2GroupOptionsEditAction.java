/*
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.3.2
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package uk.co.bluedust.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * GroupsV2GroupOptionsEditAction
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-11-04T16:59:02.979Z")
public class GroupsV2GroupOptionsEditAction {
  @JsonProperty("InvitePermissionOverride")
  private Boolean invitePermissionOverride = null;

  @JsonProperty("UpdateCulturePermissionOverride")
  private Boolean updateCulturePermissionOverride = null;

  /**
   * Minimum Member Level allowed to host guided games  Always Allowed: Founder, Acting Founder, Admin  Allowed Overrides: None, Member, Beginner  Default is Member for clans, None for groups, although this means nothing for groups.
   */
  public enum HostGuidedGamePermissionOverrideEnum {
    NUMBER_0(0),
    
    NUMBER_1(1),
    
    NUMBER_2(2);

    private Integer value;

    HostGuidedGamePermissionOverrideEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static HostGuidedGamePermissionOverrideEnum fromValue(String text) {
      for (HostGuidedGamePermissionOverrideEnum b : HostGuidedGamePermissionOverrideEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("HostGuidedGamePermissionOverride")
  private HostGuidedGamePermissionOverrideEnum hostGuidedGamePermissionOverride = null;

  @JsonProperty("UpdateBannerPermissionOverride")
  private Boolean updateBannerPermissionOverride = null;

  /**
   * Level to join a member at when accepting an invite, application, or joining an open clan  Default is Beginner.
   */
  public enum JoinLevelEnum {
    NUMBER_0(0),
    
    NUMBER_1(1),
    
    NUMBER_2(2),
    
    NUMBER_3(3),
    
    NUMBER_4(4),
    
    NUMBER_5(5);

    private Integer value;

    JoinLevelEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static JoinLevelEnum fromValue(String text) {
      for (JoinLevelEnum b : JoinLevelEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("JoinLevel")
  private JoinLevelEnum joinLevel = null;

  public GroupsV2GroupOptionsEditAction invitePermissionOverride(Boolean invitePermissionOverride) {
    this.invitePermissionOverride = invitePermissionOverride;
    return this;
  }

   /**
   * Minimum Member Level allowed to invite new members to group  Always Allowed: Founder, Acting Founder  True means admins have this power, false means they don&#39;t  Default is false for clans, true for groups.
   * @return invitePermissionOverride
  **/
  @ApiModelProperty(value = "Minimum Member Level allowed to invite new members to group  Always Allowed: Founder, Acting Founder  True means admins have this power, false means they don't  Default is false for clans, true for groups.")
  public Boolean isInvitePermissionOverride() {
    return invitePermissionOverride;
  }

  public void setInvitePermissionOverride(Boolean invitePermissionOverride) {
    this.invitePermissionOverride = invitePermissionOverride;
  }

  public GroupsV2GroupOptionsEditAction updateCulturePermissionOverride(Boolean updateCulturePermissionOverride) {
    this.updateCulturePermissionOverride = updateCulturePermissionOverride;
    return this;
  }

   /**
   * Minimum Member Level allowed to update group culture  Always Allowed: Founder, Acting Founder  True means admins have this power, false means they don&#39;t  Default is false for clans, true for groups.
   * @return updateCulturePermissionOverride
  **/
  @ApiModelProperty(value = "Minimum Member Level allowed to update group culture  Always Allowed: Founder, Acting Founder  True means admins have this power, false means they don't  Default is false for clans, true for groups.")
  public Boolean isUpdateCulturePermissionOverride() {
    return updateCulturePermissionOverride;
  }

  public void setUpdateCulturePermissionOverride(Boolean updateCulturePermissionOverride) {
    this.updateCulturePermissionOverride = updateCulturePermissionOverride;
  }

  public GroupsV2GroupOptionsEditAction hostGuidedGamePermissionOverride(HostGuidedGamePermissionOverrideEnum hostGuidedGamePermissionOverride) {
    this.hostGuidedGamePermissionOverride = hostGuidedGamePermissionOverride;
    return this;
  }

   /**
   * Minimum Member Level allowed to host guided games  Always Allowed: Founder, Acting Founder, Admin  Allowed Overrides: None, Member, Beginner  Default is Member for clans, None for groups, although this means nothing for groups.
   * @return hostGuidedGamePermissionOverride
  **/
  @ApiModelProperty(value = "Minimum Member Level allowed to host guided games  Always Allowed: Founder, Acting Founder, Admin  Allowed Overrides: None, Member, Beginner  Default is Member for clans, None for groups, although this means nothing for groups.")
  public HostGuidedGamePermissionOverrideEnum getHostGuidedGamePermissionOverride() {
    return hostGuidedGamePermissionOverride;
  }

  public void setHostGuidedGamePermissionOverride(HostGuidedGamePermissionOverrideEnum hostGuidedGamePermissionOverride) {
    this.hostGuidedGamePermissionOverride = hostGuidedGamePermissionOverride;
  }

  public GroupsV2GroupOptionsEditAction updateBannerPermissionOverride(Boolean updateBannerPermissionOverride) {
    this.updateBannerPermissionOverride = updateBannerPermissionOverride;
    return this;
  }

   /**
   * Minimum Member Level allowed to update banner  Always Allowed: Founder, Acting Founder  True means admins have this power, false means they don&#39;t  Default is false for clans, true for groups.
   * @return updateBannerPermissionOverride
  **/
  @ApiModelProperty(value = "Minimum Member Level allowed to update banner  Always Allowed: Founder, Acting Founder  True means admins have this power, false means they don't  Default is false for clans, true for groups.")
  public Boolean isUpdateBannerPermissionOverride() {
    return updateBannerPermissionOverride;
  }

  public void setUpdateBannerPermissionOverride(Boolean updateBannerPermissionOverride) {
    this.updateBannerPermissionOverride = updateBannerPermissionOverride;
  }

  public GroupsV2GroupOptionsEditAction joinLevel(JoinLevelEnum joinLevel) {
    this.joinLevel = joinLevel;
    return this;
  }

   /**
   * Level to join a member at when accepting an invite, application, or joining an open clan  Default is Beginner.
   * @return joinLevel
  **/
  @ApiModelProperty(value = "Level to join a member at when accepting an invite, application, or joining an open clan  Default is Beginner.")
  public JoinLevelEnum getJoinLevel() {
    return joinLevel;
  }

  public void setJoinLevel(JoinLevelEnum joinLevel) {
    this.joinLevel = joinLevel;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GroupsV2GroupOptionsEditAction groupsV2GroupOptionsEditAction = (GroupsV2GroupOptionsEditAction) o;
    return Objects.equals(this.invitePermissionOverride, groupsV2GroupOptionsEditAction.invitePermissionOverride) &&
        Objects.equals(this.updateCulturePermissionOverride, groupsV2GroupOptionsEditAction.updateCulturePermissionOverride) &&
        Objects.equals(this.hostGuidedGamePermissionOverride, groupsV2GroupOptionsEditAction.hostGuidedGamePermissionOverride) &&
        Objects.equals(this.updateBannerPermissionOverride, groupsV2GroupOptionsEditAction.updateBannerPermissionOverride) &&
        Objects.equals(this.joinLevel, groupsV2GroupOptionsEditAction.joinLevel);
  }

  @Override
  public int hashCode() {
    return Objects.hash(invitePermissionOverride, updateCulturePermissionOverride, hostGuidedGamePermissionOverride, updateBannerPermissionOverride, joinLevel);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GroupsV2GroupOptionsEditAction {\n");
    
    sb.append("    invitePermissionOverride: ").append(toIndentedString(invitePermissionOverride)).append("\n");
    sb.append("    updateCulturePermissionOverride: ").append(toIndentedString(updateCulturePermissionOverride)).append("\n");
    sb.append("    hostGuidedGamePermissionOverride: ").append(toIndentedString(hostGuidedGamePermissionOverride)).append("\n");
    sb.append("    updateBannerPermissionOverride: ").append(toIndentedString(updateBannerPermissionOverride)).append("\n");
    sb.append("    joinLevel: ").append(toIndentedString(joinLevel)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

