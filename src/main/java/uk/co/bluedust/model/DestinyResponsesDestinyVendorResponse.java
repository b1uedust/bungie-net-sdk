/*
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.3.2
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package uk.co.bluedust.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * A response containing all of the components for a vendor.
 */
@ApiModel(description = "A response containing all of the components for a vendor.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-11-04T16:59:02.979Z")
public class DestinyResponsesDestinyVendorResponse {
  @JsonProperty("vendor")
  private Object vendor = null;

  @JsonProperty("categories")
  private Object categories = null;

  @JsonProperty("sales")
  private Object sales = null;

  @JsonProperty("itemComponents")
  private Object itemComponents = null;

  @JsonProperty("currencyLookups")
  private Object currencyLookups = null;

  public DestinyResponsesDestinyVendorResponse vendor(Object vendor) {
    this.vendor = vendor;
    return this;
  }

   /**
   * The base properties of the vendor.  COMPONENT TYPE: Vendors
   * @return vendor
  **/
  @ApiModelProperty(value = "The base properties of the vendor.  COMPONENT TYPE: Vendors")
  public Object getVendor() {
    return vendor;
  }

  public void setVendor(Object vendor) {
    this.vendor = vendor;
  }

  public DestinyResponsesDestinyVendorResponse categories(Object categories) {
    this.categories = categories;
    return this;
  }

   /**
   * Categories that the vendor has available, and references to the sales therein.  COMPONENT TYPE: VendorCategories
   * @return categories
  **/
  @ApiModelProperty(value = "Categories that the vendor has available, and references to the sales therein.  COMPONENT TYPE: VendorCategories")
  public Object getCategories() {
    return categories;
  }

  public void setCategories(Object categories) {
    this.categories = categories;
  }

  public DestinyResponsesDestinyVendorResponse sales(Object sales) {
    this.sales = sales;
    return this;
  }

   /**
   * Sales, keyed by the vendorItemIndex of the item being sold.  COMPONENT TYPE: VendorSales
   * @return sales
  **/
  @ApiModelProperty(value = "Sales, keyed by the vendorItemIndex of the item being sold.  COMPONENT TYPE: VendorSales")
  public Object getSales() {
    return sales;
  }

  public void setSales(Object sales) {
    this.sales = sales;
  }

  public DestinyResponsesDestinyVendorResponse itemComponents(Object itemComponents) {
    this.itemComponents = itemComponents;
    return this;
  }

   /**
   * Item components, keyed by the vendorItemIndex of the active sale items.  COMPONENT TYPE: [See inside the DestinyItemComponentSet contract for component types.]
   * @return itemComponents
  **/
  @ApiModelProperty(value = "Item components, keyed by the vendorItemIndex of the active sale items.  COMPONENT TYPE: [See inside the DestinyItemComponentSet contract for component types.]")
  public Object getItemComponents() {
    return itemComponents;
  }

  public void setItemComponents(Object itemComponents) {
    this.itemComponents = itemComponents;
  }

  public DestinyResponsesDestinyVendorResponse currencyLookups(Object currencyLookups) {
    this.currencyLookups = currencyLookups;
    return this;
  }

   /**
   * A \&quot;lookup\&quot; convenience component that can be used to quickly check if the character has access to items that can be used for purchasing.  COMPONENT TYPE: CurrencyLookups
   * @return currencyLookups
  **/
  @ApiModelProperty(value = "A \"lookup\" convenience component that can be used to quickly check if the character has access to items that can be used for purchasing.  COMPONENT TYPE: CurrencyLookups")
  public Object getCurrencyLookups() {
    return currencyLookups;
  }

  public void setCurrencyLookups(Object currencyLookups) {
    this.currencyLookups = currencyLookups;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DestinyResponsesDestinyVendorResponse destinyResponsesDestinyVendorResponse = (DestinyResponsesDestinyVendorResponse) o;
    return Objects.equals(this.vendor, destinyResponsesDestinyVendorResponse.vendor) &&
        Objects.equals(this.categories, destinyResponsesDestinyVendorResponse.categories) &&
        Objects.equals(this.sales, destinyResponsesDestinyVendorResponse.sales) &&
        Objects.equals(this.itemComponents, destinyResponsesDestinyVendorResponse.itemComponents) &&
        Objects.equals(this.currencyLookups, destinyResponsesDestinyVendorResponse.currencyLookups);
  }

  @Override
  public int hashCode() {
    return Objects.hash(vendor, categories, sales, itemComponents, currencyLookups);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DestinyResponsesDestinyVendorResponse {\n");
    
    sb.append("    vendor: ").append(toIndentedString(vendor)).append("\n");
    sb.append("    categories: ").append(toIndentedString(categories)).append("\n");
    sb.append("    sales: ").append(toIndentedString(sales)).append("\n");
    sb.append("    itemComponents: ").append(toIndentedString(itemComponents)).append("\n");
    sb.append("    currencyLookups: ").append(toIndentedString(currencyLookups)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

