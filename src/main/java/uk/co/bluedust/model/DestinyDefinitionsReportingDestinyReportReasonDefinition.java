/*
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.3.2
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package uk.co.bluedust.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import uk.co.bluedust.model.DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition;

/**
 * A specific reason for being banned. Only accessible under the related category (DestinyReportReasonCategoryDefinition) under which it is shown. Note that this means that report reasons&#39; reasonHash are not globally unique: and indeed, entries like \&quot;Other\&quot; are defined under most categories for example.
 */
@ApiModel(description = "A specific reason for being banned. Only accessible under the related category (DestinyReportReasonCategoryDefinition) under which it is shown. Note that this means that report reasons' reasonHash are not globally unique: and indeed, entries like \"Other\" are defined under most categories for example.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-11-04T23:34:27.728Z")
public class DestinyDefinitionsReportingDestinyReportReasonDefinition {
  @JsonProperty("reasonHash")
  private Long reasonHash = null;

  @JsonProperty("displayProperties")
  private DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition displayProperties = null;

  public DestinyDefinitionsReportingDestinyReportReasonDefinition reasonHash(Long reasonHash) {
    this.reasonHash = reasonHash;
    return this;
  }

   /**
   * The identifier for the reason: they are only guaranteed unique under the Category in which they are found.
   * @return reasonHash
  **/
  @ApiModelProperty(value = "The identifier for the reason: they are only guaranteed unique under the Category in which they are found.")
  public Long getReasonHash() {
    return reasonHash;
  }

  public void setReasonHash(Long reasonHash) {
    this.reasonHash = reasonHash;
  }

  public DestinyDefinitionsReportingDestinyReportReasonDefinition displayProperties(DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition displayProperties) {
    this.displayProperties = displayProperties;
    return this;
  }

   /**
   * Get displayProperties
   * @return displayProperties
  **/
  @ApiModelProperty(value = "")
  public DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition getDisplayProperties() {
    return displayProperties;
  }

  public void setDisplayProperties(DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition displayProperties) {
    this.displayProperties = displayProperties;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DestinyDefinitionsReportingDestinyReportReasonDefinition destinyDefinitionsReportingDestinyReportReasonDefinition = (DestinyDefinitionsReportingDestinyReportReasonDefinition) o;
    return Objects.equals(this.reasonHash, destinyDefinitionsReportingDestinyReportReasonDefinition.reasonHash) &&
        Objects.equals(this.displayProperties, destinyDefinitionsReportingDestinyReportReasonDefinition.displayProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(reasonHash, displayProperties);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DestinyDefinitionsReportingDestinyReportReasonDefinition {\n");
    
    sb.append("    reasonHash: ").append(toIndentedString(reasonHash)).append("\n");
    sb.append("    displayProperties: ").append(toIndentedString(displayProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

