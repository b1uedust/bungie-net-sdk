/*
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.3.2
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package uk.co.bluedust.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Data related to what happens while a plug is being inserted, mostly for UI purposes.
 */
@ApiModel(description = "Data related to what happens while a plug is being inserted, mostly for UI purposes.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-12-08T21:00:47.497Z")
public class DestinyDefinitionsSocketsDestinyInsertPlugActionDefinition {
  @JsonProperty("actionExecuteSeconds")
  private Integer actionExecuteSeconds = null;

  @JsonProperty("actionType")
  private Object actionType = null;

  public DestinyDefinitionsSocketsDestinyInsertPlugActionDefinition actionExecuteSeconds(Integer actionExecuteSeconds) {
    this.actionExecuteSeconds = actionExecuteSeconds;
    return this;
  }

   /**
   * How long it takes for the Plugging of the item to be completed once it is initiated, if you care.
   * @return actionExecuteSeconds
  **/
  @ApiModelProperty(value = "How long it takes for the Plugging of the item to be completed once it is initiated, if you care.")
  public Integer getActionExecuteSeconds() {
    return actionExecuteSeconds;
  }

  public void setActionExecuteSeconds(Integer actionExecuteSeconds) {
    this.actionExecuteSeconds = actionExecuteSeconds;
  }

  public DestinyDefinitionsSocketsDestinyInsertPlugActionDefinition actionType(Object actionType) {
    this.actionType = actionType;
    return this;
  }

   /**
   * The type of action being performed when you act on this Socket Type. The most common value is \&quot;insert plug\&quot;, but there are others as well (for instance, a \&quot;Masterwork\&quot; socket may allow for Re-initialization, and an Infusion socket allows for items to be consumed to upgrade the item)
   * @return actionType
  **/
  @ApiModelProperty(value = "The type of action being performed when you act on this Socket Type. The most common value is \"insert plug\", but there are others as well (for instance, a \"Masterwork\" socket may allow for Re-initialization, and an Infusion socket allows for items to be consumed to upgrade the item)")
  public Object getActionType() {
    return actionType;
  }

  public void setActionType(Object actionType) {
    this.actionType = actionType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DestinyDefinitionsSocketsDestinyInsertPlugActionDefinition destinyDefinitionsSocketsDestinyInsertPlugActionDefinition = (DestinyDefinitionsSocketsDestinyInsertPlugActionDefinition) o;
    return Objects.equals(this.actionExecuteSeconds, destinyDefinitionsSocketsDestinyInsertPlugActionDefinition.actionExecuteSeconds) &&
        Objects.equals(this.actionType, destinyDefinitionsSocketsDestinyInsertPlugActionDefinition.actionType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(actionExecuteSeconds, actionType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DestinyDefinitionsSocketsDestinyInsertPlugActionDefinition {\n");
    
    sb.append("    actionExecuteSeconds: ").append(toIndentedString(actionExecuteSeconds)).append("\n");
    sb.append("    actionType: ").append(toIndentedString(actionType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

