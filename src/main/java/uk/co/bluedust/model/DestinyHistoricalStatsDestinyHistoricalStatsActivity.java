/*
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.3.2
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package uk.co.bluedust.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import uk.co.bluedust.model.DestinyHistoricalStatsDefinitionsDestinyActivityModeType;

/**
 * Summary information about the activity that was played.
 */
@ApiModel(description = "Summary information about the activity that was played.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-11-04T23:34:27.728Z")
public class DestinyHistoricalStatsDestinyHistoricalStatsActivity {
  @JsonProperty("referenceId")
  private Long referenceId = null;

  @JsonProperty("directorActivityHash")
  private Long directorActivityHash = null;

  @JsonProperty("instanceId")
  private Long instanceId = null;

  @JsonProperty("mode")
  private Object mode = null;

  @JsonProperty("modes")
  private List<DestinyHistoricalStatsDefinitionsDestinyActivityModeType> modes = null;

  @JsonProperty("isPrivate")
  private Boolean isPrivate = null;

  public DestinyHistoricalStatsDestinyHistoricalStatsActivity referenceId(Long referenceId) {
    this.referenceId = referenceId;
    return this;
  }

   /**
   * The unique hash identifier of the DestinyActivityDefinition that was played. If I had this to do over, it&#39;d be named activityHash. Too late now.
   * @return referenceId
  **/
  @ApiModelProperty(value = "The unique hash identifier of the DestinyActivityDefinition that was played. If I had this to do over, it'd be named activityHash. Too late now.")
  public Long getReferenceId() {
    return referenceId;
  }

  public void setReferenceId(Long referenceId) {
    this.referenceId = referenceId;
  }

  public DestinyHistoricalStatsDestinyHistoricalStatsActivity directorActivityHash(Long directorActivityHash) {
    this.directorActivityHash = directorActivityHash;
    return this;
  }

   /**
   * The unique hash identifier of the DestinyActivityDefinition that was played.
   * @return directorActivityHash
  **/
  @ApiModelProperty(value = "The unique hash identifier of the DestinyActivityDefinition that was played.")
  public Long getDirectorActivityHash() {
    return directorActivityHash;
  }

  public void setDirectorActivityHash(Long directorActivityHash) {
    this.directorActivityHash = directorActivityHash;
  }

  public DestinyHistoricalStatsDestinyHistoricalStatsActivity instanceId(Long instanceId) {
    this.instanceId = instanceId;
    return this;
  }

   /**
   * The unique identifier for this *specific* match that was played.  This value can be used to get additional data about this activity such as who else was playing via the GetPostGameCarnageReport endpoint.
   * @return instanceId
  **/
  @ApiModelProperty(value = "The unique identifier for this *specific* match that was played.  This value can be used to get additional data about this activity such as who else was playing via the GetPostGameCarnageReport endpoint.")
  public Long getInstanceId() {
    return instanceId;
  }

  public void setInstanceId(Long instanceId) {
    this.instanceId = instanceId;
  }

  public DestinyHistoricalStatsDestinyHistoricalStatsActivity mode(Object mode) {
    this.mode = mode;
    return this;
  }

   /**
   * Indicates the most specific game mode of the activity that we could find.
   * @return mode
  **/
  @ApiModelProperty(value = "Indicates the most specific game mode of the activity that we could find.")
  public Object getMode() {
    return mode;
  }

  public void setMode(Object mode) {
    this.mode = mode;
  }

  public DestinyHistoricalStatsDestinyHistoricalStatsActivity modes(List<DestinyHistoricalStatsDefinitionsDestinyActivityModeType> modes) {
    this.modes = modes;
    return this;
  }

  public DestinyHistoricalStatsDestinyHistoricalStatsActivity addModesItem(DestinyHistoricalStatsDefinitionsDestinyActivityModeType modesItem) {
    if (this.modes == null) {
      this.modes = new ArrayList<>();
    }
    this.modes.add(modesItem);
    return this;
  }

   /**
   * The list of all Activity Modes to which this activity applies, including aggregates. This will let you see, for example, whether the activity was both Clash and part of the Trials of the Nine event.
   * @return modes
  **/
  @ApiModelProperty(value = "The list of all Activity Modes to which this activity applies, including aggregates. This will let you see, for example, whether the activity was both Clash and part of the Trials of the Nine event.")
  public List<DestinyHistoricalStatsDefinitionsDestinyActivityModeType> getModes() {
    return modes;
  }

  public void setModes(List<DestinyHistoricalStatsDefinitionsDestinyActivityModeType> modes) {
    this.modes = modes;
  }

  public DestinyHistoricalStatsDestinyHistoricalStatsActivity isPrivate(Boolean isPrivate) {
    this.isPrivate = isPrivate;
    return this;
  }

   /**
   * Whether or not the match was a private match. There&#39;s no private matches in Destiny 2... yet... DUN DUN DUNNNN
   * @return isPrivate
  **/
  @ApiModelProperty(value = "Whether or not the match was a private match. There's no private matches in Destiny 2... yet... DUN DUN DUNNNN")
  public Boolean isIsPrivate() {
    return isPrivate;
  }

  public void setIsPrivate(Boolean isPrivate) {
    this.isPrivate = isPrivate;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DestinyHistoricalStatsDestinyHistoricalStatsActivity destinyHistoricalStatsDestinyHistoricalStatsActivity = (DestinyHistoricalStatsDestinyHistoricalStatsActivity) o;
    return Objects.equals(this.referenceId, destinyHistoricalStatsDestinyHistoricalStatsActivity.referenceId) &&
        Objects.equals(this.directorActivityHash, destinyHistoricalStatsDestinyHistoricalStatsActivity.directorActivityHash) &&
        Objects.equals(this.instanceId, destinyHistoricalStatsDestinyHistoricalStatsActivity.instanceId) &&
        Objects.equals(this.mode, destinyHistoricalStatsDestinyHistoricalStatsActivity.mode) &&
        Objects.equals(this.modes, destinyHistoricalStatsDestinyHistoricalStatsActivity.modes) &&
        Objects.equals(this.isPrivate, destinyHistoricalStatsDestinyHistoricalStatsActivity.isPrivate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(referenceId, directorActivityHash, instanceId, mode, modes, isPrivate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DestinyHistoricalStatsDestinyHistoricalStatsActivity {\n");
    
    sb.append("    referenceId: ").append(toIndentedString(referenceId)).append("\n");
    sb.append("    directorActivityHash: ").append(toIndentedString(directorActivityHash)).append("\n");
    sb.append("    instanceId: ").append(toIndentedString(instanceId)).append("\n");
    sb.append("    mode: ").append(toIndentedString(mode)).append("\n");
    sb.append("    modes: ").append(toIndentedString(modes)).append("\n");
    sb.append("    isPrivate: ").append(toIndentedString(isPrivate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

