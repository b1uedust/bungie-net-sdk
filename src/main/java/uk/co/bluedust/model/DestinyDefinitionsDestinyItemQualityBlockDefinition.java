/*
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.3.2
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package uk.co.bluedust.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;

/**
 * An item&#39;s \&quot;Quality\&quot; determines its calculated stats. The Level at which the item spawns is combined with its \&quot;qualityLevel\&quot; along with some additional calculations to determine the value of those stats.  In Destiny 2, most items don&#39;t have default item levels and quality, making this property less useful: these apparently are almost always determined by the complex mechanisms of the Reward system rather than statically. They are still provided here in case they are still useful for people. This also contains some information about Infusion.
 */
@ApiModel(description = "An item's \"Quality\" determines its calculated stats. The Level at which the item spawns is combined with its \"qualityLevel\" along with some additional calculations to determine the value of those stats.  In Destiny 2, most items don't have default item levels and quality, making this property less useful: these apparently are almost always determined by the complex mechanisms of the Reward system rather than statically. They are still provided here in case they are still useful for people. This also contains some information about Infusion.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-11-04T23:34:27.728Z")
public class DestinyDefinitionsDestinyItemQualityBlockDefinition {
  @JsonProperty("itemLevels")
  private List<Integer> itemLevels = null;

  @JsonProperty("qualityLevel")
  private Integer qualityLevel = null;

  @JsonProperty("infusionCategoryName")
  private String infusionCategoryName = null;

  @JsonProperty("infusionCategoryHash")
  private Long infusionCategoryHash = null;

  @JsonProperty("infusionCategoryHashes")
  private List<Long> infusionCategoryHashes = null;

  @JsonProperty("progressionLevelRequirementHash")
  private Long progressionLevelRequirementHash = null;

  public DestinyDefinitionsDestinyItemQualityBlockDefinition itemLevels(List<Integer> itemLevels) {
    this.itemLevels = itemLevels;
    return this;
  }

  public DestinyDefinitionsDestinyItemQualityBlockDefinition addItemLevelsItem(Integer itemLevelsItem) {
    if (this.itemLevels == null) {
      this.itemLevels = new ArrayList<>();
    }
    this.itemLevels.add(itemLevelsItem);
    return this;
  }

   /**
   * The \&quot;base\&quot; defined level of an item. This is a list because, in theory, each Expansion could define its own base level for an item.  In practice, not only was that never done in Destiny 1, but now this isn&#39;t even populated at all. When it&#39;s not populated, the level at which it spawns has to be inferred by Reward information, of which BNet receives an imperfect view and will only be reliable on instanced data as a result.
   * @return itemLevels
  **/
  @ApiModelProperty(value = "The \"base\" defined level of an item. This is a list because, in theory, each Expansion could define its own base level for an item.  In practice, not only was that never done in Destiny 1, but now this isn't even populated at all. When it's not populated, the level at which it spawns has to be inferred by Reward information, of which BNet receives an imperfect view and will only be reliable on instanced data as a result.")
  public List<Integer> getItemLevels() {
    return itemLevels;
  }

  public void setItemLevels(List<Integer> itemLevels) {
    this.itemLevels = itemLevels;
  }

  public DestinyDefinitionsDestinyItemQualityBlockDefinition qualityLevel(Integer qualityLevel) {
    this.qualityLevel = qualityLevel;
    return this;
  }

   /**
   * qualityLevel is used in combination with the item&#39;s level to calculate stats like Attack and Defense. It plays a role in that calculation, but not nearly as large as itemLevel does.
   * @return qualityLevel
  **/
  @ApiModelProperty(value = "qualityLevel is used in combination with the item's level to calculate stats like Attack and Defense. It plays a role in that calculation, but not nearly as large as itemLevel does.")
  public Integer getQualityLevel() {
    return qualityLevel;
  }

  public void setQualityLevel(Integer qualityLevel) {
    this.qualityLevel = qualityLevel;
  }

  public DestinyDefinitionsDestinyItemQualityBlockDefinition infusionCategoryName(String infusionCategoryName) {
    this.infusionCategoryName = infusionCategoryName;
    return this;
  }

   /**
   * The string identifier for this item&#39;s \&quot;infusability\&quot;, if any.   Items that match the same infusionCategoryName are allowed to infuse with each other.  DEPRECATED: Items can now have multiple infusion categories. Please use infusionCategoryHashes instead.
   * @return infusionCategoryName
  **/
  @ApiModelProperty(value = "The string identifier for this item's \"infusability\", if any.   Items that match the same infusionCategoryName are allowed to infuse with each other.  DEPRECATED: Items can now have multiple infusion categories. Please use infusionCategoryHashes instead.")
  public String getInfusionCategoryName() {
    return infusionCategoryName;
  }

  public void setInfusionCategoryName(String infusionCategoryName) {
    this.infusionCategoryName = infusionCategoryName;
  }

  public DestinyDefinitionsDestinyItemQualityBlockDefinition infusionCategoryHash(Long infusionCategoryHash) {
    this.infusionCategoryHash = infusionCategoryHash;
    return this;
  }

   /**
   * The hash identifier for the infusion. It does not map to a Definition entity.  DEPRECATED: Items can now have multiple infusion categories. Please use infusionCategoryHashes instead.
   * @return infusionCategoryHash
  **/
  @ApiModelProperty(value = "The hash identifier for the infusion. It does not map to a Definition entity.  DEPRECATED: Items can now have multiple infusion categories. Please use infusionCategoryHashes instead.")
  public Long getInfusionCategoryHash() {
    return infusionCategoryHash;
  }

  public void setInfusionCategoryHash(Long infusionCategoryHash) {
    this.infusionCategoryHash = infusionCategoryHash;
  }

  public DestinyDefinitionsDestinyItemQualityBlockDefinition infusionCategoryHashes(List<Long> infusionCategoryHashes) {
    this.infusionCategoryHashes = infusionCategoryHashes;
    return this;
  }

  public DestinyDefinitionsDestinyItemQualityBlockDefinition addInfusionCategoryHashesItem(Long infusionCategoryHashesItem) {
    if (this.infusionCategoryHashes == null) {
      this.infusionCategoryHashes = new ArrayList<>();
    }
    this.infusionCategoryHashes.add(infusionCategoryHashesItem);
    return this;
  }

   /**
   * If any one of these hashes matches any value in another item&#39;s infusionCategoryHashes, the two can infuse with each other.
   * @return infusionCategoryHashes
  **/
  @ApiModelProperty(value = "If any one of these hashes matches any value in another item's infusionCategoryHashes, the two can infuse with each other.")
  public List<Long> getInfusionCategoryHashes() {
    return infusionCategoryHashes;
  }

  public void setInfusionCategoryHashes(List<Long> infusionCategoryHashes) {
    this.infusionCategoryHashes = infusionCategoryHashes;
  }

  public DestinyDefinitionsDestinyItemQualityBlockDefinition progressionLevelRequirementHash(Long progressionLevelRequirementHash) {
    this.progressionLevelRequirementHash = progressionLevelRequirementHash;
    return this;
  }

   /**
   * An item can refer to pre-set level requirements. They are defined in DestinyProgressionLevelRequirementDefinition, and you can use this hash to find the appropriate definition.
   * @return progressionLevelRequirementHash
  **/
  @ApiModelProperty(value = "An item can refer to pre-set level requirements. They are defined in DestinyProgressionLevelRequirementDefinition, and you can use this hash to find the appropriate definition.")
  public Long getProgressionLevelRequirementHash() {
    return progressionLevelRequirementHash;
  }

  public void setProgressionLevelRequirementHash(Long progressionLevelRequirementHash) {
    this.progressionLevelRequirementHash = progressionLevelRequirementHash;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DestinyDefinitionsDestinyItemQualityBlockDefinition destinyDefinitionsDestinyItemQualityBlockDefinition = (DestinyDefinitionsDestinyItemQualityBlockDefinition) o;
    return Objects.equals(this.itemLevels, destinyDefinitionsDestinyItemQualityBlockDefinition.itemLevels) &&
        Objects.equals(this.qualityLevel, destinyDefinitionsDestinyItemQualityBlockDefinition.qualityLevel) &&
        Objects.equals(this.infusionCategoryName, destinyDefinitionsDestinyItemQualityBlockDefinition.infusionCategoryName) &&
        Objects.equals(this.infusionCategoryHash, destinyDefinitionsDestinyItemQualityBlockDefinition.infusionCategoryHash) &&
        Objects.equals(this.infusionCategoryHashes, destinyDefinitionsDestinyItemQualityBlockDefinition.infusionCategoryHashes) &&
        Objects.equals(this.progressionLevelRequirementHash, destinyDefinitionsDestinyItemQualityBlockDefinition.progressionLevelRequirementHash);
  }

  @Override
  public int hashCode() {
    return Objects.hash(itemLevels, qualityLevel, infusionCategoryName, infusionCategoryHash, infusionCategoryHashes, progressionLevelRequirementHash);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DestinyDefinitionsDestinyItemQualityBlockDefinition {\n");
    
    sb.append("    itemLevels: ").append(toIndentedString(itemLevels)).append("\n");
    sb.append("    qualityLevel: ").append(toIndentedString(qualityLevel)).append("\n");
    sb.append("    infusionCategoryName: ").append(toIndentedString(infusionCategoryName)).append("\n");
    sb.append("    infusionCategoryHash: ").append(toIndentedString(infusionCategoryHash)).append("\n");
    sb.append("    infusionCategoryHashes: ").append(toIndentedString(infusionCategoryHashes)).append("\n");
    sb.append("    progressionLevelRequirementHash: ").append(toIndentedString(progressionLevelRequirementHash)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

