/*
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.3.2
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package uk.co.bluedust.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Defines the conditions under which stat modifications will be applied to a Character while participating in an objective.
 */
@ApiModel(description = "Defines the conditions under which stat modifications will be applied to a Character while participating in an objective.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-12-08T21:00:47.497Z")
public class DestinyDefinitionsDestinyObjectiveStatEntryDefinition {
  @JsonProperty("stat")
  private Object stat = null;

  @JsonProperty("style")
  private Object style = null;

  public DestinyDefinitionsDestinyObjectiveStatEntryDefinition stat(Object stat) {
    this.stat = stat;
    return this;
  }

   /**
   * The stat being modified, and the value used.
   * @return stat
  **/
  @ApiModelProperty(value = "The stat being modified, and the value used.")
  public Object getStat() {
    return stat;
  }

  public void setStat(Object stat) {
    this.stat = stat;
  }

  public DestinyDefinitionsDestinyObjectiveStatEntryDefinition style(Object style) {
    this.style = style;
    return this;
  }

   /**
   * Whether it will be applied as long as the objective is active, when it&#39;s completed, or until it&#39;s completed.
   * @return style
  **/
  @ApiModelProperty(value = "Whether it will be applied as long as the objective is active, when it's completed, or until it's completed.")
  public Object getStyle() {
    return style;
  }

  public void setStyle(Object style) {
    this.style = style;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DestinyDefinitionsDestinyObjectiveStatEntryDefinition destinyDefinitionsDestinyObjectiveStatEntryDefinition = (DestinyDefinitionsDestinyObjectiveStatEntryDefinition) o;
    return Objects.equals(this.stat, destinyDefinitionsDestinyObjectiveStatEntryDefinition.stat) &&
        Objects.equals(this.style, destinyDefinitionsDestinyObjectiveStatEntryDefinition.style);
  }

  @Override
  public int hashCode() {
    return Objects.hash(stat, style);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DestinyDefinitionsDestinyObjectiveStatEntryDefinition {\n");
    
    sb.append("    stat: ").append(toIndentedString(stat)).append("\n");
    sb.append("    style: ").append(toIndentedString(style)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

