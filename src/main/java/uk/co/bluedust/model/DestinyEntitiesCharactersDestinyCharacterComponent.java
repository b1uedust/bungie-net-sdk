/*
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.3.2
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package uk.co.bluedust.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * This component contains base properties of the character. You&#39;ll probably want to always request this component, but hey you do you.
 */
@ApiModel(description = "This component contains base properties of the character. You'll probably want to always request this component, but hey you do you.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-11-04T23:34:27.728Z")
public class DestinyEntitiesCharactersDestinyCharacterComponent {
  @JsonProperty("membershipId")
  private Long membershipId = null;

  @JsonProperty("membershipType")
  private Object membershipType = null;

  @JsonProperty("characterId")
  private Long characterId = null;

  @JsonProperty("dateLastPlayed")
  private OffsetDateTime dateLastPlayed = null;

  @JsonProperty("minutesPlayedThisSession")
  private Long minutesPlayedThisSession = null;

  @JsonProperty("minutesPlayedTotal")
  private Long minutesPlayedTotal = null;

  @JsonProperty("light")
  private Integer light = null;

  @JsonProperty("stats")
  private Map<String, Integer> stats = null;

  @JsonProperty("raceHash")
  private Long raceHash = null;

  @JsonProperty("genderHash")
  private Long genderHash = null;

  @JsonProperty("classHash")
  private Long classHash = null;

  @JsonProperty("raceType")
  private Object raceType = null;

  @JsonProperty("classType")
  private Object classType = null;

  @JsonProperty("genderType")
  private Object genderType = null;

  @JsonProperty("emblemPath")
  private String emblemPath = null;

  @JsonProperty("emblemBackgroundPath")
  private String emblemBackgroundPath = null;

  @JsonProperty("emblemHash")
  private Long emblemHash = null;

  @JsonProperty("emblemColor")
  private Object emblemColor = null;

  @JsonProperty("levelProgression")
  private Object levelProgression = null;

  @JsonProperty("baseCharacterLevel")
  private Integer baseCharacterLevel = null;

  @JsonProperty("percentToNextLevel")
  private Float percentToNextLevel = null;

  @JsonProperty("titleRecordHash")
  private Long titleRecordHash = null;

  public DestinyEntitiesCharactersDestinyCharacterComponent membershipId(Long membershipId) {
    this.membershipId = membershipId;
    return this;
  }

   /**
   * Every Destiny Profile has a membershipId. This is provided on the character as well for convenience.
   * @return membershipId
  **/
  @ApiModelProperty(value = "Every Destiny Profile has a membershipId. This is provided on the character as well for convenience.")
  public Long getMembershipId() {
    return membershipId;
  }

  public void setMembershipId(Long membershipId) {
    this.membershipId = membershipId;
  }

  public DestinyEntitiesCharactersDestinyCharacterComponent membershipType(Object membershipType) {
    this.membershipType = membershipType;
    return this;
  }

   /**
   * membershipType tells you the platform on which the character plays. Examine the BungieMembershipType enumeration for possible values.
   * @return membershipType
  **/
  @ApiModelProperty(value = "membershipType tells you the platform on which the character plays. Examine the BungieMembershipType enumeration for possible values.")
  public Object getMembershipType() {
    return membershipType;
  }

  public void setMembershipType(Object membershipType) {
    this.membershipType = membershipType;
  }

  public DestinyEntitiesCharactersDestinyCharacterComponent characterId(Long characterId) {
    this.characterId = characterId;
    return this;
  }

   /**
   * The unique identifier for the character.
   * @return characterId
  **/
  @ApiModelProperty(value = "The unique identifier for the character.")
  public Long getCharacterId() {
    return characterId;
  }

  public void setCharacterId(Long characterId) {
    this.characterId = characterId;
  }

  public DestinyEntitiesCharactersDestinyCharacterComponent dateLastPlayed(OffsetDateTime dateLastPlayed) {
    this.dateLastPlayed = dateLastPlayed;
    return this;
  }

   /**
   * The last date that the user played Destiny.
   * @return dateLastPlayed
  **/
  @ApiModelProperty(value = "The last date that the user played Destiny.")
  public OffsetDateTime getDateLastPlayed() {
    return dateLastPlayed;
  }

  public void setDateLastPlayed(OffsetDateTime dateLastPlayed) {
    this.dateLastPlayed = dateLastPlayed;
  }

  public DestinyEntitiesCharactersDestinyCharacterComponent minutesPlayedThisSession(Long minutesPlayedThisSession) {
    this.minutesPlayedThisSession = minutesPlayedThisSession;
    return this;
  }

   /**
   * If the user is currently playing, this is how long they&#39;ve been playing.
   * @return minutesPlayedThisSession
  **/
  @ApiModelProperty(value = "If the user is currently playing, this is how long they've been playing.")
  public Long getMinutesPlayedThisSession() {
    return minutesPlayedThisSession;
  }

  public void setMinutesPlayedThisSession(Long minutesPlayedThisSession) {
    this.minutesPlayedThisSession = minutesPlayedThisSession;
  }

  public DestinyEntitiesCharactersDestinyCharacterComponent minutesPlayedTotal(Long minutesPlayedTotal) {
    this.minutesPlayedTotal = minutesPlayedTotal;
    return this;
  }

   /**
   * If this value is 525,600, then they played Destiny for a year. Or they&#39;re a very dedicated Rent fan. Note that this includes idle time, not just time spent actually in activities shooting things.
   * @return minutesPlayedTotal
  **/
  @ApiModelProperty(value = "If this value is 525,600, then they played Destiny for a year. Or they're a very dedicated Rent fan. Note that this includes idle time, not just time spent actually in activities shooting things.")
  public Long getMinutesPlayedTotal() {
    return minutesPlayedTotal;
  }

  public void setMinutesPlayedTotal(Long minutesPlayedTotal) {
    this.minutesPlayedTotal = minutesPlayedTotal;
  }

  public DestinyEntitiesCharactersDestinyCharacterComponent light(Integer light) {
    this.light = light;
    return this;
  }

   /**
   * The user&#39;s calculated \&quot;Light Level\&quot;. Light level is an indicator of your power that mostly matters in the end game, once you&#39;ve reached the maximum character level: it&#39;s a level that&#39;s dependent on the average Attack/Defense power of your items.
   * @return light
  **/
  @ApiModelProperty(value = "The user's calculated \"Light Level\". Light level is an indicator of your power that mostly matters in the end game, once you've reached the maximum character level: it's a level that's dependent on the average Attack/Defense power of your items.")
  public Integer getLight() {
    return light;
  }

  public void setLight(Integer light) {
    this.light = light;
  }

  public DestinyEntitiesCharactersDestinyCharacterComponent stats(Map<String, Integer> stats) {
    this.stats = stats;
    return this;
  }

  public DestinyEntitiesCharactersDestinyCharacterComponent putStatsItem(String key, Integer statsItem) {
    if (this.stats == null) {
      this.stats = new HashMap<>();
    }
    this.stats.put(key, statsItem);
    return this;
  }

   /**
   * Your character&#39;s stats, such as Agility, Resilience, etc... *not* historical stats.  You&#39;ll have to call a different endpoint for those.
   * @return stats
  **/
  @ApiModelProperty(value = "Your character's stats, such as Agility, Resilience, etc... *not* historical stats.  You'll have to call a different endpoint for those.")
  public Map<String, Integer> getStats() {
    return stats;
  }

  public void setStats(Map<String, Integer> stats) {
    this.stats = stats;
  }

  public DestinyEntitiesCharactersDestinyCharacterComponent raceHash(Long raceHash) {
    this.raceHash = raceHash;
    return this;
  }

   /**
   * Use this hash to look up the character&#39;s DestinyRaceDefinition.
   * @return raceHash
  **/
  @ApiModelProperty(value = "Use this hash to look up the character's DestinyRaceDefinition.")
  public Long getRaceHash() {
    return raceHash;
  }

  public void setRaceHash(Long raceHash) {
    this.raceHash = raceHash;
  }

  public DestinyEntitiesCharactersDestinyCharacterComponent genderHash(Long genderHash) {
    this.genderHash = genderHash;
    return this;
  }

   /**
   * Use this hash to look up the character&#39;s DestinyGenderDefinition.
   * @return genderHash
  **/
  @ApiModelProperty(value = "Use this hash to look up the character's DestinyGenderDefinition.")
  public Long getGenderHash() {
    return genderHash;
  }

  public void setGenderHash(Long genderHash) {
    this.genderHash = genderHash;
  }

  public DestinyEntitiesCharactersDestinyCharacterComponent classHash(Long classHash) {
    this.classHash = classHash;
    return this;
  }

   /**
   * Use this hash to look up the character&#39;s DestinyClassDefinition.
   * @return classHash
  **/
  @ApiModelProperty(value = "Use this hash to look up the character's DestinyClassDefinition.")
  public Long getClassHash() {
    return classHash;
  }

  public void setClassHash(Long classHash) {
    this.classHash = classHash;
  }

  public DestinyEntitiesCharactersDestinyCharacterComponent raceType(Object raceType) {
    this.raceType = raceType;
    return this;
  }

   /**
   * Mostly for historical purposes at this point, this is an enumeration for the character&#39;s race.  It&#39;ll be preferable in the general case to look up the related definition: but for some people this was too convenient to remove.
   * @return raceType
  **/
  @ApiModelProperty(value = "Mostly for historical purposes at this point, this is an enumeration for the character's race.  It'll be preferable in the general case to look up the related definition: but for some people this was too convenient to remove.")
  public Object getRaceType() {
    return raceType;
  }

  public void setRaceType(Object raceType) {
    this.raceType = raceType;
  }

  public DestinyEntitiesCharactersDestinyCharacterComponent classType(Object classType) {
    this.classType = classType;
    return this;
  }

   /**
   * Mostly for historical purposes at this point, this is an enumeration for the character&#39;s class.  It&#39;ll be preferable in the general case to look up the related definition: but for some people this was too convenient to remove.
   * @return classType
  **/
  @ApiModelProperty(value = "Mostly for historical purposes at this point, this is an enumeration for the character's class.  It'll be preferable in the general case to look up the related definition: but for some people this was too convenient to remove.")
  public Object getClassType() {
    return classType;
  }

  public void setClassType(Object classType) {
    this.classType = classType;
  }

  public DestinyEntitiesCharactersDestinyCharacterComponent genderType(Object genderType) {
    this.genderType = genderType;
    return this;
  }

   /**
   * Mostly for historical purposes at this point, this is an enumeration for the character&#39;s Gender.  It&#39;ll be preferable in the general case to look up the related definition: but for some people this was too convenient to remove. And yeah, it&#39;s an enumeration and not a boolean. Fight me.
   * @return genderType
  **/
  @ApiModelProperty(value = "Mostly for historical purposes at this point, this is an enumeration for the character's Gender.  It'll be preferable in the general case to look up the related definition: but for some people this was too convenient to remove. And yeah, it's an enumeration and not a boolean. Fight me.")
  public Object getGenderType() {
    return genderType;
  }

  public void setGenderType(Object genderType) {
    this.genderType = genderType;
  }

  public DestinyEntitiesCharactersDestinyCharacterComponent emblemPath(String emblemPath) {
    this.emblemPath = emblemPath;
    return this;
  }

   /**
   * A shortcut path to the user&#39;s currently equipped emblem image. If you&#39;re just showing summary info for a user, this is more convenient than examining their equipped emblem and looking up the definition.
   * @return emblemPath
  **/
  @ApiModelProperty(value = "A shortcut path to the user's currently equipped emblem image. If you're just showing summary info for a user, this is more convenient than examining their equipped emblem and looking up the definition.")
  public String getEmblemPath() {
    return emblemPath;
  }

  public void setEmblemPath(String emblemPath) {
    this.emblemPath = emblemPath;
  }

  public DestinyEntitiesCharactersDestinyCharacterComponent emblemBackgroundPath(String emblemBackgroundPath) {
    this.emblemBackgroundPath = emblemBackgroundPath;
    return this;
  }

   /**
   * A shortcut path to the user&#39;s currently equipped emblem background image. If you&#39;re just showing summary info for a user, this is more convenient than examining their equipped emblem and looking up the definition.
   * @return emblemBackgroundPath
  **/
  @ApiModelProperty(value = "A shortcut path to the user's currently equipped emblem background image. If you're just showing summary info for a user, this is more convenient than examining their equipped emblem and looking up the definition.")
  public String getEmblemBackgroundPath() {
    return emblemBackgroundPath;
  }

  public void setEmblemBackgroundPath(String emblemBackgroundPath) {
    this.emblemBackgroundPath = emblemBackgroundPath;
  }

  public DestinyEntitiesCharactersDestinyCharacterComponent emblemHash(Long emblemHash) {
    this.emblemHash = emblemHash;
    return this;
  }

   /**
   * The hash of the currently equipped emblem for the user. Can be used to look up the DestinyInventoryItemDefinition.
   * @return emblemHash
  **/
  @ApiModelProperty(value = "The hash of the currently equipped emblem for the user. Can be used to look up the DestinyInventoryItemDefinition.")
  public Long getEmblemHash() {
    return emblemHash;
  }

  public void setEmblemHash(Long emblemHash) {
    this.emblemHash = emblemHash;
  }

  public DestinyEntitiesCharactersDestinyCharacterComponent emblemColor(Object emblemColor) {
    this.emblemColor = emblemColor;
    return this;
  }

   /**
   * A shortcut for getting the background color of the user&#39;s currently equipped emblem without having to do a DestinyInventoryItemDefinition lookup.
   * @return emblemColor
  **/
  @ApiModelProperty(value = "A shortcut for getting the background color of the user's currently equipped emblem without having to do a DestinyInventoryItemDefinition lookup.")
  public Object getEmblemColor() {
    return emblemColor;
  }

  public void setEmblemColor(Object emblemColor) {
    this.emblemColor = emblemColor;
  }

  public DestinyEntitiesCharactersDestinyCharacterComponent levelProgression(Object levelProgression) {
    this.levelProgression = levelProgression;
    return this;
  }

   /**
   * The progression that indicates your character&#39;s level. Not their light level, but their character level: you know, the thing you max out a couple hours in and then ignore for the sake of light level.
   * @return levelProgression
  **/
  @ApiModelProperty(value = "The progression that indicates your character's level. Not their light level, but their character level: you know, the thing you max out a couple hours in and then ignore for the sake of light level.")
  public Object getLevelProgression() {
    return levelProgression;
  }

  public void setLevelProgression(Object levelProgression) {
    this.levelProgression = levelProgression;
  }

  public DestinyEntitiesCharactersDestinyCharacterComponent baseCharacterLevel(Integer baseCharacterLevel) {
    this.baseCharacterLevel = baseCharacterLevel;
    return this;
  }

   /**
   * The \&quot;base\&quot; level of your character, not accounting for any light level.
   * @return baseCharacterLevel
  **/
  @ApiModelProperty(value = "The \"base\" level of your character, not accounting for any light level.")
  public Integer getBaseCharacterLevel() {
    return baseCharacterLevel;
  }

  public void setBaseCharacterLevel(Integer baseCharacterLevel) {
    this.baseCharacterLevel = baseCharacterLevel;
  }

  public DestinyEntitiesCharactersDestinyCharacterComponent percentToNextLevel(Float percentToNextLevel) {
    this.percentToNextLevel = percentToNextLevel;
    return this;
  }

   /**
   * A number between 0 and 100, indicating the whole and fractional % remaining to get to the next character level.
   * @return percentToNextLevel
  **/
  @ApiModelProperty(value = "A number between 0 and 100, indicating the whole and fractional % remaining to get to the next character level.")
  public Float getPercentToNextLevel() {
    return percentToNextLevel;
  }

  public void setPercentToNextLevel(Float percentToNextLevel) {
    this.percentToNextLevel = percentToNextLevel;
  }

  public DestinyEntitiesCharactersDestinyCharacterComponent titleRecordHash(Long titleRecordHash) {
    this.titleRecordHash = titleRecordHash;
    return this;
  }

   /**
   * If this Character has a title assigned to it, this is the identifier of the DestinyRecordDefinition that has that title information.
   * @return titleRecordHash
  **/
  @ApiModelProperty(value = "If this Character has a title assigned to it, this is the identifier of the DestinyRecordDefinition that has that title information.")
  public Long getTitleRecordHash() {
    return titleRecordHash;
  }

  public void setTitleRecordHash(Long titleRecordHash) {
    this.titleRecordHash = titleRecordHash;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DestinyEntitiesCharactersDestinyCharacterComponent destinyEntitiesCharactersDestinyCharacterComponent = (DestinyEntitiesCharactersDestinyCharacterComponent) o;
    return Objects.equals(this.membershipId, destinyEntitiesCharactersDestinyCharacterComponent.membershipId) &&
        Objects.equals(this.membershipType, destinyEntitiesCharactersDestinyCharacterComponent.membershipType) &&
        Objects.equals(this.characterId, destinyEntitiesCharactersDestinyCharacterComponent.characterId) &&
        Objects.equals(this.dateLastPlayed, destinyEntitiesCharactersDestinyCharacterComponent.dateLastPlayed) &&
        Objects.equals(this.minutesPlayedThisSession, destinyEntitiesCharactersDestinyCharacterComponent.minutesPlayedThisSession) &&
        Objects.equals(this.minutesPlayedTotal, destinyEntitiesCharactersDestinyCharacterComponent.minutesPlayedTotal) &&
        Objects.equals(this.light, destinyEntitiesCharactersDestinyCharacterComponent.light) &&
        Objects.equals(this.stats, destinyEntitiesCharactersDestinyCharacterComponent.stats) &&
        Objects.equals(this.raceHash, destinyEntitiesCharactersDestinyCharacterComponent.raceHash) &&
        Objects.equals(this.genderHash, destinyEntitiesCharactersDestinyCharacterComponent.genderHash) &&
        Objects.equals(this.classHash, destinyEntitiesCharactersDestinyCharacterComponent.classHash) &&
        Objects.equals(this.raceType, destinyEntitiesCharactersDestinyCharacterComponent.raceType) &&
        Objects.equals(this.classType, destinyEntitiesCharactersDestinyCharacterComponent.classType) &&
        Objects.equals(this.genderType, destinyEntitiesCharactersDestinyCharacterComponent.genderType) &&
        Objects.equals(this.emblemPath, destinyEntitiesCharactersDestinyCharacterComponent.emblemPath) &&
        Objects.equals(this.emblemBackgroundPath, destinyEntitiesCharactersDestinyCharacterComponent.emblemBackgroundPath) &&
        Objects.equals(this.emblemHash, destinyEntitiesCharactersDestinyCharacterComponent.emblemHash) &&
        Objects.equals(this.emblemColor, destinyEntitiesCharactersDestinyCharacterComponent.emblemColor) &&
        Objects.equals(this.levelProgression, destinyEntitiesCharactersDestinyCharacterComponent.levelProgression) &&
        Objects.equals(this.baseCharacterLevel, destinyEntitiesCharactersDestinyCharacterComponent.baseCharacterLevel) &&
        Objects.equals(this.percentToNextLevel, destinyEntitiesCharactersDestinyCharacterComponent.percentToNextLevel) &&
        Objects.equals(this.titleRecordHash, destinyEntitiesCharactersDestinyCharacterComponent.titleRecordHash);
  }

  @Override
  public int hashCode() {
    return Objects.hash(membershipId, membershipType, characterId, dateLastPlayed, minutesPlayedThisSession, minutesPlayedTotal, light, stats, raceHash, genderHash, classHash, raceType, classType, genderType, emblemPath, emblemBackgroundPath, emblemHash, emblemColor, levelProgression, baseCharacterLevel, percentToNextLevel, titleRecordHash);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DestinyEntitiesCharactersDestinyCharacterComponent {\n");
    
    sb.append("    membershipId: ").append(toIndentedString(membershipId)).append("\n");
    sb.append("    membershipType: ").append(toIndentedString(membershipType)).append("\n");
    sb.append("    characterId: ").append(toIndentedString(characterId)).append("\n");
    sb.append("    dateLastPlayed: ").append(toIndentedString(dateLastPlayed)).append("\n");
    sb.append("    minutesPlayedThisSession: ").append(toIndentedString(minutesPlayedThisSession)).append("\n");
    sb.append("    minutesPlayedTotal: ").append(toIndentedString(minutesPlayedTotal)).append("\n");
    sb.append("    light: ").append(toIndentedString(light)).append("\n");
    sb.append("    stats: ").append(toIndentedString(stats)).append("\n");
    sb.append("    raceHash: ").append(toIndentedString(raceHash)).append("\n");
    sb.append("    genderHash: ").append(toIndentedString(genderHash)).append("\n");
    sb.append("    classHash: ").append(toIndentedString(classHash)).append("\n");
    sb.append("    raceType: ").append(toIndentedString(raceType)).append("\n");
    sb.append("    classType: ").append(toIndentedString(classType)).append("\n");
    sb.append("    genderType: ").append(toIndentedString(genderType)).append("\n");
    sb.append("    emblemPath: ").append(toIndentedString(emblemPath)).append("\n");
    sb.append("    emblemBackgroundPath: ").append(toIndentedString(emblemBackgroundPath)).append("\n");
    sb.append("    emblemHash: ").append(toIndentedString(emblemHash)).append("\n");
    sb.append("    emblemColor: ").append(toIndentedString(emblemColor)).append("\n");
    sb.append("    levelProgression: ").append(toIndentedString(levelProgression)).append("\n");
    sb.append("    baseCharacterLevel: ").append(toIndentedString(baseCharacterLevel)).append("\n");
    sb.append("    percentToNextLevel: ").append(toIndentedString(percentToNextLevel)).append("\n");
    sb.append("    titleRecordHash: ").append(toIndentedString(titleRecordHash)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

