/*
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.3.2
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package uk.co.bluedust.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Represents the \&quot;Live\&quot; data that we can obtain about a Character&#39;s status with a specific Activity. This will tell you whether the character can participate in the activity, as well as some other basic mutable information.   Meant to be combined with static DestinyActivityDefinition data for a full picture of the Activity.
 */
@ApiModel(description = "Represents the \"Live\" data that we can obtain about a Character's status with a specific Activity. This will tell you whether the character can participate in the activity, as well as some other basic mutable information.   Meant to be combined with static DestinyActivityDefinition data for a full picture of the Activity.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-11-04T23:34:27.728Z")
public class DestinyDestinyActivity {
  @JsonProperty("activityHash")
  private Long activityHash = null;

  @JsonProperty("isNew")
  private Boolean isNew = null;

  @JsonProperty("canLead")
  private Boolean canLead = null;

  @JsonProperty("canJoin")
  private Boolean canJoin = null;

  @JsonProperty("isCompleted")
  private Boolean isCompleted = null;

  @JsonProperty("isVisible")
  private Boolean isVisible = null;

  @JsonProperty("displayLevel")
  private Integer displayLevel = null;

  @JsonProperty("recommendedLight")
  private Integer recommendedLight = null;

  @JsonProperty("difficultyTier")
  private Object difficultyTier = null;

  public DestinyDestinyActivity activityHash(Long activityHash) {
    this.activityHash = activityHash;
    return this;
  }

   /**
   * The hash identifier of the Activity. Use this to look up the DestinyActivityDefinition of the activity.
   * @return activityHash
  **/
  @ApiModelProperty(value = "The hash identifier of the Activity. Use this to look up the DestinyActivityDefinition of the activity.")
  public Long getActivityHash() {
    return activityHash;
  }

  public void setActivityHash(Long activityHash) {
    this.activityHash = activityHash;
  }

  public DestinyDestinyActivity isNew(Boolean isNew) {
    this.isNew = isNew;
    return this;
  }

   /**
   * If true, then the activity should have a \&quot;new\&quot; indicator in the Director UI.
   * @return isNew
  **/
  @ApiModelProperty(value = "If true, then the activity should have a \"new\" indicator in the Director UI.")
  public Boolean isIsNew() {
    return isNew;
  }

  public void setIsNew(Boolean isNew) {
    this.isNew = isNew;
  }

  public DestinyDestinyActivity canLead(Boolean canLead) {
    this.canLead = canLead;
    return this;
  }

   /**
   * If true, the user is allowed to lead a Fireteam into this activity.
   * @return canLead
  **/
  @ApiModelProperty(value = "If true, the user is allowed to lead a Fireteam into this activity.")
  public Boolean isCanLead() {
    return canLead;
  }

  public void setCanLead(Boolean canLead) {
    this.canLead = canLead;
  }

  public DestinyDestinyActivity canJoin(Boolean canJoin) {
    this.canJoin = canJoin;
    return this;
  }

   /**
   * If true, the user is allowed to join with another Fireteam in this activity.
   * @return canJoin
  **/
  @ApiModelProperty(value = "If true, the user is allowed to join with another Fireteam in this activity.")
  public Boolean isCanJoin() {
    return canJoin;
  }

  public void setCanJoin(Boolean canJoin) {
    this.canJoin = canJoin;
  }

  public DestinyDestinyActivity isCompleted(Boolean isCompleted) {
    this.isCompleted = isCompleted;
    return this;
  }

   /**
   * If true, we both have the ability to know that the user has completed this activity and they have completed it. Unfortunately, we can&#39;t necessarily know this for all activities. As such, this should probably only be used if you already know in advance which specific activities you wish to check.
   * @return isCompleted
  **/
  @ApiModelProperty(value = "If true, we both have the ability to know that the user has completed this activity and they have completed it. Unfortunately, we can't necessarily know this for all activities. As such, this should probably only be used if you already know in advance which specific activities you wish to check.")
  public Boolean isIsCompleted() {
    return isCompleted;
  }

  public void setIsCompleted(Boolean isCompleted) {
    this.isCompleted = isCompleted;
  }

  public DestinyDestinyActivity isVisible(Boolean isVisible) {
    this.isVisible = isVisible;
    return this;
  }

   /**
   * If true, the user should be able to see this activity.
   * @return isVisible
  **/
  @ApiModelProperty(value = "If true, the user should be able to see this activity.")
  public Boolean isIsVisible() {
    return isVisible;
  }

  public void setIsVisible(Boolean isVisible) {
    this.isVisible = isVisible;
  }

  public DestinyDestinyActivity displayLevel(Integer displayLevel) {
    this.displayLevel = displayLevel;
    return this;
  }

   /**
   * The difficulty level of the activity, if applicable.
   * @return displayLevel
  **/
  @ApiModelProperty(value = "The difficulty level of the activity, if applicable.")
  public Integer getDisplayLevel() {
    return displayLevel;
  }

  public void setDisplayLevel(Integer displayLevel) {
    this.displayLevel = displayLevel;
  }

  public DestinyDestinyActivity recommendedLight(Integer recommendedLight) {
    this.recommendedLight = recommendedLight;
    return this;
  }

   /**
   * The recommended light level for the activity, if applicable.
   * @return recommendedLight
  **/
  @ApiModelProperty(value = "The recommended light level for the activity, if applicable.")
  public Integer getRecommendedLight() {
    return recommendedLight;
  }

  public void setRecommendedLight(Integer recommendedLight) {
    this.recommendedLight = recommendedLight;
  }

  public DestinyDestinyActivity difficultyTier(Object difficultyTier) {
    this.difficultyTier = difficultyTier;
    return this;
  }

   /**
   * A DestinyActivityDifficultyTier enum value indicating the difficulty of the activity.
   * @return difficultyTier
  **/
  @ApiModelProperty(value = "A DestinyActivityDifficultyTier enum value indicating the difficulty of the activity.")
  public Object getDifficultyTier() {
    return difficultyTier;
  }

  public void setDifficultyTier(Object difficultyTier) {
    this.difficultyTier = difficultyTier;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DestinyDestinyActivity destinyDestinyActivity = (DestinyDestinyActivity) o;
    return Objects.equals(this.activityHash, destinyDestinyActivity.activityHash) &&
        Objects.equals(this.isNew, destinyDestinyActivity.isNew) &&
        Objects.equals(this.canLead, destinyDestinyActivity.canLead) &&
        Objects.equals(this.canJoin, destinyDestinyActivity.canJoin) &&
        Objects.equals(this.isCompleted, destinyDestinyActivity.isCompleted) &&
        Objects.equals(this.isVisible, destinyDestinyActivity.isVisible) &&
        Objects.equals(this.displayLevel, destinyDestinyActivity.displayLevel) &&
        Objects.equals(this.recommendedLight, destinyDestinyActivity.recommendedLight) &&
        Objects.equals(this.difficultyTier, destinyDestinyActivity.difficultyTier);
  }

  @Override
  public int hashCode() {
    return Objects.hash(activityHash, isNew, canLead, canJoin, isCompleted, isVisible, displayLevel, recommendedLight, difficultyTier);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DestinyDestinyActivity {\n");
    
    sb.append("    activityHash: ").append(toIndentedString(activityHash)).append("\n");
    sb.append("    isNew: ").append(toIndentedString(isNew)).append("\n");
    sb.append("    canLead: ").append(toIndentedString(canLead)).append("\n");
    sb.append("    canJoin: ").append(toIndentedString(canJoin)).append("\n");
    sb.append("    isCompleted: ").append(toIndentedString(isCompleted)).append("\n");
    sb.append("    isVisible: ").append(toIndentedString(isVisible)).append("\n");
    sb.append("    displayLevel: ").append(toIndentedString(displayLevel)).append("\n");
    sb.append("    recommendedLight: ").append(toIndentedString(recommendedLight)).append("\n");
    sb.append("    difficultyTier: ").append(toIndentedString(difficultyTier)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

