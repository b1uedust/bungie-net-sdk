/*
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.3.2
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package uk.co.bluedust.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;

/**
 * DestinyDefinitionsItemsDestinyParentItemOverride
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-11-04T16:59:02.979Z")
public class DestinyDefinitionsItemsDestinyParentItemOverride {
  @JsonProperty("additionalEquipRequirementsDisplayStrings")
  private List<String> additionalEquipRequirementsDisplayStrings = null;

  @JsonProperty("pipIcon")
  private String pipIcon = null;

  public DestinyDefinitionsItemsDestinyParentItemOverride additionalEquipRequirementsDisplayStrings(List<String> additionalEquipRequirementsDisplayStrings) {
    this.additionalEquipRequirementsDisplayStrings = additionalEquipRequirementsDisplayStrings;
    return this;
  }

  public DestinyDefinitionsItemsDestinyParentItemOverride addAdditionalEquipRequirementsDisplayStringsItem(String additionalEquipRequirementsDisplayStringsItem) {
    if (this.additionalEquipRequirementsDisplayStrings == null) {
      this.additionalEquipRequirementsDisplayStrings = new ArrayList<>();
    }
    this.additionalEquipRequirementsDisplayStrings.add(additionalEquipRequirementsDisplayStringsItem);
    return this;
  }

   /**
   * Get additionalEquipRequirementsDisplayStrings
   * @return additionalEquipRequirementsDisplayStrings
  **/
  @ApiModelProperty(value = "")
  public List<String> getAdditionalEquipRequirementsDisplayStrings() {
    return additionalEquipRequirementsDisplayStrings;
  }

  public void setAdditionalEquipRequirementsDisplayStrings(List<String> additionalEquipRequirementsDisplayStrings) {
    this.additionalEquipRequirementsDisplayStrings = additionalEquipRequirementsDisplayStrings;
  }

  public DestinyDefinitionsItemsDestinyParentItemOverride pipIcon(String pipIcon) {
    this.pipIcon = pipIcon;
    return this;
  }

   /**
   * Get pipIcon
   * @return pipIcon
  **/
  @ApiModelProperty(value = "")
  public String getPipIcon() {
    return pipIcon;
  }

  public void setPipIcon(String pipIcon) {
    this.pipIcon = pipIcon;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DestinyDefinitionsItemsDestinyParentItemOverride destinyDefinitionsItemsDestinyParentItemOverride = (DestinyDefinitionsItemsDestinyParentItemOverride) o;
    return Objects.equals(this.additionalEquipRequirementsDisplayStrings, destinyDefinitionsItemsDestinyParentItemOverride.additionalEquipRequirementsDisplayStrings) &&
        Objects.equals(this.pipIcon, destinyDefinitionsItemsDestinyParentItemOverride.pipIcon);
  }

  @Override
  public int hashCode() {
    return Objects.hash(additionalEquipRequirementsDisplayStrings, pipIcon);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DestinyDefinitionsItemsDestinyParentItemOverride {\n");
    
    sb.append("    additionalEquipRequirementsDisplayStrings: ").append(toIndentedString(additionalEquipRequirementsDisplayStrings)).append("\n");
    sb.append("    pipIcon: ").append(toIndentedString(pipIcon)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

