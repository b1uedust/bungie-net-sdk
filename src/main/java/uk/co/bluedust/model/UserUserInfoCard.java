/*
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.3.2
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package uk.co.bluedust.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * This contract supplies basic information commonly used to display a minimal amount of information about a user. Take care to not add more properties here unless the property applies in all (or at least the majority) of the situations where UserInfoCard is used. Avoid adding game specific or platform specific details here. In cases where UserInfoCard is a subset of the data needed in a contract, use UserInfoCard as a property of other contracts.
 */
@ApiModel(description = "This contract supplies basic information commonly used to display a minimal amount of information about a user. Take care to not add more properties here unless the property applies in all (or at least the majority) of the situations where UserInfoCard is used. Avoid adding game specific or platform specific details here. In cases where UserInfoCard is a subset of the data needed in a contract, use UserInfoCard as a property of other contracts.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-09-29T19:57:25.109+01:00")
public class UserUserInfoCard {
  @JsonProperty("supplementalDisplayName")
  private String supplementalDisplayName = null;

  @JsonProperty("iconPath")
  private String iconPath = null;

  @JsonProperty("membershipType")
  private Object membershipType = null;

  @JsonProperty("membershipId")
  private Long membershipId = null;

  @JsonProperty("displayName")
  private String displayName = null;

  public UserUserInfoCard supplementalDisplayName(String supplementalDisplayName) {
    this.supplementalDisplayName = supplementalDisplayName;
    return this;
  }

   /**
   * A platform specific additional display name - ex: psn Real Name, bnet Unique Name, etc.
   * @return supplementalDisplayName
  **/
  @ApiModelProperty(value = "A platform specific additional display name - ex: psn Real Name, bnet Unique Name, etc.")
  public String getSupplementalDisplayName() {
    return supplementalDisplayName;
  }

  public void setSupplementalDisplayName(String supplementalDisplayName) {
    this.supplementalDisplayName = supplementalDisplayName;
  }

  public UserUserInfoCard iconPath(String iconPath) {
    this.iconPath = iconPath;
    return this;
  }

   /**
   * URL the Icon if available.
   * @return iconPath
  **/
  @ApiModelProperty(value = "URL the Icon if available.")
  public String getIconPath() {
    return iconPath;
  }

  public void setIconPath(String iconPath) {
    this.iconPath = iconPath;
  }

  public UserUserInfoCard membershipType(Object membershipType) {
    this.membershipType = membershipType;
    return this;
  }

   /**
   * Type of the membership.
   * @return membershipType
  **/
  @ApiModelProperty(value = "Type of the membership.")
  public Object getMembershipType() {
    return membershipType;
  }

  public void setMembershipType(Object membershipType) {
    this.membershipType = membershipType;
  }

  public UserUserInfoCard membershipId(Long membershipId) {
    this.membershipId = membershipId;
    return this;
  }

   /**
   * Membership ID as they user is known in the Accounts service
   * @return membershipId
  **/
  @ApiModelProperty(value = "Membership ID as they user is known in the Accounts service")
  public Long getMembershipId() {
    return membershipId;
  }

  public void setMembershipId(Long membershipId) {
    this.membershipId = membershipId;
  }

  public UserUserInfoCard displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

   /**
   * Display Name the player has chosen for themselves. The display name is optional when the data type is used as input to a platform API.
   * @return displayName
  **/
  @ApiModelProperty(value = "Display Name the player has chosen for themselves. The display name is optional when the data type is used as input to a platform API.")
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserUserInfoCard userUserInfoCard = (UserUserInfoCard) o;
    return Objects.equals(this.supplementalDisplayName, userUserInfoCard.supplementalDisplayName) &&
        Objects.equals(this.iconPath, userUserInfoCard.iconPath) &&
        Objects.equals(this.membershipType, userUserInfoCard.membershipType) &&
        Objects.equals(this.membershipId, userUserInfoCard.membershipId) &&
        Objects.equals(this.displayName, userUserInfoCard.displayName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(supplementalDisplayName, iconPath, membershipType, membershipId, displayName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserUserInfoCard {\n");
    
    sb.append("    supplementalDisplayName: ").append(toIndentedString(supplementalDisplayName)).append("\n");
    sb.append("    iconPath: ").append(toIndentedString(iconPath)).append("\n");
    sb.append("    membershipType: ").append(toIndentedString(membershipType)).append("\n");
    sb.append("    membershipId: ").append(toIndentedString(membershipId)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

