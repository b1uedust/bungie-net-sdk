/*
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.3.2
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package uk.co.bluedust.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * Many items can be rendered in 3D. When you request this block, you will obtain the custom data needed to render this specific instance of the item.
 */
@ApiModel(description = "Many items can be rendered in 3D. When you request this block, you will obtain the custom data needed to render this specific instance of the item.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-09-29T19:57:25.109+01:00")
public class DestinyEntitiesItemsDestinyItemRenderComponent {
  @JsonProperty("useCustomDyes")
  private Boolean useCustomDyes = null;

  @JsonProperty("artRegions")
  private Map<String, Integer> artRegions = null;

  public DestinyEntitiesItemsDestinyItemRenderComponent useCustomDyes(Boolean useCustomDyes) {
    this.useCustomDyes = useCustomDyes;
    return this;
  }

   /**
   * If you should use custom dyes on this item, it will be indicated here.
   * @return useCustomDyes
  **/
  @ApiModelProperty(value = "If you should use custom dyes on this item, it will be indicated here.")
  public Boolean isUseCustomDyes() {
    return useCustomDyes;
  }

  public void setUseCustomDyes(Boolean useCustomDyes) {
    this.useCustomDyes = useCustomDyes;
  }

  public DestinyEntitiesItemsDestinyItemRenderComponent artRegions(Map<String, Integer> artRegions) {
    this.artRegions = artRegions;
    return this;
  }

  public DestinyEntitiesItemsDestinyItemRenderComponent putArtRegionsItem(String key, Integer artRegionsItem) {
    if (this.artRegions == null) {
      this.artRegions = new HashMap<>();
    }
    this.artRegions.put(key, artRegionsItem);
    return this;
  }

   /**
   * A dictionary for rendering gear components, with:  key &#x3D; Art Arrangement Region Index  value &#x3D; The chosen Arrangement Index for the Region, based on the value of a stat on the item used for making the choice.
   * @return artRegions
  **/
  @ApiModelProperty(value = "A dictionary for rendering gear components, with:  key = Art Arrangement Region Index  value = The chosen Arrangement Index for the Region, based on the value of a stat on the item used for making the choice.")
  public Map<String, Integer> getArtRegions() {
    return artRegions;
  }

  public void setArtRegions(Map<String, Integer> artRegions) {
    this.artRegions = artRegions;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DestinyEntitiesItemsDestinyItemRenderComponent destinyEntitiesItemsDestinyItemRenderComponent = (DestinyEntitiesItemsDestinyItemRenderComponent) o;
    return Objects.equals(this.useCustomDyes, destinyEntitiesItemsDestinyItemRenderComponent.useCustomDyes) &&
        Objects.equals(this.artRegions, destinyEntitiesItemsDestinyItemRenderComponent.artRegions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(useCustomDyes, artRegions);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DestinyEntitiesItemsDestinyItemRenderComponent {\n");
    
    sb.append("    useCustomDyes: ").append(toIndentedString(useCustomDyes)).append("\n");
    sb.append("    artRegions: ").append(toIndentedString(artRegions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

