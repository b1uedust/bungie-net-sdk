/*
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.3.2
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package uk.co.bluedust.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import uk.co.bluedust.model.GroupsV2GroupDateRange;
import uk.co.bluedust.model.GroupsV2GroupSortBy;
import uk.co.bluedust.model.GroupsV2GroupType;

/**
 * NOTE: GroupQuery, as of Destiny 2, has essentially two totally different and incompatible \&quot;modes\&quot;.  If you are querying for a group, you can pass any of the properties below.  If you are querying for a Clan, you MUST NOT pass any of the following properties (they must be null or undefined in your request, not just empty string/default values):  - groupMemberCountFilter - localeFilter - tagText  If you pass these, you will get a useless InvalidParameters error.
 */
@ApiModel(description = "NOTE: GroupQuery, as of Destiny 2, has essentially two totally different and incompatible \"modes\".  If you are querying for a group, you can pass any of the properties below.  If you are querying for a Clan, you MUST NOT pass any of the following properties (they must be null or undefined in your request, not just empty string/default values):  - groupMemberCountFilter - localeFilter - tagText  If you pass these, you will get a useless InvalidParameters error.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-09-29T19:57:25.109+01:00")
public class GroupsV2GroupQuery {
  @JsonProperty("name")
  private String name = null;

  @JsonProperty("groupType")
  private GroupsV2GroupType groupType = null;

  @JsonProperty("creationDate")
  private GroupsV2GroupDateRange creationDate = null;

  @JsonProperty("sortBy")
  private GroupsV2GroupSortBy sortBy = null;

  /**
   * Gets or Sets groupMemberCountFilter
   */
  public enum GroupMemberCountFilterEnum {
    NUMBER_0(0),
    
    NUMBER_1(1),
    
    NUMBER_2(2),
    
    NUMBER_3(3);

    private Integer value;

    GroupMemberCountFilterEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static GroupMemberCountFilterEnum fromValue(String text) {
      for (GroupMemberCountFilterEnum b : GroupMemberCountFilterEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("groupMemberCountFilter")
  private GroupMemberCountFilterEnum groupMemberCountFilter = null;

  @JsonProperty("localeFilter")
  private String localeFilter = null;

  @JsonProperty("tagText")
  private String tagText = null;

  @JsonProperty("itemsPerPage")
  private Integer itemsPerPage = null;

  @JsonProperty("currentPage")
  private Integer currentPage = null;

  @JsonProperty("requestContinuationToken")
  private String requestContinuationToken = null;

  public GroupsV2GroupQuery name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public GroupsV2GroupQuery groupType(GroupsV2GroupType groupType) {
    this.groupType = groupType;
    return this;
  }

   /**
   * Get groupType
   * @return groupType
  **/
  @ApiModelProperty(value = "")
  public GroupsV2GroupType getGroupType() {
    return groupType;
  }

  public void setGroupType(GroupsV2GroupType groupType) {
    this.groupType = groupType;
  }

  public GroupsV2GroupQuery creationDate(GroupsV2GroupDateRange creationDate) {
    this.creationDate = creationDate;
    return this;
  }

   /**
   * Get creationDate
   * @return creationDate
  **/
  @ApiModelProperty(value = "")
  public GroupsV2GroupDateRange getCreationDate() {
    return creationDate;
  }

  public void setCreationDate(GroupsV2GroupDateRange creationDate) {
    this.creationDate = creationDate;
  }

  public GroupsV2GroupQuery sortBy(GroupsV2GroupSortBy sortBy) {
    this.sortBy = sortBy;
    return this;
  }

   /**
   * Get sortBy
   * @return sortBy
  **/
  @ApiModelProperty(value = "")
  public GroupsV2GroupSortBy getSortBy() {
    return sortBy;
  }

  public void setSortBy(GroupsV2GroupSortBy sortBy) {
    this.sortBy = sortBy;
  }

  public GroupsV2GroupQuery groupMemberCountFilter(GroupMemberCountFilterEnum groupMemberCountFilter) {
    this.groupMemberCountFilter = groupMemberCountFilter;
    return this;
  }

   /**
   * Get groupMemberCountFilter
   * @return groupMemberCountFilter
  **/
  @ApiModelProperty(value = "")
  public GroupMemberCountFilterEnum getGroupMemberCountFilter() {
    return groupMemberCountFilter;
  }

  public void setGroupMemberCountFilter(GroupMemberCountFilterEnum groupMemberCountFilter) {
    this.groupMemberCountFilter = groupMemberCountFilter;
  }

  public GroupsV2GroupQuery localeFilter(String localeFilter) {
    this.localeFilter = localeFilter;
    return this;
  }

   /**
   * Get localeFilter
   * @return localeFilter
  **/
  @ApiModelProperty(value = "")
  public String getLocaleFilter() {
    return localeFilter;
  }

  public void setLocaleFilter(String localeFilter) {
    this.localeFilter = localeFilter;
  }

  public GroupsV2GroupQuery tagText(String tagText) {
    this.tagText = tagText;
    return this;
  }

   /**
   * Get tagText
   * @return tagText
  **/
  @ApiModelProperty(value = "")
  public String getTagText() {
    return tagText;
  }

  public void setTagText(String tagText) {
    this.tagText = tagText;
  }

  public GroupsV2GroupQuery itemsPerPage(Integer itemsPerPage) {
    this.itemsPerPage = itemsPerPage;
    return this;
  }

   /**
   * Get itemsPerPage
   * @return itemsPerPage
  **/
  @ApiModelProperty(value = "")
  public Integer getItemsPerPage() {
    return itemsPerPage;
  }

  public void setItemsPerPage(Integer itemsPerPage) {
    this.itemsPerPage = itemsPerPage;
  }

  public GroupsV2GroupQuery currentPage(Integer currentPage) {
    this.currentPage = currentPage;
    return this;
  }

   /**
   * Get currentPage
   * @return currentPage
  **/
  @ApiModelProperty(value = "")
  public Integer getCurrentPage() {
    return currentPage;
  }

  public void setCurrentPage(Integer currentPage) {
    this.currentPage = currentPage;
  }

  public GroupsV2GroupQuery requestContinuationToken(String requestContinuationToken) {
    this.requestContinuationToken = requestContinuationToken;
    return this;
  }

   /**
   * Get requestContinuationToken
   * @return requestContinuationToken
  **/
  @ApiModelProperty(value = "")
  public String getRequestContinuationToken() {
    return requestContinuationToken;
  }

  public void setRequestContinuationToken(String requestContinuationToken) {
    this.requestContinuationToken = requestContinuationToken;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GroupsV2GroupQuery groupsV2GroupQuery = (GroupsV2GroupQuery) o;
    return Objects.equals(this.name, groupsV2GroupQuery.name) &&
        Objects.equals(this.groupType, groupsV2GroupQuery.groupType) &&
        Objects.equals(this.creationDate, groupsV2GroupQuery.creationDate) &&
        Objects.equals(this.sortBy, groupsV2GroupQuery.sortBy) &&
        Objects.equals(this.groupMemberCountFilter, groupsV2GroupQuery.groupMemberCountFilter) &&
        Objects.equals(this.localeFilter, groupsV2GroupQuery.localeFilter) &&
        Objects.equals(this.tagText, groupsV2GroupQuery.tagText) &&
        Objects.equals(this.itemsPerPage, groupsV2GroupQuery.itemsPerPage) &&
        Objects.equals(this.currentPage, groupsV2GroupQuery.currentPage) &&
        Objects.equals(this.requestContinuationToken, groupsV2GroupQuery.requestContinuationToken);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, groupType, creationDate, sortBy, groupMemberCountFilter, localeFilter, tagText, itemsPerPage, currentPage, requestContinuationToken);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GroupsV2GroupQuery {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    groupType: ").append(toIndentedString(groupType)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    sortBy: ").append(toIndentedString(sortBy)).append("\n");
    sb.append("    groupMemberCountFilter: ").append(toIndentedString(groupMemberCountFilter)).append("\n");
    sb.append("    localeFilter: ").append(toIndentedString(localeFilter)).append("\n");
    sb.append("    tagText: ").append(toIndentedString(tagText)).append("\n");
    sb.append("    itemsPerPage: ").append(toIndentedString(itemsPerPage)).append("\n");
    sb.append("    currentPage: ").append(toIndentedString(currentPage)).append("\n");
    sb.append("    requestContinuationToken: ").append(toIndentedString(requestContinuationToken)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

