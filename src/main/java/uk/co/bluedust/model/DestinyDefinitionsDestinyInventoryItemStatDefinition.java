/*
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.3.2
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package uk.co.bluedust.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Defines a specific stat value on an item, and the minimum/maximum range that we could compute for the item based on our heuristics for how the item might be generated.  Not guaranteed to match real-world instances of the item, but should hopefully at least be close. If it&#39;s not close, let us know on the Bungie API forums.
 */
@ApiModel(description = "Defines a specific stat value on an item, and the minimum/maximum range that we could compute for the item based on our heuristics for how the item might be generated.  Not guaranteed to match real-world instances of the item, but should hopefully at least be close. If it's not close, let us know on the Bungie API forums.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-11-04T16:59:02.979Z")
public class DestinyDefinitionsDestinyInventoryItemStatDefinition {
  @JsonProperty("statHash")
  private Integer statHash = null;

  @JsonProperty("value")
  private Integer value = null;

  @JsonProperty("minimum")
  private Integer minimum = null;

  @JsonProperty("maximum")
  private Integer maximum = null;

  public DestinyDefinitionsDestinyInventoryItemStatDefinition statHash(Integer statHash) {
    this.statHash = statHash;
    return this;
  }

   /**
   * The hash for the DestinyStatDefinition representing this stat.
   * @return statHash
  **/
  @ApiModelProperty(value = "The hash for the DestinyStatDefinition representing this stat.")
  public Integer getStatHash() {
    return statHash;
  }

  public void setStatHash(Integer statHash) {
    this.statHash = statHash;
  }

  public DestinyDefinitionsDestinyInventoryItemStatDefinition value(Integer value) {
    this.value = value;
    return this;
  }

   /**
   * This value represents the stat value assuming the minimum possible roll but accounting for any mandatory bonuses that should be applied to the stat on item creation.  In Destiny 1, this was different from the \&quot;minimum\&quot; value because there were certain conditions where an item could be theoretically lower level/value than the initial roll.   In Destiny 2, this is not possible unless Talent Grids begin to be used again for these purposes or some other system change occurs... thus in practice, value and minimum should be the same in Destiny 2. Good riddance.
   * @return value
  **/
  @ApiModelProperty(value = "This value represents the stat value assuming the minimum possible roll but accounting for any mandatory bonuses that should be applied to the stat on item creation.  In Destiny 1, this was different from the \"minimum\" value because there were certain conditions where an item could be theoretically lower level/value than the initial roll.   In Destiny 2, this is not possible unless Talent Grids begin to be used again for these purposes or some other system change occurs... thus in practice, value and minimum should be the same in Destiny 2. Good riddance.")
  public Integer getValue() {
    return value;
  }

  public void setValue(Integer value) {
    this.value = value;
  }

  public DestinyDefinitionsDestinyInventoryItemStatDefinition minimum(Integer minimum) {
    this.minimum = minimum;
    return this;
  }

   /**
   * The minimum possible value for this stat that we think the item can roll.
   * @return minimum
  **/
  @ApiModelProperty(value = "The minimum possible value for this stat that we think the item can roll.")
  public Integer getMinimum() {
    return minimum;
  }

  public void setMinimum(Integer minimum) {
    this.minimum = minimum;
  }

  public DestinyDefinitionsDestinyInventoryItemStatDefinition maximum(Integer maximum) {
    this.maximum = maximum;
    return this;
  }

   /**
   * The maximum possible value for this stat that we think the item can roll.  WARNING: In Destiny 1, this field was calculated using the potential stat rolls on the item&#39;s talent grid. In Destiny 2, items no longer have meaningful talent grids and instead have sockets: but the calculation of this field was never altered to adapt to this change. As such, this field should be considered deprecated until we can address this oversight.
   * @return maximum
  **/
  @ApiModelProperty(value = "The maximum possible value for this stat that we think the item can roll.  WARNING: In Destiny 1, this field was calculated using the potential stat rolls on the item's talent grid. In Destiny 2, items no longer have meaningful talent grids and instead have sockets: but the calculation of this field was never altered to adapt to this change. As such, this field should be considered deprecated until we can address this oversight.")
  public Integer getMaximum() {
    return maximum;
  }

  public void setMaximum(Integer maximum) {
    this.maximum = maximum;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DestinyDefinitionsDestinyInventoryItemStatDefinition destinyDefinitionsDestinyInventoryItemStatDefinition = (DestinyDefinitionsDestinyInventoryItemStatDefinition) o;
    return Objects.equals(this.statHash, destinyDefinitionsDestinyInventoryItemStatDefinition.statHash) &&
        Objects.equals(this.value, destinyDefinitionsDestinyInventoryItemStatDefinition.value) &&
        Objects.equals(this.minimum, destinyDefinitionsDestinyInventoryItemStatDefinition.minimum) &&
        Objects.equals(this.maximum, destinyDefinitionsDestinyInventoryItemStatDefinition.maximum);
  }

  @Override
  public int hashCode() {
    return Objects.hash(statHash, value, minimum, maximum);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DestinyDefinitionsDestinyInventoryItemStatDefinition {\n");
    
    sb.append("    statHash: ").append(toIndentedString(statHash)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    minimum: ").append(toIndentedString(minimum)).append("\n");
    sb.append("    maximum: ").append(toIndentedString(maximum)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

