/*
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.3.2
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package uk.co.bluedust.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import uk.co.bluedust.model.DestinyDefinitionsDestinyVendorInventoryFlyoutBucketDefinition;

/**
 * The definition for an \&quot;inventory flyout\&quot;: a UI screen where we show you part of an otherwise hidden vendor inventory: like the Vault inventory buckets.
 */
@ApiModel(description = "The definition for an \"inventory flyout\": a UI screen where we show you part of an otherwise hidden vendor inventory: like the Vault inventory buckets.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-12-08T21:00:47.497Z")
public class DestinyDefinitionsDestinyVendorInventoryFlyoutDefinition {
  @JsonProperty("lockedDescription")
  private String lockedDescription = null;

  @JsonProperty("displayProperties")
  private Object displayProperties = null;

  @JsonProperty("buckets")
  private List<DestinyDefinitionsDestinyVendorInventoryFlyoutBucketDefinition> buckets = null;

  @JsonProperty("flyoutId")
  private Long flyoutId = null;

  @JsonProperty("suppressNewness")
  private Boolean suppressNewness = null;

  @JsonProperty("equipmentSlotHash")
  private Long equipmentSlotHash = null;

  public DestinyDefinitionsDestinyVendorInventoryFlyoutDefinition lockedDescription(String lockedDescription) {
    this.lockedDescription = lockedDescription;
    return this;
  }

   /**
   * If the flyout is locked, this is the reason why.
   * @return lockedDescription
  **/
  @ApiModelProperty(value = "If the flyout is locked, this is the reason why.")
  public String getLockedDescription() {
    return lockedDescription;
  }

  public void setLockedDescription(String lockedDescription) {
    this.lockedDescription = lockedDescription;
  }

  public DestinyDefinitionsDestinyVendorInventoryFlyoutDefinition displayProperties(Object displayProperties) {
    this.displayProperties = displayProperties;
    return this;
  }

   /**
   * The title and other common properties of the flyout.
   * @return displayProperties
  **/
  @ApiModelProperty(value = "The title and other common properties of the flyout.")
  public Object getDisplayProperties() {
    return displayProperties;
  }

  public void setDisplayProperties(Object displayProperties) {
    this.displayProperties = displayProperties;
  }

  public DestinyDefinitionsDestinyVendorInventoryFlyoutDefinition buckets(List<DestinyDefinitionsDestinyVendorInventoryFlyoutBucketDefinition> buckets) {
    this.buckets = buckets;
    return this;
  }

  public DestinyDefinitionsDestinyVendorInventoryFlyoutDefinition addBucketsItem(DestinyDefinitionsDestinyVendorInventoryFlyoutBucketDefinition bucketsItem) {
    if (this.buckets == null) {
      this.buckets = new ArrayList<>();
    }
    this.buckets.add(bucketsItem);
    return this;
  }

   /**
   * A list of inventory buckets and other metadata to show on the screen.
   * @return buckets
  **/
  @ApiModelProperty(value = "A list of inventory buckets and other metadata to show on the screen.")
  public List<DestinyDefinitionsDestinyVendorInventoryFlyoutBucketDefinition> getBuckets() {
    return buckets;
  }

  public void setBuckets(List<DestinyDefinitionsDestinyVendorInventoryFlyoutBucketDefinition> buckets) {
    this.buckets = buckets;
  }

  public DestinyDefinitionsDestinyVendorInventoryFlyoutDefinition flyoutId(Long flyoutId) {
    this.flyoutId = flyoutId;
    return this;
  }

   /**
   * An identifier for the flyout, in case anything else needs to refer to them.
   * @return flyoutId
  **/
  @ApiModelProperty(value = "An identifier for the flyout, in case anything else needs to refer to them.")
  public Long getFlyoutId() {
    return flyoutId;
  }

  public void setFlyoutId(Long flyoutId) {
    this.flyoutId = flyoutId;
  }

  public DestinyDefinitionsDestinyVendorInventoryFlyoutDefinition suppressNewness(Boolean suppressNewness) {
    this.suppressNewness = suppressNewness;
    return this;
  }

   /**
   * If this is true, don&#39;t show any of the glistening \&quot;this is a new item\&quot; UI elements, like we show on the inventory items themselves in in-game UI.
   * @return suppressNewness
  **/
  @ApiModelProperty(value = "If this is true, don't show any of the glistening \"this is a new item\" UI elements, like we show on the inventory items themselves in in-game UI.")
  public Boolean isSuppressNewness() {
    return suppressNewness;
  }

  public void setSuppressNewness(Boolean suppressNewness) {
    this.suppressNewness = suppressNewness;
  }

  public DestinyDefinitionsDestinyVendorInventoryFlyoutDefinition equipmentSlotHash(Long equipmentSlotHash) {
    this.equipmentSlotHash = equipmentSlotHash;
    return this;
  }

   /**
   * If this flyout is meant to show you the contents of the player&#39;s equipment slot, this is the slot to show.
   * @return equipmentSlotHash
  **/
  @ApiModelProperty(value = "If this flyout is meant to show you the contents of the player's equipment slot, this is the slot to show.")
  public Long getEquipmentSlotHash() {
    return equipmentSlotHash;
  }

  public void setEquipmentSlotHash(Long equipmentSlotHash) {
    this.equipmentSlotHash = equipmentSlotHash;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DestinyDefinitionsDestinyVendorInventoryFlyoutDefinition destinyDefinitionsDestinyVendorInventoryFlyoutDefinition = (DestinyDefinitionsDestinyVendorInventoryFlyoutDefinition) o;
    return Objects.equals(this.lockedDescription, destinyDefinitionsDestinyVendorInventoryFlyoutDefinition.lockedDescription) &&
        Objects.equals(this.displayProperties, destinyDefinitionsDestinyVendorInventoryFlyoutDefinition.displayProperties) &&
        Objects.equals(this.buckets, destinyDefinitionsDestinyVendorInventoryFlyoutDefinition.buckets) &&
        Objects.equals(this.flyoutId, destinyDefinitionsDestinyVendorInventoryFlyoutDefinition.flyoutId) &&
        Objects.equals(this.suppressNewness, destinyDefinitionsDestinyVendorInventoryFlyoutDefinition.suppressNewness) &&
        Objects.equals(this.equipmentSlotHash, destinyDefinitionsDestinyVendorInventoryFlyoutDefinition.equipmentSlotHash);
  }

  @Override
  public int hashCode() {
    return Objects.hash(lockedDescription, displayProperties, buckets, flyoutId, suppressNewness, equipmentSlotHash);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DestinyDefinitionsDestinyVendorInventoryFlyoutDefinition {\n");
    
    sb.append("    lockedDescription: ").append(toIndentedString(lockedDescription)).append("\n");
    sb.append("    displayProperties: ").append(toIndentedString(displayProperties)).append("\n");
    sb.append("    buckets: ").append(toIndentedString(buckets)).append("\n");
    sb.append("    flyoutId: ").append(toIndentedString(flyoutId)).append("\n");
    sb.append("    suppressNewness: ").append(toIndentedString(suppressNewness)).append("\n");
    sb.append("    equipmentSlotHash: ").append(toIndentedString(equipmentSlotHash)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

