/*
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.3.2
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package uk.co.bluedust.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Returns the detailed information about a Collectible Presentation Node and any Collectibles that are direct descendants.
 */
@ApiModel(description = "Returns the detailed information about a Collectible Presentation Node and any Collectibles that are direct descendants.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-11-04T16:50:06.922Z")
public class DestinyResponsesDestinyCollectibleNodeDetailResponse {
  @JsonProperty("collectibles")
  private Object collectibles = null;

  @JsonProperty("collectibleItemComponents")
  private Object collectibleItemComponents = null;

  public DestinyResponsesDestinyCollectibleNodeDetailResponse collectibles(Object collectibles) {
    this.collectibles = collectibles;
    return this;
  }

   /**
   * COMPONENT TYPE: Collectibles
   * @return collectibles
  **/
  @ApiModelProperty(value = "COMPONENT TYPE: Collectibles")
  public Object getCollectibles() {
    return collectibles;
  }

  public void setCollectibles(Object collectibles) {
    this.collectibles = collectibles;
  }

  public DestinyResponsesDestinyCollectibleNodeDetailResponse collectibleItemComponents(Object collectibleItemComponents) {
    this.collectibleItemComponents = collectibleItemComponents;
    return this;
  }

   /**
   * Item components, keyed by the item hash of the items pointed at collectibles found under the requested Presentation Node.  NOTE: I had a lot of hemming and hawing about whether these should be keyed by collectible hash or item hash... but ultimately having it be keyed by item hash meant that UI that already uses DestinyItemComponentSet data wouldn&#39;t have to have a special override to do the collectible -&gt; item lookup once you delve into an item&#39;s details, and it also meant that you didn&#39;t have to remember that the Hash being used as the key for plugSets was different from the Hash being used for the other Dictionaries. As a result, using the Item Hash felt like the least crappy solution.  We may all come to regret this decision. We will see.  COMPONENT TYPE: [See inside the DestinyItemComponentSet contract for component types.]
   * @return collectibleItemComponents
  **/
  @ApiModelProperty(value = "Item components, keyed by the item hash of the items pointed at collectibles found under the requested Presentation Node.  NOTE: I had a lot of hemming and hawing about whether these should be keyed by collectible hash or item hash... but ultimately having it be keyed by item hash meant that UI that already uses DestinyItemComponentSet data wouldn't have to have a special override to do the collectible -> item lookup once you delve into an item's details, and it also meant that you didn't have to remember that the Hash being used as the key for plugSets was different from the Hash being used for the other Dictionaries. As a result, using the Item Hash felt like the least crappy solution.  We may all come to regret this decision. We will see.  COMPONENT TYPE: [See inside the DestinyItemComponentSet contract for component types.]")
  public Object getCollectibleItemComponents() {
    return collectibleItemComponents;
  }

  public void setCollectibleItemComponents(Object collectibleItemComponents) {
    this.collectibleItemComponents = collectibleItemComponents;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DestinyResponsesDestinyCollectibleNodeDetailResponse destinyResponsesDestinyCollectibleNodeDetailResponse = (DestinyResponsesDestinyCollectibleNodeDetailResponse) o;
    return Objects.equals(this.collectibles, destinyResponsesDestinyCollectibleNodeDetailResponse.collectibles) &&
        Objects.equals(this.collectibleItemComponents, destinyResponsesDestinyCollectibleNodeDetailResponse.collectibleItemComponents);
  }

  @Override
  public int hashCode() {
    return Objects.hash(collectibles, collectibleItemComponents);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DestinyResponsesDestinyCollectibleNodeDetailResponse {\n");
    
    sb.append("    collectibles: ").append(toIndentedString(collectibles)).append("\n");
    sb.append("    collectibleItemComponents: ").append(toIndentedString(collectibleItemComponents)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

