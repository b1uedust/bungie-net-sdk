/*
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.3.2
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package uk.co.bluedust.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import uk.co.bluedust.model.DestinyDefinitionsDestinyUnlockExpressionDefinition;
import uk.co.bluedust.model.DestinyDefinitionsDirectorDestinyLinkedGraphEntryDefinition;

/**
 * This describes links between the current graph and others, as well as when that link is relevant.
 */
@ApiModel(description = "This describes links between the current graph and others, as well as when that link is relevant.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-09-29T19:57:25.109+01:00")
public class DestinyDefinitionsDirectorDestinyLinkedGraphDefinition {
  @JsonProperty("description")
  private String description = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("unlockExpression")
  private DestinyDefinitionsDestinyUnlockExpressionDefinition unlockExpression = null;

  @JsonProperty("linkedGraphId")
  private Integer linkedGraphId = null;

  @JsonProperty("linkedGraphs")
  private List<DestinyDefinitionsDirectorDestinyLinkedGraphEntryDefinition> linkedGraphs = null;

  @JsonProperty("overview")
  private String overview = null;

  public DestinyDefinitionsDirectorDestinyLinkedGraphDefinition description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public DestinyDefinitionsDirectorDestinyLinkedGraphDefinition name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public DestinyDefinitionsDirectorDestinyLinkedGraphDefinition unlockExpression(DestinyDefinitionsDestinyUnlockExpressionDefinition unlockExpression) {
    this.unlockExpression = unlockExpression;
    return this;
  }

   /**
   * Get unlockExpression
   * @return unlockExpression
  **/
  @ApiModelProperty(value = "")
  public DestinyDefinitionsDestinyUnlockExpressionDefinition getUnlockExpression() {
    return unlockExpression;
  }

  public void setUnlockExpression(DestinyDefinitionsDestinyUnlockExpressionDefinition unlockExpression) {
    this.unlockExpression = unlockExpression;
  }

  public DestinyDefinitionsDirectorDestinyLinkedGraphDefinition linkedGraphId(Integer linkedGraphId) {
    this.linkedGraphId = linkedGraphId;
    return this;
  }

   /**
   * Get linkedGraphId
   * @return linkedGraphId
  **/
  @ApiModelProperty(value = "")
  public Integer getLinkedGraphId() {
    return linkedGraphId;
  }

  public void setLinkedGraphId(Integer linkedGraphId) {
    this.linkedGraphId = linkedGraphId;
  }

  public DestinyDefinitionsDirectorDestinyLinkedGraphDefinition linkedGraphs(List<DestinyDefinitionsDirectorDestinyLinkedGraphEntryDefinition> linkedGraphs) {
    this.linkedGraphs = linkedGraphs;
    return this;
  }

  public DestinyDefinitionsDirectorDestinyLinkedGraphDefinition addLinkedGraphsItem(DestinyDefinitionsDirectorDestinyLinkedGraphEntryDefinition linkedGraphsItem) {
    if (this.linkedGraphs == null) {
      this.linkedGraphs = new ArrayList<>();
    }
    this.linkedGraphs.add(linkedGraphsItem);
    return this;
  }

   /**
   * Get linkedGraphs
   * @return linkedGraphs
  **/
  @ApiModelProperty(value = "")
  public List<DestinyDefinitionsDirectorDestinyLinkedGraphEntryDefinition> getLinkedGraphs() {
    return linkedGraphs;
  }

  public void setLinkedGraphs(List<DestinyDefinitionsDirectorDestinyLinkedGraphEntryDefinition> linkedGraphs) {
    this.linkedGraphs = linkedGraphs;
  }

  public DestinyDefinitionsDirectorDestinyLinkedGraphDefinition overview(String overview) {
    this.overview = overview;
    return this;
  }

   /**
   * Get overview
   * @return overview
  **/
  @ApiModelProperty(value = "")
  public String getOverview() {
    return overview;
  }

  public void setOverview(String overview) {
    this.overview = overview;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DestinyDefinitionsDirectorDestinyLinkedGraphDefinition destinyDefinitionsDirectorDestinyLinkedGraphDefinition = (DestinyDefinitionsDirectorDestinyLinkedGraphDefinition) o;
    return Objects.equals(this.description, destinyDefinitionsDirectorDestinyLinkedGraphDefinition.description) &&
        Objects.equals(this.name, destinyDefinitionsDirectorDestinyLinkedGraphDefinition.name) &&
        Objects.equals(this.unlockExpression, destinyDefinitionsDirectorDestinyLinkedGraphDefinition.unlockExpression) &&
        Objects.equals(this.linkedGraphId, destinyDefinitionsDirectorDestinyLinkedGraphDefinition.linkedGraphId) &&
        Objects.equals(this.linkedGraphs, destinyDefinitionsDirectorDestinyLinkedGraphDefinition.linkedGraphs) &&
        Objects.equals(this.overview, destinyDefinitionsDirectorDestinyLinkedGraphDefinition.overview);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, name, unlockExpression, linkedGraphId, linkedGraphs, overview);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DestinyDefinitionsDirectorDestinyLinkedGraphDefinition {\n");
    
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    unlockExpression: ").append(toIndentedString(unlockExpression)).append("\n");
    sb.append("    linkedGraphId: ").append(toIndentedString(linkedGraphId)).append("\n");
    sb.append("    linkedGraphs: ").append(toIndentedString(linkedGraphs)).append("\n");
    sb.append("    overview: ").append(toIndentedString(overview)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

