/*
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.3.2
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package uk.co.bluedust.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import uk.co.bluedust.model.DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition;
import uk.co.bluedust.model.DestinyDefinitionsDestinyActivityGraphListEntryDefinition;
import uk.co.bluedust.model.DestinyDefinitionsDestinyBubbleDefinition;
import uk.co.bluedust.model.DestinyDefinitionsDestinyDestinationBubbleSettingDefinition;

/**
 * On to one of the more confusing subjects of the API. What is a Destination, and what is the relationship between it, Activities, Locations, and Places?  A \&quot;Destination\&quot; is a specific region/city/area of a larger \&quot;Place\&quot;. For instance, a Place might be Earth where a Destination might be Bellevue, Washington. (Please, pick a more interesting destination if you come to visit Earth).
 */
@ApiModel(description = "On to one of the more confusing subjects of the API. What is a Destination, and what is the relationship between it, Activities, Locations, and Places?  A \"Destination\" is a specific region/city/area of a larger \"Place\". For instance, a Place might be Earth where a Destination might be Bellevue, Washington. (Please, pick a more interesting destination if you come to visit Earth).")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-09-29T19:57:25.109+01:00")
public class DestinyDefinitionsDestinyDestinationDefinition {
  @JsonProperty("displayProperties")
  private DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition displayProperties = null;

  @JsonProperty("placeHash")
  private Integer placeHash = null;

  @JsonProperty("defaultFreeroamActivityHash")
  private Integer defaultFreeroamActivityHash = null;

  @JsonProperty("activityGraphEntries")
  private List<DestinyDefinitionsDestinyActivityGraphListEntryDefinition> activityGraphEntries = null;

  @JsonProperty("bubbleSettings")
  private List<DestinyDefinitionsDestinyDestinationBubbleSettingDefinition> bubbleSettings = null;

  @JsonProperty("bubbles")
  private List<DestinyDefinitionsDestinyBubbleDefinition> bubbles = null;

  @JsonProperty("hash")
  private Integer hash = null;

  @JsonProperty("index")
  private Integer index = null;

  @JsonProperty("redacted")
  private Boolean redacted = null;

  public DestinyDefinitionsDestinyDestinationDefinition displayProperties(DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition displayProperties) {
    this.displayProperties = displayProperties;
    return this;
  }

   /**
   * Get displayProperties
   * @return displayProperties
  **/
  @ApiModelProperty(value = "")
  public DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition getDisplayProperties() {
    return displayProperties;
  }

  public void setDisplayProperties(DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition displayProperties) {
    this.displayProperties = displayProperties;
  }

  public DestinyDefinitionsDestinyDestinationDefinition placeHash(Integer placeHash) {
    this.placeHash = placeHash;
    return this;
  }

   /**
   * The place that \&quot;owns\&quot; this Destination. Use this hash to look up the DestinyPlaceDefinition.
   * @return placeHash
  **/
  @ApiModelProperty(value = "The place that \"owns\" this Destination. Use this hash to look up the DestinyPlaceDefinition.")
  public Integer getPlaceHash() {
    return placeHash;
  }

  public void setPlaceHash(Integer placeHash) {
    this.placeHash = placeHash;
  }

  public DestinyDefinitionsDestinyDestinationDefinition defaultFreeroamActivityHash(Integer defaultFreeroamActivityHash) {
    this.defaultFreeroamActivityHash = defaultFreeroamActivityHash;
    return this;
  }

   /**
   * If this Destination has a default Free-Roam activity, this is the hash for that Activity. Use it to look up the DestinyActivityDefintion.
   * @return defaultFreeroamActivityHash
  **/
  @ApiModelProperty(value = "If this Destination has a default Free-Roam activity, this is the hash for that Activity. Use it to look up the DestinyActivityDefintion.")
  public Integer getDefaultFreeroamActivityHash() {
    return defaultFreeroamActivityHash;
  }

  public void setDefaultFreeroamActivityHash(Integer defaultFreeroamActivityHash) {
    this.defaultFreeroamActivityHash = defaultFreeroamActivityHash;
  }

  public DestinyDefinitionsDestinyDestinationDefinition activityGraphEntries(List<DestinyDefinitionsDestinyActivityGraphListEntryDefinition> activityGraphEntries) {
    this.activityGraphEntries = activityGraphEntries;
    return this;
  }

  public DestinyDefinitionsDestinyDestinationDefinition addActivityGraphEntriesItem(DestinyDefinitionsDestinyActivityGraphListEntryDefinition activityGraphEntriesItem) {
    if (this.activityGraphEntries == null) {
      this.activityGraphEntries = new ArrayList<>();
    }
    this.activityGraphEntries.add(activityGraphEntriesItem);
    return this;
  }

   /**
   * If the Destination has default Activity Graphs (i.e. \&quot;Map\&quot;) that should be shown in the director, this is the list of those Graphs. At most, only one should be active at any given time for a Destination: these would represent, for example, different variants on a Map if the Destination is changing on a macro level based on game state.
   * @return activityGraphEntries
  **/
  @ApiModelProperty(value = "If the Destination has default Activity Graphs (i.e. \"Map\") that should be shown in the director, this is the list of those Graphs. At most, only one should be active at any given time for a Destination: these would represent, for example, different variants on a Map if the Destination is changing on a macro level based on game state.")
  public List<DestinyDefinitionsDestinyActivityGraphListEntryDefinition> getActivityGraphEntries() {
    return activityGraphEntries;
  }

  public void setActivityGraphEntries(List<DestinyDefinitionsDestinyActivityGraphListEntryDefinition> activityGraphEntries) {
    this.activityGraphEntries = activityGraphEntries;
  }

  public DestinyDefinitionsDestinyDestinationDefinition bubbleSettings(List<DestinyDefinitionsDestinyDestinationBubbleSettingDefinition> bubbleSettings) {
    this.bubbleSettings = bubbleSettings;
    return this;
  }

  public DestinyDefinitionsDestinyDestinationDefinition addBubbleSettingsItem(DestinyDefinitionsDestinyDestinationBubbleSettingDefinition bubbleSettingsItem) {
    if (this.bubbleSettings == null) {
      this.bubbleSettings = new ArrayList<>();
    }
    this.bubbleSettings.add(bubbleSettingsItem);
    return this;
  }

   /**
   * A Destination may have many \&quot;Bubbles\&quot; zones with human readable properties.  We don&#39;t get as much info as I&#39;d like about them - I&#39;d love to return info like where on the map they are located - but at least this gives you the name of those bubbles. bubbleSettings and bubbles both have the identical number of entries, and you should match up their indexes to provide matching bubble and bubbleSettings data.  DEPRECATED - Just use bubbles, it now has this data.
   * @return bubbleSettings
  **/
  @ApiModelProperty(value = "A Destination may have many \"Bubbles\" zones with human readable properties.  We don't get as much info as I'd like about them - I'd love to return info like where on the map they are located - but at least this gives you the name of those bubbles. bubbleSettings and bubbles both have the identical number of entries, and you should match up their indexes to provide matching bubble and bubbleSettings data.  DEPRECATED - Just use bubbles, it now has this data.")
  public List<DestinyDefinitionsDestinyDestinationBubbleSettingDefinition> getBubbleSettings() {
    return bubbleSettings;
  }

  public void setBubbleSettings(List<DestinyDefinitionsDestinyDestinationBubbleSettingDefinition> bubbleSettings) {
    this.bubbleSettings = bubbleSettings;
  }

  public DestinyDefinitionsDestinyDestinationDefinition bubbles(List<DestinyDefinitionsDestinyBubbleDefinition> bubbles) {
    this.bubbles = bubbles;
    return this;
  }

  public DestinyDefinitionsDestinyDestinationDefinition addBubblesItem(DestinyDefinitionsDestinyBubbleDefinition bubblesItem) {
    if (this.bubbles == null) {
      this.bubbles = new ArrayList<>();
    }
    this.bubbles.add(bubblesItem);
    return this;
  }

   /**
   * This provides the unique identifiers for every bubble in the destination (only guaranteed unique within the destination), and any intrinsic properties of the bubble.  bubbleSettings and bubbles both have the identical number of entries, and you should match up their indexes to provide matching bubble and bubbleSettings data.
   * @return bubbles
  **/
  @ApiModelProperty(value = "This provides the unique identifiers for every bubble in the destination (only guaranteed unique within the destination), and any intrinsic properties of the bubble.  bubbleSettings and bubbles both have the identical number of entries, and you should match up their indexes to provide matching bubble and bubbleSettings data.")
  public List<DestinyDefinitionsDestinyBubbleDefinition> getBubbles() {
    return bubbles;
  }

  public void setBubbles(List<DestinyDefinitionsDestinyBubbleDefinition> bubbles) {
    this.bubbles = bubbles;
  }

  public DestinyDefinitionsDestinyDestinationDefinition hash(Integer hash) {
    this.hash = hash;
    return this;
  }

   /**
   * The unique identifier for this entity. Guaranteed to be unique for the type of entity, but not globally.  When entities refer to each other in Destiny content, it is this hash that they are referring to.
   * @return hash
  **/
  @ApiModelProperty(value = "The unique identifier for this entity. Guaranteed to be unique for the type of entity, but not globally.  When entities refer to each other in Destiny content, it is this hash that they are referring to.")
  public Integer getHash() {
    return hash;
  }

  public void setHash(Integer hash) {
    this.hash = hash;
  }

  public DestinyDefinitionsDestinyDestinationDefinition index(Integer index) {
    this.index = index;
    return this;
  }

   /**
   * The index of the entity as it was found in the investment tables.
   * @return index
  **/
  @ApiModelProperty(value = "The index of the entity as it was found in the investment tables.")
  public Integer getIndex() {
    return index;
  }

  public void setIndex(Integer index) {
    this.index = index;
  }

  public DestinyDefinitionsDestinyDestinationDefinition redacted(Boolean redacted) {
    this.redacted = redacted;
    return this;
  }

   /**
   * If this is true, then there is an entity with this identifier/type combination, but BNet is not yet allowed to show it. Sorry!
   * @return redacted
  **/
  @ApiModelProperty(value = "If this is true, then there is an entity with this identifier/type combination, but BNet is not yet allowed to show it. Sorry!")
  public Boolean isRedacted() {
    return redacted;
  }

  public void setRedacted(Boolean redacted) {
    this.redacted = redacted;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DestinyDefinitionsDestinyDestinationDefinition destinyDefinitionsDestinyDestinationDefinition = (DestinyDefinitionsDestinyDestinationDefinition) o;
    return Objects.equals(this.displayProperties, destinyDefinitionsDestinyDestinationDefinition.displayProperties) &&
        Objects.equals(this.placeHash, destinyDefinitionsDestinyDestinationDefinition.placeHash) &&
        Objects.equals(this.defaultFreeroamActivityHash, destinyDefinitionsDestinyDestinationDefinition.defaultFreeroamActivityHash) &&
        Objects.equals(this.activityGraphEntries, destinyDefinitionsDestinyDestinationDefinition.activityGraphEntries) &&
        Objects.equals(this.bubbleSettings, destinyDefinitionsDestinyDestinationDefinition.bubbleSettings) &&
        Objects.equals(this.bubbles, destinyDefinitionsDestinyDestinationDefinition.bubbles) &&
        Objects.equals(this.hash, destinyDefinitionsDestinyDestinationDefinition.hash) &&
        Objects.equals(this.index, destinyDefinitionsDestinyDestinationDefinition.index) &&
        Objects.equals(this.redacted, destinyDefinitionsDestinyDestinationDefinition.redacted);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayProperties, placeHash, defaultFreeroamActivityHash, activityGraphEntries, bubbleSettings, bubbles, hash, index, redacted);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DestinyDefinitionsDestinyDestinationDefinition {\n");
    
    sb.append("    displayProperties: ").append(toIndentedString(displayProperties)).append("\n");
    sb.append("    placeHash: ").append(toIndentedString(placeHash)).append("\n");
    sb.append("    defaultFreeroamActivityHash: ").append(toIndentedString(defaultFreeroamActivityHash)).append("\n");
    sb.append("    activityGraphEntries: ").append(toIndentedString(activityGraphEntries)).append("\n");
    sb.append("    bubbleSettings: ").append(toIndentedString(bubbleSettings)).append("\n");
    sb.append("    bubbles: ").append(toIndentedString(bubbles)).append("\n");
    sb.append("    hash: ").append(toIndentedString(hash)).append("\n");
    sb.append("    index: ").append(toIndentedString(index)).append("\n");
    sb.append("    redacted: ").append(toIndentedString(redacted)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

