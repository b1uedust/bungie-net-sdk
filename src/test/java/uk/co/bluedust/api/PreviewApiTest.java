/*
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.3.2
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package uk.co.bluedust.api;

import uk.co.bluedust.model.InlineResponse20045;
import uk.co.bluedust.model.InlineResponse20048;
import uk.co.bluedust.model.InlineResponse20049;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PreviewApi
 */
@Ignore
public class PreviewApiTest {

    private final PreviewApi api = new PreviewApi();

    
    /**
     * 
     *
     * Gets aggregated stats for a clan using the same categories as the clan leaderboards. PREVIEW: This endpoint is still in beta, and may experience rough edges. The schema is in final form, but there may be bugs that prevent desirable operation.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void destiny2GetClanAggregateStatsTest() {
        Long groupId = null;
        String modes = null;
        InlineResponse20049 response = api.destiny2GetClanAggregateStats(groupId, modes);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Gets leaderboards with the signed in user&#39;s friends and the supplied destinyMembershipId as the focus. PREVIEW: This endpoint is still in beta, and may experience rough edges. The schema is in final form, but there may be bugs that prevent desirable operation.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void destiny2GetClanLeaderboardsTest() {
        Long groupId = null;
        Integer maxtop = null;
        String modes = null;
        String statid = null;
        InlineResponse20048 response = api.destiny2GetClanLeaderboards(groupId, maxtop, modes, statid);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Gets leaderboards with the signed in user&#39;s friends and the supplied destinyMembershipId as the focus. PREVIEW: This endpoint has not yet been implemented. It is being returned for a preview of future functionality, and for public comment/suggestion/preparation.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void destiny2GetLeaderboardsTest() {
        Long destinyMembershipId = null;
        Integer membershipType = null;
        Integer maxtop = null;
        String modes = null;
        String statid = null;
        InlineResponse20048 response = api.destiny2GetLeaderboards(destinyMembershipId, membershipType, maxtop, modes, statid);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Gets leaderboards with the signed in user&#39;s friends and the supplied destinyMembershipId as the focus. PREVIEW: This endpoint is still in beta, and may experience rough edges. The schema is in final form, but there may be bugs that prevent desirable operation.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void destiny2GetLeaderboardsForCharacterTest() {
        Long characterId = null;
        Long destinyMembershipId = null;
        Integer membershipType = null;
        Integer maxtop = null;
        String modes = null;
        String statid = null;
        InlineResponse20048 response = api.destiny2GetLeaderboardsForCharacter(characterId, destinyMembershipId, membershipType, maxtop, modes, statid);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Insert a plug into a socketed item. I know how it sounds, but I assure you it&#39;s much more G-rated than you might be guessing. We haven&#39;t decided yet whether this will be able to insert plugs that have side effects, but if we do it will require special scope permission for an application attempting to do so. You must have a valid Destiny Account, and either be in a social space, in orbit, or offline. Request must include proof of permission for &#39;InsertPlugs&#39; from the account owner.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void destiny2InsertSocketPlugTest() {
        InlineResponse20045 response = api.destiny2InsertSocketPlug();

        // TODO: test validations
    }
    
}
