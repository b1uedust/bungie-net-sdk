/*
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.3.2
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package uk.co.bluedust.api;

import uk.co.bluedust.model.InlineResponse2002;
import uk.co.bluedust.model.InlineResponse2003;
import uk.co.bluedust.model.InlineResponse2004;
import uk.co.bluedust.model.InlineResponse2005;
import uk.co.bluedust.model.InlineResponse2006;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for UserApi
 */
@Ignore
public class UserApiTest {

    private final UserApi api = new UserApi();

    
    /**
     * 
     *
     * Returns a list of all available user themes.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void userGetAvailableThemesTest() {
        InlineResponse2004 response = api.userGetAvailableThemes();

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Loads a bungienet user by membership id.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void userGetBungieNetUserByIdTest() {
        Long id = null;
        InlineResponse2002 response = api.userGetBungieNetUserById(id);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Returns a list of accounts associated with the supplied membership ID and membership type. This will include all linked accounts (even when hidden) if supplied credentials permit it.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void userGetMembershipDataByIdTest() {
        Long membershipId = null;
        Integer membershipType = null;
        InlineResponse2005 response = api.userGetMembershipDataById(membershipId, membershipType);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Returns a list of accounts associated with signed in user. This is useful for OAuth implementations that do not give you access to the token response.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void userGetMembershipDataForCurrentUserTest() {
        InlineResponse2005 response = api.userGetMembershipDataForCurrentUser();

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Returns a user&#39;s linked Partnerships.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void userGetPartnershipsTest() {
        Long membershipId = null;
        InlineResponse2006 response = api.userGetPartnerships(membershipId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Returns a list of possible users based on the search string
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void userSearchUsersTest() {
        String q = null;
        InlineResponse2003 response = api.userSearchUsers(q);

        // TODO: test validations
    }
    
}
