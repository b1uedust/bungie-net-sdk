/*
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.3.2
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package uk.co.bluedust.api;

import uk.co.bluedust.model.InlineResponse20010;
import uk.co.bluedust.model.InlineResponse20011;
import uk.co.bluedust.model.InlineResponse20012;
import uk.co.bluedust.model.InlineResponse20013;
import uk.co.bluedust.model.InlineResponse20014;
import uk.co.bluedust.model.InlineResponse20015;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ForumApi
 */
@Ignore
public class ForumApiTest {

    private final ForumApi api = new ForumApi();

    
    /**
     * 
     *
     * Allows the owner of a fireteam thread to approve all joined members and start a private message conversation with them.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void forumApproveFireteamThreadTest() {
        Long topicId = null;
        InlineResponse20014 response = api.forumApproveFireteamThread(topicId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Gets a listing of all topics marked as part of the core group.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void forumGetCoreTopicsPagedTest() {
        Integer categoryFilter = null;
        Integer page = null;
        Integer quickDate = null;
        Integer sort = null;
        String locales = null;
        InlineResponse20010 response = api.forumGetCoreTopicsPaged(categoryFilter, page, quickDate, sort, locales);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Gets tag suggestions based on partial text entry, matching them with other tags previously used in the forums.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void forumGetForumTagSuggestionsTest() {
        String partialtag = null;
        InlineResponse20012 response = api.forumGetForumTagSuggestions(partialtag);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Gets the specified forum poll.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void forumGetPollTest() {
        Long topicId = null;
        InlineResponse20010 response = api.forumGetPoll(topicId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Returns the post specified and its immediate parent.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void forumGetPostAndParentTest() {
        Long childPostId = null;
        String showbanned = null;
        InlineResponse20010 response = api.forumGetPostAndParent(childPostId, showbanned);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Returns the post specified and its immediate parent of posts that are awaiting approval.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void forumGetPostAndParentAwaitingApprovalTest() {
        Long childPostId = null;
        String showbanned = null;
        InlineResponse20010 response = api.forumGetPostAndParentAwaitingApproval(childPostId, showbanned);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Returns a thread of posts at the given parent, optionally returning replies to those posts as well as the original parent.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void forumGetPostsThreadedPagedTest() {
        Boolean getParentPost = null;
        Integer page = null;
        Integer pageSize = null;
        Long parentPostId = null;
        Integer replySize = null;
        Boolean rootThreadMode = null;
        Integer sortMode = null;
        String showbanned = null;
        InlineResponse20010 response = api.forumGetPostsThreadedPaged(getParentPost, page, pageSize, parentPostId, replySize, rootThreadMode, sortMode, showbanned);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Returns a thread of posts starting at the topicId of the input childPostId, optionally returning replies to those posts as well as the original parent.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void forumGetPostsThreadedPagedFromChildTest() {
        Long childPostId = null;
        Integer page = null;
        Integer pageSize = null;
        Integer replySize = null;
        Boolean rootThreadMode = null;
        Integer sortMode = null;
        String showbanned = null;
        InlineResponse20010 response = api.forumGetPostsThreadedPagedFromChild(childPostId, page, pageSize, replySize, rootThreadMode, sortMode, showbanned);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Allows the caller to get a list of to 25 recruitment thread summary information objects.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void forumGetRecruitmentThreadSummariesTest() {
        InlineResponse20015 response = api.forumGetRecruitmentThreadSummaries();

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Gets the post Id for the given content item&#39;s comments, if it exists.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void forumGetTopicForContentTest() {
        Long contentId = null;
        InlineResponse20011 response = api.forumGetTopicForContent(contentId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Get topics from any forum.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void forumGetTopicsPagedTest() {
        Integer categoryFilter = null;
        Long group = null;
        Integer page = null;
        Integer pageSize = null;
        Integer quickDate = null;
        Integer sort = null;
        String locales = null;
        String tagstring = null;
        InlineResponse20010 response = api.forumGetTopicsPaged(categoryFilter, group, page, pageSize, quickDate, sort, locales, tagstring);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Allows a user to slot themselves into a recruitment thread fireteam slot. Returns the new state of the fireteam.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void forumJoinFireteamThreadTest() {
        Long topicId = null;
        InlineResponse20013 response = api.forumJoinFireteamThread(topicId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Allows a recruitment thread owner to kick a join user from the fireteam. Returns the new state of the fireteam.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void forumKickBanFireteamApplicantTest() {
        Long targetMembershipId = null;
        Long topicId = null;
        InlineResponse20013 response = api.forumKickBanFireteamApplicant(targetMembershipId, topicId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Allows a user to remove themselves from a recruitment thread fireteam slot. Returns the new state of the fireteam.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void forumLeaveFireteamThreadTest() {
        Long topicId = null;
        InlineResponse20013 response = api.forumLeaveFireteamThread(topicId);

        // TODO: test validations
    }
    
}
